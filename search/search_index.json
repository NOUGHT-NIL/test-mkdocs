{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to my notebook!","text":":material-circle-edit-outline: \u7ea6 228 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f  <p>\u6765\u81ea\u67d0\u4e2aCS\u83dc\u72d7\u7684\u7b14\u8bb0</p> \u9605\u8bfb\u524d\u987b\u77e5 <p>\u672c\u7b14\u8bb0\u76ee\u524d\u8fd8\u6ca1\u6709\u5b8c\u5168\u642d\u5efa\u597d\uff0c\u800c\u4e14\u6211\u8fd8\u4e0d\u662f\u7279\u522b\u719f\u6089mkdocs-material\u7684\u5168\u90e8\u529f\u80fd\uff0c\u518d\u52a0\u4e0ahtml+css+js\u5b66\u7684\u5f88\u4e0d\u624e\u5b9e\uff0c\u6240\u4ee5\u76ee\u524d\u6211\u8fd8\u5728\u4e3a\u914d\u7f6e\u7f51\u7ad9\u82e6\u82e6\u6323\u624eing\u3002</p> <p>\u9884\u8ba1\u5728\u8fd9\u4e2a\u6691\u5047\u5b8c\u6210\u7f51\u7ad9\u7684\u6574\u4f53\u5e03\u7f6e</p> \u8ba1\u5212 <ul> <li> \u5c06\u5927\u4e00\u6625\u590f\u5b66\u671f\u7684\u4e13\u4e1a\u8bfe\u7684\u7b14\u8bb0\u6574\u7406\u4e0a\u4f20</li> <li> \u6574\u4e2a\u5927\u4e00\u5b66\u671f\u7684\u5b66\u4e60\u7ecf\u9a8c</li> <li> the missing semester \u7b14\u8bb0</li> <li> \u81ea\u5b66\u7b14\u8bb0(\u6691\u5047\u6253\u7b97\u770bcs61a\u548ccs61b)</li> <li> ......</li> </ul> \u4e00\u4e9b\u56f0\u60d1 <ul> <li>\u4e0d\u77e5\u600e\u4e48\u7684\uff0c\u6807\u9898\u4e0b\u7ad9\u70b9\u7edf\u8ba1\u7684\u56fe\u8868\u65e0\u6cd5\u6b63\u5e38\u663e\u793a(\u7528\u7684\u662fxg\u7684\u63d2\u4ef6\uff0c\u5c31\u5728<code>mkdocs.yml</code>\u6dfb\u4e86\u4e00\u53e5\u8bdd)</li> <li>\u5728markdown\u81ea\u5e26\u7684\u5f15\u7528\u6846\u4e0b\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u65e0\u5e8f\u548c\u6709\u5e8f\u5217\u8868</li> <li>...</li> </ul> <p>\u5982\u679c\u5404\u4f4d\u6709\u4ec0\u4e48\u597d\u7684\u5efa\u8bae\uff0c\u6b22\u8fce\u5728\u4e0b\u9762\u7684\u8bc4\u8bba\u533a\u7559\u8a00\uff01</p>"},{"location":"exp/","title":"Exp","text":":material-circle-edit-outline: \u7ea6 0 \u4e2a\u5b57"},{"location":"tools/","title":"Tools","text":":material-circle-edit-outline: \u7ea6 0 \u4e2a\u5b57"},{"location":"notebooks/calculus/10/","title":"10","text":":material-circle-edit-outline: \u7ea6 488 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f"},{"location":"notebooks/calculus/10/#101","title":"10.1 \u7b2c\u4e8c\u7c7b\u66f2\u7ebf\u79ef\u5206","text":"<p>\u5b9a\u4e49\uff1a</p> <p>\u8bbe\\(\\Gamma\\)\u662f\u4ee5A, B\u4e3a\u7aef\u70b9\u7684\u5149\u6ed1\u66f2\u7ebf\uff0c\u5e76\u6307\u5b9a\u4eceA\u5230B\u7684\u65b9\u5411\u4e3a\u66f2\u7ebf\u65b9\u5411\uff0c\u5728\\(\\Gamma\\)\u4e0a\u6bcf\u4e00\u70b9M\u5904\u4f5c\u66f2\u7ebf\u7684\u5355\u4f4d\u5207\u77e2\u91cf\uff1a\\(\\symbfit{e_T} = \\cos{\\alpha} \\symbfit{i} + \\cos{\\beta} \\symbfit{j} + \\cos{\\gamma} \\symbfit{k}\\)\uff0c\u65b9\u5411\u4e0e\u6307\u5b9a\u66f2\u7ebf\u65b9\u5411\u4e00\u81f4(\\(\\alpha, \\beta, \\gamma\\)\u5206\u522b\u4e3a\\(\\symbfit{e_T}\\)\u4e0eOx\u8f74\u3001Oy\u8f74\u3001Oz\u8f74\u6b63\u5411\u7684\u5939\u89d2)\uff0c</p> <p>\u8bbe\\(\\symbfit{A}(M) = P(x, y, z)\\symbfit{i} + Q(x, y, z)\\symbfit{j} + R(x, y, z)\\symbfit{k}\\)\uff0c\u5176\u4e2dP, Q, R\u4e3a\u5b9a\u4e49\u5728 \\(\\Gamma\\)\u4e0a\u7684\u6709\u754c\u51fd\u6570\uff0c\u5219\uff1a $$ \\int\\limits_{\\Gamma} \\symbfit{A \\cdot e_T} ds = \\int\\limits_{\\Gamma}(P \\cos{\\alpha} + Q \\cos{\\beta} + R\\cos{\\gamma}) ds $$ \u79f0\u4e3a\\(\\symbfit{A}(P)\\)\u6cbf\\(\\Gamma\\)\u4eceA\u5230B\u7684\u7b2c\u4e8c\u7c7b\u66f2\u7ebf\u79ef\u5206</p> <p></p> <p>\u6ce8\uff1a\\(\\oint\\)\u8868\u793a \u5c01\u95ed\u66f2\u7ebf \u4e0a\u7684\u7b2c\u4e8c\u7c7b\u66f2\u7ebf\u79ef\u5206</p> <p>\u6027\u8d28\uff1a + \\(\\int\\limits_{\\Gamma_{AB}}(\\symbfit{A \\cdot e_T}) ds = - \\int\\limits_{\\Gamma_{BA}}(\\symbfit{A \\cdot e_T}) ds\\)\uff0c\u82e5\u8bb0\\(\\Gamma^+ = \\Gamma_{AB}, \\Gamma^- = \\Gamma_{BA}\\)\uff0c\u5219\uff1a\\(\\int\\limits_{\\Gamma^+}(\\symbfit{A \\cdot e_T}) ds = - \\int\\limits_{\\Gamma^-}(\\symbfit{A \\cdot e_T}) ds\\) + \u82e5\\(\\Gamma\\)\u662f\u7531\\(\\Gamma_1, \\Gamma_2\\)\u9996\u5c3e\u76f8\u63a5\u800c\u6210\uff0c\u5219\uff1a\\(\\int\\limits_\\Gamma(\\symbfit{A \\cdot e_T}) ds = \\int\\limits_{\\Gamma_1}(\\symbfit{A \\cdot e_T}) ds + \\int\\limits_{\\Gamma_2}(\\symbfit{A \\cdot e_T}) ds\\)</p> <p>\u8bb0\\(d \\symbfit{s} = \\symbfit{e_T} ds\\)\uff0c\u79f0\u4e3a\u66f2\u7ebf\u7684\u6709\u5411\u5f27\u5143</p> <p>\u7b2c\u4e8c\u7c7b\u66f2\u7ebf\u79ef\u5206\u7684\u56db\u79cd\u5f62\u5f0f\uff1a 1. \\(\\int\\limits_{\\Gamma{AB}} \\symbfit{A \\cdot e_T} ds\\) 2. \\(\\int\\limits_{\\Gamma{AB}} \\symbfit{A} d\\symbfit{s}\\) 3. \\(\\int\\limits_{\\Gamma{AB}} (P \\cos{\\alpha} + Q \\cos{\\beta} + R \\cos{\\gamma}) ds\\) 4. \\(\\int\\limits_{\\Gamma{AB}} (Pdx + Qdy + Rdz)\\)</p> <p>\u5b9a\u740610.1 \u8bbe\u5149\u6ed1\u66f2\u7ebf\\(\\Gamma_{AB}\\)\u7684\u65b9\u7a0b\u4e3a\\(\\begin{cases}x = x(t) \\\\ y = y(t) \\\\ z = z(t)\\end{cases}\\)\uff0c\u70b9A, B\u5bf9\u5e94\u53c2\u6570\u5206\u522b\u4e3a\\(t_A, t_B\\)\uff0c\u4e14\\(\\symbfit{A}(x, y, z) = (P(x, y, z), Q(x, y, z), R(x, y, z))\\)\u7684\u5206\u91cfP, Q, R\u5728\\(\\Gamma\\)\u4e0a\u8fde\u7eed\uff0c\u5219 $$ \\int\\limits_{\\Gamma_{AB}} \\symbfit{A \\cdot e_T} ds = \\int_{t_A}^{t_B} [P(x(t), y(t), z(t))x'(t) + Q(x(t), y(t), z(t))y'(t) + R(x(t), y(t), z(t))z'(t)] dt $$</p> <p>\u683c\u6797\u516c\u5f0f\uff1a</p>"},{"location":"notebooks/calculus/10/#102","title":"10.2 \u7b2c\u4e8c\u7c7b\u66f2\u9762\u79ef\u5206","text":""},{"location":"notebooks/calculus/8/","title":"8","text":":material-circle-edit-outline: \u7ea6 0 \u4e2a\u5b57"},{"location":"notebooks/calculus/9/","title":"9","text":":material-circle-edit-outline: \u7ea6 0 \u4e2a\u5b57"},{"location":"notebooks/dld/1/","title":"Chap 1 Digital Systems and Information","text":":material-circle-edit-outline: \u7ea6 2573 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f"},{"location":"notebooks/dld/1/#information-representation","title":"Information Representation","text":"<ul> <li>\u6a21\u62df\u4fe1\u53f7(analog signals)\uff1a\u5728\u503c\u548c\u65f6\u95f4\u4e0a\u90fd\u662f\u8fde\u7eed(continuous) \u7684\u4fe1\u53f7</li> <li>\u6570\u5b57\u4fe1\u53f7(digital signals)\uff1a\u5728\u503c\u548c\u65f6\u95f4\u4e0a\u90fd\u662f\u79bb\u6563(discrete) \u7684\u4fe1\u53f7</li> </ul>"},{"location":"notebooks/dld/1/#digital-system","title":"Digital System","text":"<p>\u6570\u5b57\u7cfb\u7edf(digital system)\uff1a\u83b7\u5f97\u4e00\u7ec4\u79bb\u6563\u7684\u4fe1\u606f\u8f93\u5165\u548c\u79bb\u6563\u7684\u5185\u90e8\u4fe1\u606f\u8f93\u5165(\u7cfb\u7edf\u72b6\u6001(system state))\uff0c\u4ea7\u751f\u4e00\u7ec4\u79bb\u6563\u7684\u4fe1\u606f\u8f93\u51fa</p> <p></p> <p>\u7528\u6846\u56fe\u8868\u793a\uff1a </p> <p>\u6a21\u6570\u8f6c\u6362\u5668(Analog-to-Digital Converters, ADC)\uff1a\u5c06\u6a21\u62df\u4fe1\u53f7\u8f6c\u6362\u4e3a\u6570\u5b57\u4fe1\u53f7\uff0c\u4e3a\u6a21\u62df\u4e16\u754c\u7684\u4f20\u611f\u5668\u548c\u6570\u5b57\u4e16\u754c\u7684\u4fe1\u53f7\u5904\u7406\u642d\u8d77\u4e86\u6865\u6881  \ud83c\udf30\uff1a\u6e29\u5ea6\u6d4b\u91cf\u548c\u663e\u793a </p>"},{"location":"notebooks/dld/1/#signals","title":"Signals","text":"<p>\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u4fe1\u606f\u53d8\u91cf\u7531\u7269\u7406\u91cf\u8868\u793a\uff1b\u800c\u5728\u6570\u5b57\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u53d6\u8fd9\u4e9b\u53d8\u91cf\u7684\u79bb\u6563\u503c\u2014\u2014\u800c\u4e8c\u8fdb\u5236(binary) \u503c\u662f\u6700\u6d41\u884c\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u7269\u7406\u91cf\u7684\u503c\u6216\u503c\u7684\u8303\u56f4\u3002\u5b83\u901a\u5e38\u88ab\u8868\u793a\u4e3a\uff1a + \u6570\u5b570\u548c1 + \u7b26\u53f7False(F)\u548cTrue(T) + \u7b26\u53f7Low(L)\u548cHigh(H) + Off\u548cOn</p> <p>\u6ce8\uff1a\u8fd9\u91cc\u6211\u4eec\u7528\u5230\u7684\u662f\u6b63\u903b\u8f91(positive logic)\uff0c\u5373\u75280\u8868\u793aF\u3001L\u548cOff\uff0c\u75281\u8868\u793aT\u3001H\u548cOn</p> <p>\u4e4b\u6240\u4ee5\u4f7f\u7528\u4e8c\u8fdb\u5236\uff0c\u5305\u62ec\u4ee5\u4e0b\u539f\u56e0\uff1a + \u7535\u5b50\u5143\u4ef6\u7684\u672c\u8d28\u2014\u2014\u4e24\u79cd\u72b6\u6001\uff1a\u6bd4\u5982\u5f00\u5173\u7684\u65ad\u5f00(0)\u548c\u95ed\u5408(1)\uff0c\u6676\u4f53\u7ba1\u7684\u5bfc\u901a(1)\u548c\u4e0d\u5bfc\u901a(0) + \u6700\u5c11\u6570\u91cf\u7684\u5fc5\u8981\u7535\u8def\uff1a\u4f7f\u5f97\u7a7a\u95f4\u3001\u80fd\u8017\u3001\u6210\u672c\u4e5f\u8fbe\u5230\u6700\u5c0f</p> <p>\ud83c\udf301\u4f4d\u4fe1\u53f7\u2014\u2014\u7535\u538b </p> <p>\u5de6\u56fe\u4e2d\u95f4\u767d\u8272\u7684\u533a\u57df\u88ab\u79f0\u4e3a\u4e34\u754c\u533a\u57df(threshold region)</p> <ul> <li>\u843d\u5728\u4e34\u754c\u533a\u57df\u4e0a\u7684\u7535\u538b\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u5176\u7ed3\u679c\u4e3a\u975e\u6cd5\u7684\u72b6\u6001\uff0c\u8fd9\u901a\u5e38\u8868\u793a\u4e3a\u6d6e\u52a8(floating)\u3002\u5982\u679c\u8f93\u51fa\u5f15\u811a\u5904\u5728\u6d6e\u52a8\u72b6\u6001\uff0c\u7531\u4e8e\u5b83\u7684\u503c\u53ef\u80fd\u5728HIGH\u548cLOW\u4e4b\u95f4\u4efb\u610f\u8df3\u8dc3\uff0c\u6240\u4ee5\u65e0\u6cd5\u786e\u5b9a\u5b83\u7684\u8f93\u51fa\u4fe1\u53f7</li> <li>\u53ef\u4ee5\u53d1\u73b0\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7684\u7535\u538b\u5bb9\u5dee(voltage tolerance)(\u84dd\u8272\u533a\u57df)\u662f\u4e0d\u540c\u7684\uff0c\u800c\u4e14\u8f93\u5165\u5bbd\u5ea6\u5927\u4e8e\u8f93\u51fa\uff0c\u8fd9\u662f\u4e3a\u4e86\u786e\u4fdd\u7535\u8def\u5728\u7535\u538b\u53d8\u5316\u53ca\u4e0d\u671f\u671b\u7684\u201c\u566a\u97f3\u201d\u7535\u538b\u4e2d\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002\u8fd9\u79cd\u8f93\u5165\u548c\u8f93\u51fa\u8303\u56f4\u7684\u4e0d\u540c\u88ab\u79f0\u4e3a\u566a\u97f3\u5bb9\u9650(noise margin)</li> </ul>"},{"location":"notebooks/dld/1/#number-systems","title":"Number Systems","text":"<p>\u4ee5\\(r\\)\u4e3a\u57fa\u5e95(base/radix) \u7684\u6570\u53ef\u4ee5\u88ab\u8868\u793a\u6210 + \u7531\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff1a $$ A_{n-1}A_{n-2}\\dots A_1A_0.A_{-1}A_{-2}\\dots A_{-m+1}A_{-m},  \\quad 0 \\le A_i &lt; r $$</p> <p>\u6ce8\uff1a\".\"\u79f0\u4e3a\u5206\u9694\u7b26(radix point)\uff0c\\(A_{n - 1}\\)\u79f0\u4e3a\u6700\u9ad8\u4f4d(most significant digit, msd)\uff0c\\(A_{-m}\\)\u79f0\u4e3a\u6700\u4f4e\u4f4d(least significant digit, lsd)</p> <ul> <li>\u5e42\u7ea7\u6570 $$ \\text{(Number)}r = \\underbrace{(\\sum\\limits^{n - 1} A_i \\cdot r^i)}{\\text{Integer Portion}} + \\underbrace{(\\sum\\limits^{-1} A_j \\cdot r^j)}_{\\text{Fraction Portion}} $$ </li> </ul> <p>\u7279\u6b8a\u76842\u6b21\u5e42\uff1a + \\(2^{10}\\)\uff1aK(Kilo) + \\(2^{20}\\)\uff1aM(Mega) + \\(2^{30}\\)\uff1aG(Giga) + \\(2^{40}\\)\uff1aT(Tera)</p>"},{"location":"notebooks/dld/1/#arithmetic-operations","title":"Arithmetic Operations","text":""},{"location":"notebooks/dld/1/#binary-arithmetic","title":"Binary Arithmetic","text":"<p>\u52a0\u3001\u51cf\u3001\u4e58\u6cd5\u7684\u8be6\u7ec6\u5185\u5bb9\u7565\u8fc7\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u4e1c\u897f\u5df2\u7ecf\u8bb2\u4e86\u65e0\u6570\u904d\u4e86......</p>"},{"location":"notebooks/dld/1/#addition","title":"Addition","text":"<p>\u6ce8\u610f\u8fdb\u4f4d(carry) \u95ee\u9898 </p>"},{"location":"notebooks/dld/1/#subtraction","title":"Subtraction","text":"<p>\u6ce8\u610f\u501f\u4f4d(borrow) \u95ee\u9898 </p>"},{"location":"notebooks/dld/1/#multiplication","title":"Multiplication","text":"<p>\u4e0d\u540c\u57fa\u5e95\u5bf9\u5e94\u7684\u503c </p> <p>\u6ce8\uff1a\u5982\u679c\u611f\u89c9\\(r(r \\ne 10)\\)\u8fdb\u5236\u8ba1\u7b97\u5f88\u522b\u626d\u7684\u8bdd\uff0c\u53ef\u4ee5\u5148\u5c06\u6240\u6709\u6570\u5b57\u90fd\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\uff0c\u7136\u540e\u5c06\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\u8f6c\u5316\u56de\\(r\\)\u8fdb\u5236</p>"},{"location":"notebooks/dld/1/#conversion","title":"Conversion","text":"<p>\u4e8c\u8fdb\u5236 \\(\\rightarrow\\) \u5341\u8fdb\u5236\uff1a\\(\\sum(\\text{digit} \\times \\text{respective power of 2})\\)</p> <p>\u5341\u8fdb\u5236 \\(\\rightarrow\\) \u4e8c\u8fdb\u5236 + \u6cd5\u4e00     + \u539f\u6570\u51cf\u53bb\u6700\u5927\u76842\u6b21\u5e42\uff0c\u4f7f\u5f97\u5269\u4f59\u90e8\u5206\u4ecd\u4e3a\u6b63\u6570\uff0c\u5e76\u8bb0\u5f55\u8be5\u5e42     + \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u8bb0\u5f55\u6240\u6709\u51cf\u8fc7\u7684\u5e42\uff0c\u76f4\u5230\u5269\u4f59\u90e8\u5206\u4e3a0     + \u5c06\u201c1\u201d\u653e\u5728\u51cf\u8fc7\u7684\u5e42\u7684\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u5176\u4ed6\u4f4d\u7f6e\u653e\u201c0\u201d + \u6cd5\u4e8c\uff08\u901a\u6cd5\uff09     + \u8f6c\u6362\u6574\u6570\u90e8\u5206\uff1a\u91cd\u590d\u7528\u65b0\u7684\u57fa\u5e95\u9664\u8be5\u6570\uff0c\u5e76\u4fdd\u5b58\u4f59\u6570\u3002\u8be5\u6570\u8f6c\u5316\u4e3a\u65b0\u57fa\u5e95\u7684\u5f62\u5f0f\u5373\u4e3a\u521a\u624d\u6240\u5f97\u4f59\u6570\u7684\u9006\u5e8f\u3002\u5982\u679c\u65b0\u7684\u57fa\u5e95\u5927\u4e8e10\uff0c\u5c06\u5927\u4e8e10\u7684\u4f59\u6570\u7528A, B\u7b49\u8868\u793a     + \u8f6c\u6362\u5c0f\u6570\u90e8\u5206\uff1a\u91cd\u590d\u7528\u65b0\u7684\u57fa\u5e95\u4e58\u8be5\u6570\uff0c\u5e76\u4fdd\u5b58\u6574\u6570\u90e8\u5206\u3002\u8be5\u6570\u8f6c\u5316\u4e3a\u65b0\u57fa\u5e95\u7684\u5f62\u5f0f\u5373\u4e3a\u521a\u624d\u6240\u5f97\u4f59\u6570\u7684\u987a\u5e8f\u3002\u5982\u679c\u65b0\u7684\u57fa\u5e95\u5927\u4e8e10\uff0c\u5c06\u5927\u4e8e10\u7684\u4f59\u6570\u7528A, B\u7b49\u8868\u793a     + \u7528\u5206\u9694\u7b26(\u5c0f\u6570\u70b9) \u5c06\u524d\u9762\u7684\u7ed3\u679c\u7ed3\u5408\u8d77\u6765</p> <p>\ud83c\udf30\uff1a\u5c06\\((725.678)_{10}\\)\u7528\u4e8c\u8fdb\u5236\u8868\u793a  \u5173\u4e8e\u5c0f\u6570\u90e8\u5206\u7684\u8f6c\u6362\uff1a \u901a\u8fc7\u91cd\u590d\u7684\u4e58\u6cd5\uff0c\u5c0f\u6570\u90e8\u5206\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u7ed3\u679c\uff1a + \u53d8\u62100(\u7cbe\u786e\u503c) + \u51fa\u73b0\u91cd\u590d\u7684\u6570\u5b57(\u4e0d\u51c6\u786e\u503c) \u89e3\u51b3\u65b9\u6cd5\uff1a\u5177\u4f53\u8bf4\u660e\u4fdd\u7559\u591a\u5c11\u4f4d\u6216\u622a\u65ad\u6570\u5b57</p> <p>\u8865\u5145\u9605\u8bfb\uff1a\u4e3a\u4ec0\u4e48\u5341\u8fdb\u5236\u5c0f\u6570\u65e0\u6cd5\u88ab\u7cbe\u786e\u7f16\u7801\u4e3a\u4e8c\u8fdb\u5236\uff1f (\u901a\u8fc7\u6c42\u89e3\u4e22\u756a\u56fe\u65b9\u7a0b(Diophantine equation) \u89e3\u91ca) </p> <ul> <li>\u516b\u8fdb\u5236(Octal) \\(\\leftrightarrow\\) \u4e8c\u8fdb\u5236\uff1a1\u4f4d\u516b\u8fdb\u5236 = 3\u4f4d\u4e8c\u8fdb\u5236</li> <li> <p>\u5341\u516d\u8fdb\u5236(Hexadecimal) \\(\\leftrightarrow\\) \u4e8c\u8fdb\u5236\uff1a1\u4e3a\u5341\u516d\u8fdb\u5236 = 4\u4f4d\u4e8c\u8fdb\u5236</p> <p>\u6ce8\uff1a\u4e8c\u8fdb\u5236\u8f6c\u516b/\u5341\u516d\u8fdb\u5236\u7684\u65f6\u5019\u53ef\u80fd\u9700\u8981\u5728\u4e8c\u8fdb\u5236\u6570\u91cc\u586b\u51450</p> </li> <li> <p>\u516b\u8fdb\u5236 \\(\\leftrightarrow\\) \u5341\u516d\u8fdb\u5236\uff1a\u5c06\u4e8c\u8fdb\u5236\u4f5c\u4e3a\u8fc7\u6e21\u7684\u5e73\u53f0</p> </li> </ul>"},{"location":"notebooks/dld/1/#decimal-codes","title":"Decimal Codes","text":""},{"location":"notebooks/dld/1/#binary-numbers-and-binary-coding","title":"Binary Numbers and Binary Coding","text":"<p>\u4fe1\u606f\u7c7b\u578b\uff1a + \u6570\u5b57\uff1a\u7528\u6765\u8868\u793a\u9700\u8981\u7684\u6570\u636e\u8303\u56f4\uff0c\u8fdb\u884c\u7b80\u5355\u76f4\u63a5\u7684\u8ba1\u7b97\uff08\u6bd4\u5982\u7b97\u672f\u8fd0\u7b97\uff09\uff0c\u4e0e\u4e8c\u8fdb\u5236\u6570\u8054\u7cfb\u7d27\u5bc6 + \u975e\u6570\u5b57\uff1a\u66f4\u5927\u7684\u7075\u6d3b\u6027(\u65e0\u9700\u7b97\u672f\u8fd0\u7b97)\uff0c\u4e0d\u4e0e\u4e8c\u8fdb\u5236\u7d27\u5bc6\u8054\u7cfb\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4efb\u610f\u4e8c\u8fdb\u5236\u7684\u7ec4\u5408(\u79f0\u4e3a\u7f16\u7801)\uff0c\u4f7f\u4efb\u610f\u7684\u6570\u636e\u5f97\u5230\u552f\u4e00\u7684\u7f16\u7801\u3002</p> <p>\u7ed9\u5b9a\\(n\\)\u4f4d\u4e8c\u8fdb\u5236\u6570(\u79f0\u4e3a\u4f4d)\uff0c\u4e8c\u8fdb\u5236\u7f16\u7801(binary code) \u662f\u4ece\u4e00\u7ec4\u8981\u88ab\u8868\u793a\u7684\u5143\u7d20\u5230\\(2^n\\)\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u5b50\u96c6\u7684\u6620\u5c04(mapping)</p> <p>\u7ed9\u5b9a\\(M\\)\u4e2a\u9700\u8981\u7528\u4e8c\u8fdb\u5236\u6570\u7f16\u7801\u7684\u5143\u7d20\uff0c\u6700\u5c0f\u6570\u91cf\u4f4d\\(n\\)\u6ee1\u8db3\\(2^{n - 1} &lt; M \\le 2^n\\)\uff0c\u56e0\u6b64\\(n = \\lceil \\log_2 M \\rceil\\)</p> <p>\u62d3\u5c55\u5230\u57fa\u5e95\u4e3a\\(r\\)\u7684\u60c5\u51b5\uff0c\\(n\\)\u4e3a\\(r\\)\u8fdb\u5236\u6570\u53ef\u4ee5\u8868\u793a\\(r^n\\)\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\uff0c\u56e0\u6b64\u53ef\u4ee5\u8868\u793a\\(M &lt; r^n\\)\u4e2a\u5143\u7d20</p> <p>\u5e38\u89c1\u7684\u7f16\u7801\u65b9\u5f0f </p> <p>\u8865\u5145\uff1a\u72ec\u70ed\u7801(one-hot code)\uff0c\u4e00\u79cd\u53ea\u75281\u4f4d\u8868\u793a\u6bcf\u4e2a\u72b6\u6001\u7684\u7f16\u7801\uff0c\u6bd4\u59824\u4f4d\u4e8c\u8fdb\u5236\u6570\u53ef\u4ee5\u8868\u793a\u56db\u79cd\u72b6\u6001\uff1a0001,0010,0100,1000</p>"},{"location":"notebooks/dld/1/#binary-coded-decimalbcd","title":"Binary Coded Decimal(BCD)","text":"<p>^3dfa38</p> <p>BCD\u7801\u53c8\u79f08421\u7801(8, 4, 2, 1\u662f\u6743\u91cd)\uff0c\u56e0\u6b64BCD\u662f\u6743\u91cd\u7801(weighted code)\u3002\u5b83\u662f\u6700\u7b80\u5355\u7684\uff0c\u6700\u76f4\u63a5\u7684\u5173\u4e8e\u5341\u8fdb\u5236\u6570\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\uff0c\u4f7f\u7528\u4e0e\u4e8c\u8fdb\u5236\u6570\u76f8\u540c\u7684\u5e42\uff0c\u4f46\u5b83\u53ea\u4f7f\u7528\u524d10\u4e2a\u6570\u5b57(0-9)</p> <p>\u2757\u6ce8\u610f\uff1a\u4e0d\u8981\u641e\u6df7\u8f6c\u6362\u548c\u7f16\u7801\uff01</p> <p>\u7b97\u672f\u8fd0\u7b97\uff08\u8fd9\u91cc\u53ea\u8ba8\u8bba\u52a0\u6cd5\uff09\uff1a\u8fd8\u662f\u8981\u6ce8\u610f\u8fdb\u4f4d\u95ee\u9898 \ud83c\udf30 </p>"},{"location":"notebooks/dld/1/#excess-3-code-and-8-4-2-1-code","title":"Excess 3 Code and 8, 4, -2, -1 Code","text":"<p>\u6ce8\u610f\u5230\uff1a + Excess 3 = BCD + 3 + Excess 3 \u7801\u4e0e8,4,-2,-1\u7801\u662f\u4e92\u8865\u7801(complement code)</p>"},{"location":"notebooks/dld/1/#alphanumeric-codes","title":"Alphanumeric Codes","text":"<p>ASCII(American Standard Code for Information Interchange) \u5b57\u7b26\u7801\uff1a\u75287\u4f4d\u8868\u793a\u5b57\u7b26\u6570\u636e\uff0c\u5305\u62ec\uff1a + 94\u4e2a\u56fe\u5f62\u6253\u5370\u5b57\u7b26 + 34\u4e2a\u975e\u6253\u5370\u5b57\u7b26\uff1a\u5206\u4e3a3\u7c7b     + \u683c\u5f0f\u63a7\u5236\u5b57\u7b26(format effector)     + \u4fe1\u606f\u5206\u9694\u5b57\u7b26(information separators)     + \u901a\u4fe1\u63a7\u5236\u5b57\u7b26(communication control characters)</p> <p>ASCII\u7801\u7684\u7b2c8\u4f4d\uff08\u6700\u9ad8\u4f4d\uff09\u7528\u6765\u8868\u793a\u5947\u5076(parity)\u6821\u9a8c\u7801</p> <p>\u6027\u8d28\uff1a + \u5b57\u7b260-9\u7684\u5341\u516d\u8fdb\u5236\u503c\u5bf9\u5e94\u5341\u516d\u8fdb\u5236\u7684\\((30)_{16}-(39)_{16}\\) + \u5927\u5199\u5b57\u6bcdA-Z\u5bf9\u5e94\\((41)_{16}-(5A)_{16}\\) + \u5c0f\u5199\u5b57\u6bcda-z\u5bf9\u5e94\\((61)_{16}-(7A)_{16}\\)</p> <p>\u56e0\u6b64\uff0c\u5927\u5c0f\u5199\u5b57\u6bcd\u7684ASCII\u7801\u8f6c\u6362\u53ea\u9700==\u7ffb\u8f6c\u7b2c5\u4f4d==</p> <p></p>"},{"location":"notebooks/dld/1/#error-detection","title":"Error-Detection","text":"<p>\u9519\u8bef\u4fa6\u6d4b(error detection) \u901a\u5e38\u7528\u4e8e\u901a\u9053\u7f16\u7801(channel coding) \u4e2d  \u62d3\u5c55\u77e5\u8bc6\uff1aShannon Capacity Theorem/Limit</p> <p>\u9519\u8bef\u4fa6\u6d4b\u7684\u65b9\u6cd5\uff1a + \u5197\u4f59(redundancy)(\u6bd4\u5982\u591a\u4f59\u4fe1\u606f)\u7531\u989d\u5916\u7684\u4f4d\u6784\u6210\uff0c\u53ef\u4ee5\u88ab\u5e76\u5165\u5230\u4e8c\u8fdb\u5236\u7801\u4e2d\uff0c\u4ee5\u6b64\u6765\u4fa6\u6d4b\u548c\u7ea0\u6b63\u9519\u8bef\uff0c\u6bd4\u5982\u5faa\u73af\u5197\u4f59\u6821\u9a8c(Cyclic Redundancy Check, CRC) + \u5947\u5076\u6821\u9a8c\u4f4d(parity) \u662f\u6dfb\u52a0\u5728\u7f16\u7801\u5355\u8bcd\u4e0a\u7684\u989d\u5916\u7684\u4f4d\uff0c\u4f7f\u5f97\u6574\u4e2a\u7f16\u7801\u5305\u542b1\u7684\u4e2a\u6570\u662f\u5947\u6570\u6216\u8005\u5076\u6570\u3002\u5b83\u80fd\u591f\u4fa6\u6d4b\u6240\u6709\u5355\u4e2a\u4f4d\u7684\u9519\u8bef\u548c\u4e00\u4e9b\u591a\u4f4d\u9519\u8bef ^79ab41     + \u5076\u6821\u9a8c(even parity)\uff1a\u6574\u4e2a\u7f16\u7801\u5305\u542b1\u7684\u4e2a\u6570\u662f\u5076\u6570     + \u5947\u6821\u9a8c(odd parity)\uff1a\u6574\u4e2a\u7f16\u7801\u5305\u542b1\u7684\u4e2a\u6570\u662f\u5947\u6570     \ud83c\udf30\uff1a + \u6821\u9a8c\u548c(Checksum)</p>"},{"location":"notebooks/dld/1/#gray-codes","title":"Gray Codes","text":"<p>\u6ce8\uff1a\u683c\u96f7\u7801(Gray code) \u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\uff1a\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u7684\u5dee\u5f02\u53ea\u67091\u4f4d\u3002\u89c2\u5bdf\u8868\u683c\u53d1\u73b0\uff0c\u683c\u96f7\u7801\u7684\u524d\u534a\u90e8\u5206\u548c\u540e\u534a\u90e8\u5206\u6709\u53cd\u5c04(\u7ffb\u8f6c)(reflection) \u7684\u5173\u7cfb</p> <p>\ud83c\udf30\u5149\u8f74\u7f16\u7801\u5668(Optical Shaft Encoder)  \u5982\u679c\u5149\u7ebf\u7ecf\u8fc7\u7ea2\u8272\u865a\u7ebf(\u8fb9\u754c)\u5904\uff0c\u5de6\u8fb9\u7528\u4e8c\u8fdb\u5236\u7801\u8868\u793a\u7684\u60c5\u51b5\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff08\u79f0\u4e3a\u504f\u659c(skew)\uff09\uff1a\u4e0b\u56fe\u6240\u793a\u7ea2\u8272\u90e8\u5206\u7684\u6570\u5b57\u90fd\u6709\u53ef\u80fd\u662f\u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c  \u800c\u683c\u96f7\u7801\u5c31\u53ef\u4ee5\u907f\u514d\u8fd9\u79cd\u9519\u8bef\u7684\u8f93\u51fa\u53ef\u80fd</p> <p>\u4e8c\u8fdb\u5236\u8f6c\u683c\u96f7\u7801\uff1a</p> <p>\u6ce8\uff1a + \u8fd9\u91cc\u75281\u8868\u793a\u6700\u9ad8\u4f4d\uff0c\u7d22\u5f15\u503c\u8d8a\u5927\u8868\u793a\u4f4d\u6570\u8d8a\u4f4e + \\(g(i)\\)\u8868\u793a\u7d22\u5f15\u4e3a\\(i\\)\u7684\u683c\u96f7\u7801\u5bf9\u5e94\u7684\u6570\u5b57\uff0c \\(b(i)\\)\u8868\u793a\u7d22\u5f15\u4e3a\\(i\\)\u7684\u4e8c\u8fdb\u5236\u7801\u5bf9\u5e94\u7684\u6570\u5b57 $$ g(i) = \\begin{cases}b(i) + b(i - 1) &amp; \\text{if } i \\ne 1 \\ b(i) &amp; \\text{if } i = 1\\end{cases} $$</p> <p>\ud83c\udf30 </p>"},{"location":"notebooks/dld/1/#appendix","title":"Appendix","text":""},{"location":"notebooks/dld/1/#types-of-digital-systems","title":"Types of Digital Systems","text":"<ul> <li>\u65e0\u72b6\u6001(no state present)\u2014\u2014\u7ec4\u5408\u903b\u8f91\u7cfb\u7edf(combinational logic system)\uff0c\\(\\text{Output} = \\text{Function(Input)}\\) </li> <li>\u6709\u72b6\u6001(state present)\uff1a\\(\\text{State} = \\text{Function(State, Input)}\\)<ul> <li>\u540c\u6b65\u65f6\u5e8f\u7cfb\u7edf(Synchronous Sequential System)\uff1a\u72b6\u6001\u5728\u79bb\u6563\u7684\u65f6\u95f4\u5185\u66f4\u65b0</li> <li>\u5f02\u6b65\u65f6\u5e8f\u7cfb\u7edf(Asynchronous Sequential System)\uff1a\u72b6\u6001\u968f\u65f6\u66f4\u65b0 \\(\\text{Output} = \\text{Function(State) or Output = Function(State, Input)}\\) </li> </ul> </li> </ul>"},{"location":"notebooks/dld/1/#the-digital-computer","title":"The Digital Computer","text":"<ul> <li>\u5185\u5b58(memory)\uff1a\u5b58\u50a8\u7a0b\u5e8f\u7684\u8f93\u5165\u3001\u8f93\u51fa\u548c\u4e2d\u95f4\u6570\u636e</li> <li>\u4e2d\u592e\u5904\u7406\u5668(central processing unit, CPU)<ul> <li>\u6570\u636e\u901a\u8def(datapath)\uff1a\u6267\u884c\u7531\u7a0b\u5e8f\u6307\u5b9a\u7684\u7b97\u672f\u548c\u5176\u4ed6\u6570\u636e\u5904\u7406\u8fd0\u7b97</li> <li>\u63a7\u5236\u5355\u5143(control unit)\uff1a\u76d1\u7763\u5728\u5404\u79cd\u5355\u5143\u95f4\u7684\u4fe1\u606f\u6d41</li> </ul> </li> <li>\u8f93\u5165\u8bbe\u5907(input device)\uff1a\u5c06\u7531\u7528\u6237\u63d0\u4f9b\u7684\u7a0b\u5e8f\u548c\u6570\u636e\u4f20\u8f93\u5230\u5185\u5b58\u7684\u8bbe\u5907</li> <li>\u8f93\u51fa\u8bbe\u5907(output device)\uff1a\u5c06\u8ba1\u7b97\u7ed3\u679c\u5448\u73b0\u7ed9\u7528\u6237\u7684\u8bbe\u5907</li> </ul>"},{"location":"notebooks/dld/1/#embedded-system","title":"Embedded System","text":""},{"location":"notebooks/dld/1/#more-on-generic-computer","title":"More on Generic Computer","text":"<p>\u5904\u7406\u5668(processor) \u7684\u7c7b\u578b\uff1a + \u4e2d\u592e\u5904\u7406\u5668(CPU) + \u6d6e\u70b9\u5904\u7406\u5355\u5143(floating-point unit, FPU)\uff1a\u6267\u884c\u6d6e\u70b9\u8ba1\u7b97\uff0c\u53ef\u4ee5\u7528\u6765\u5904\u7406\u5f88\u5927\u6216\u5f88\u5c0f\u7684\u6570\u5b57 + \u5b58\u50a8\u7ba1\u7406\u5355\u5143(memory management unit, MMU)\uff1a\u4f7f\u5f97\u5bf9\u4e8eCPU\u7684\u53ef\u7528\u5185\u5b58\u6bd4RAM\u7684\u5b9e\u9645\u5185\u5b58\u66f4\u5927 + \u5185\u90e8\u7f13\u5b58(internal cache)</p>"},{"location":"notebooks/dld/1/#abstration-layers-in-computer-system-design","title":"Abstration Layers in Computer System Design","text":"<p> \u8fd9\u4f53\u73b0\u4e86\u201c\u81ea\u9876\u5411\u4e0b(top down)\u201d\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u5373\u4ece\u8f83\u9ad8\u7684\u5c42\u6b21\u6765\u8bf4\u660e\u6574\u4e2a\u7cfb\u7edf\uff0c\u7136\u540e\u5b83\u7684\u8bbe\u8ba1\u88ab\u5206\u89e3\u4e3a\u8fde\u7eed\u7684\u66f4\u5c0f\u7684\u5757\uff0c\u76f4\u5230\u8fd9\u4e9b\u5757\u7b80\u5355\u5230\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u7684\u7a0b\u5ea6\u3002\u6700\u540e\u8fde\u63a5\u8fd9\u4e9b\u5757\uff0c\u5f62\u6210\u6574\u4e2a\u7cfb\u7edf\u3002</p> <p>\u8fd9\u79cd\u5206\u5c42\u62bd\u8c61\u9690\u85cf\u4e86\u7cfb\u7edf\u4e2d\u5404\u4e2a\u5143\u4ef6\u7684\u6267\u884c\u7ec6\u8282\uff0c\u8fd9\u6837\u8bbe\u8ba1\u8005\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u7528\u6765\u89e3\u51b3\u95ee\u9898\u7684\u90a3\u90e8\u5206\u5143\u4ef6\uff1b\u800c\u4e14\u4f4e\u5c42\u62bd\u8c61\u7684\u6539\u53d8\u4e0d\u4f1a\u5f71\u54cd\u9ad8\u5c42\u7684\u62bd\u8c61\uff08\u6bd4\u5982\u4f60\u5199\u7684c\u4ee3\u7801\u653e\u5230\u522b\u7684\u7535\u8111\u4e5f\u80fd\u8dd1\uff09\u3002</p> <p>\u9ad8\u5c42\u62bd\u8c61\u7684\u63d0\u5347\u7a7a\u95f4\u5f80\u5f80\u9ad8\u4e8e\u4f4e\u5c42\u62bd\u8c61</p>"},{"location":"notebooks/dld/1/#unicode","title":"Unicode","text":"<p>\u6ce8\uff1a\u5177\u4f53\u5185\u5bb9\u89c1\u7ef4\u57fa\u767e\u79d1</p>"},{"location":"notebooks/dld/2/","title":"Chap 2 Combinational Logic Circuit","text":":material-circle-edit-outline: \u7ea6 4473 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 15 \u5206\u949f"},{"location":"notebooks/dld/2/#gate-circuit-and-boolean-equations","title":"Gate Circuit and Boolean Equations","text":""},{"location":"notebooks/dld/2/#binary-logic-and-gates","title":"Binary Logic and Gates","text":"<ul> <li> <p>\u4e8c\u8fdb\u5236\u53d8\u91cf(binary variables) \u53d60\u548c1\u4e2d\u4efb\u610f\u4e00\u4e2a\u503c\uff0c\u53ef\u4ee5\u7528\u5355\u4e2a\u5b57\u7b26\u8868\u793a(\u672c\u7ae0\u5927\u90e8\u5206\u5185\u5bb9)\uff0c\u4e5f\u53ef\u4ee5\u7528\u6709\u610f\u4e49\u7684\u5355\u8bcd\u8868\u793a(\u540e\u7eed\u7ae0\u8282)</p> </li> <li> <p>\u903b\u8f91\u8fd0\u7b97\u7b26(logical operators) \u5728\u4e8c\u8fdb\u5236\u503c\u548c\u4e8c\u8fdb\u5236\u53d8\u91cf\u4e0a\u8fd0\u7b97\u3002\u57fa\u672c\u7684\u903b\u8f91\u8fd0\u7b97\u7b26\u5305\u62ec\u903b\u8f91\u4e0e(AND)\uff0c\u6216(OR) \u548c\u975e(NOT)</p> <ul> <li>AND\uff1a\u8bb0\u4f5c(\\(\\cdot\\))\u6216(\\(\\times\\))</li> <li>OR\uff1a\u8bb0\u4f5c(\\(+\\))</li> <li>NOT(inverter)\uff0c\u8bb0\u4f5c(\\(\\overline{ }\\))(\u7528\u5728\u4e0a\u9762)\uff0c(\\('\\))(\u7528\u5728\u540e\u9762)\u6216(\\(\\sim\\))(\u7528\u5728\u524d\u9762)</li> </ul> </li> <li> <p>\u771f\u503c\u8868(truth tables)\uff1a\u4e00\u5f20\u5217\u51fa\u4e00\u4e2a\u51fd\u6570\u5173\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u53c2\u6570\u7ec4\u5408\u7684\u503c\u7684\u8868\u683c</p> </li> </ul>"},{"location":"notebooks/dld/2/#logic-gates","title":"Logic Gates","text":"<p>\u903b\u8f91\u95e8(logic gates)\uff1a\u6267\u884c\u903b\u8f91\u51fd\u6570</p> <p>\u80cc\u666f\uff1a + \u5728\u65e9\u671f\u7684\u8ba1\u7b97\u673a\u4e2d\uff0c\u5f00\u5173\u7684\u5f00\u95ed\u901a\u8fc7\u7531\u4e2d\u7ee7\u5668(relay) \u901a\u7535\u7684\u7ebf\u5708\u4ea7\u751f\u7684\u78c1\u573a\u5b9e\u73b0\u3002\u8fd9\u4e9b\u5f00\u5173\u8f6e\u6d41\u5f00\u95ed\u7535\u8def\u3002 + \u4e4b\u540e\uff0c\u771f\u7a7a\u7ba1(vacuum tubes) \u901a\u8fc7\u7535\u5b50\u65b9\u5f0f\u7684\u5f00\u95ed\uff0c\u53d6\u4ee3\u4e86\u4e2d\u7ee7\u5668 + \u73b0\u5728\uff0c\u6676\u4f53\u7ba1(transistors) \u7528\u6765\u4f5c\u4e3a\u7535\u5b50\u5f00\u5173\u3002\u903b\u8f91\u95e8\u901a\u8fc7\u53cc\u6781\u6676\u4f53\u7ba1(bi-polar junction transistors, BJT)\u5b9e\u73b0 </p> <p>\u903b\u8f91\u95e8\u7684\u7c7b\u578b\uff1a </p>"},{"location":"notebooks/dld/2/#basic-logic-gates","title":"Basic Logic Gates","text":"<p>\u57fa\u672c\u903b\u8f91\u95e8\u7684\u7b26\u53f7\u8868\u793a\uff1a  \u65f6\u5e8f\u56fe(timing diagram) \u8868\u793a\uff1a  \u903b\u8f91\u95e8\u53ef\u4ee5\u6709\u4e0d\u6b62\u4e24\u4e2a\u7684\u8f93\u5165\u811a\uff1a </p>"},{"location":"notebooks/dld/2/#universal-logic-gates","title":"Universal Logic Gates","text":"<p>\u4e00\u79cd\u80fd\u591f\u5b9e\u73b0\u6240\u6709\u53ef\u80fd\u7684\u5e03\u5c14\u51fd\u6570\u7684\u95e8\u7c7b\u578b\u88ab\u79f0\u4e3a\u901a\u7528\u95e8(universal gate)\uff0c\u8fd9\u79cd\u95e8\u662f\u529f\u80fd\u5b8c\u5168\u7684(functionally complete)\u3002\u4e0a\u9762\u7684\u4e0e\u975e\u95e8(NAND) \u548c\u6216\u975e\u95e8(NOR) \u4fbf\u662f\u901a\u7528\u95e8\u3002</p> <p></p>"},{"location":"notebooks/dld/2/#other-logic-gates","title":"Other Logic Gates","text":"<p>\u6ce8\uff1a\u8fd9\u91cc\u4e0d\u505a\u9610\u91ca\uff0c\u672c\u7ae0\u6700\u540e\u90e8\u5206\u4f1a\u8bb2\u5230</p> <p>\u903b\u8f91\u56fe\u548c\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\uff1a + \u771f\u503c\u8868 + \u5e03\u5c14\u65b9\u7a0b + \u903b\u8f91\u56fe + \u6ce2\u5f62\u56fe</p> <p>\u6ce8\uff1a + \u8fd94\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7528\u76f8\u540c\u7684\u5e03\u5c14\u51fd\u6570\u8868\u793a + \u771f\u503c\u8868\u548c\u6ce2\u5f62\u56fe\u662f\u552f\u4e00\u7684\uff0c\u800c\u5e03\u5c14\u65b9\u7a0b\u548c\u903b\u8f91\u56fe\u5e76\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u8fd9\u4e3a\u5b9e\u73b0\u51fd\u6570\u63d0\u4f9b\u4e00\u5b9a\u7684\u7075\u6d3b\u6027</p>"},{"location":"notebooks/dld/2/#boolean-algebra","title":"Boolean Algebra","text":"<p>\u4ee3\u6570\u7ed3\u6784(algebraic structure)(\u7531\u4e24\u4e2a\u5143\u7d20\u7684\u96c6\u5408\\(B = \\{0, 1\\}\\)\uff0c\u4ee5\u53ca\u4e09\u79cd\u8fd0\u7b97\u7b26\\(+, \\cdot, \\overline{}\\)\u6784\u6210) \u6ee1\u8db3\u4e0b\u5217\u57fa\u672c\u6052\u7b49\u5f0f([[Chap 1 The Foundations--Logic and Proofs#^cacfc2|dm]]\u91cc\u4e5f\u6709) \ud83c\udf1f </p> <p>\u91cd\u70b9\u8bb0\u4f4f\u84dd\u5b57\u90a3\u4e24\u884c\uff0c\u5b83\u4eec\u5f88\u6709\u7528\u4f46\u4e0d\u597d\u8bb0</p> <p>\u76f8\u7b49\u2014\u2014\u5bf9\u4e8e\\(F_1 = f_1(X_1, X_2, \\dots, X_n)\\) \u548c \\(F_2 = f_2(X_1, X_2, \\dots, X_n)\\)\uff0c\u5982\u679c\u4efb\u4f55\u8f93\u5165\u503c\u80fd\u4ea7\u751f\u76f8\u540c\u7684\u8f93\u51fa\\(F_1\\)\u548c\\(F_2\\)\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bf4\u5e03\u5c14\u51fd\u6570\\(F_1 = F_2\\)\u200b</p>"},{"location":"notebooks/dld/2/#precedence","title":"Precedence","text":"<ol> <li>\u62ec\u53f7</li> <li>NOT</li> <li>AND</li> <li>OR</li> </ol>"},{"location":"notebooks/dld/2/#duality-rules","title":"Duality Rules","text":"<p>\u5e03\u5c14\u4ee3\u6570\u8868\u8fbe\u5f0f\u7684\u5bf9\u5076(dual) \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5f97\u5230\uff1a + AND \\(\\Leftrightarrow\\) OR(\u4e92\u6362) + \\(0 \\Leftrightarrow 1\\)(\u4e92\u6362) + \u53d8\u91cf\u4fdd\u6301\u4e0d\u53d8 \u9664\u975e\u51fa\u73b0\u81ea\u5bf9\u5076(self-dual)\uff0c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u5bf9\u5076 \\(\\ne\\) \u5b83\u81ea\u8eab</p> <p>\ud83c\udf30\uff1a\\(F = (A + \\overline{C}) \\cdot B + 0\\) \u7684\u5bf9\u5076\u4e3a \\((A \\cdot \\overline{C} + B) \\cdot 1\\)</p> <p>\u6027\u8d28\uff1a + \u5982\u679c\\(G\\)\u662f\\(F\\)\u7684\u5bf9\u5076\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u5373\\(F' = G, G' = F\\) + \u5982\u679c\u4e24\u4e2a\u51fd\u6570\u76f8\u7b49\uff0c\u5373\\(F = G\\)\uff0c\u5219\u5b83\u4eec\u7684\u5bf9\u5076\u51fd\u6570\u4e5f\u76f8\u7b49\uff0c\u5373\\(F' = G'\\)</p>"},{"location":"notebooks/dld/2/#complementing-functions","title":"Complementing Functions","text":"<p>\u5bf9\u4e8e\u903b\u8f91\u51fd\u6570\\(F\\)\uff0c\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5f97\u5230\u5b83\u7684\u53cd\u51fd\u6570(inverse function)\\(\\overline{F}\\)\uff1a + AND \\(\\Leftrightarrow\\) OR(\u4e92\u6362) + \u5bf9\u6bcf\u4e00\u4e2a\u5e38\u53d8\u91cf\u548c\u5b57\u9762\u91cf\u53d6\u8865 \u6211\u4eec\u901a\u5e38\u4f7f\u7528==\u5fb7\u6469\u6839\u5b9a\u7406(DeMorgan's Theorem)==\u6765\u5b9e\u73b0\u4e0a\u8ff0\u6b65\u9aa4</p>"},{"location":"notebooks/dld/2/#substitution-rules","title":"Substitution Rules","text":"<p>\u5bf9\u4e8e\u5e03\u5c14\u65b9\u7a0b\u4e2d\u7684\u67d0\u4e2a\u53d8\u91cf\\(A\\)\uff0c\u5982\u679c\u7528\u522b\u7684\u903b\u8f91\u51fd\u6570\\(F\\)\u6765\u4ee3\u66ff\u6240\u6709\u7684\\(A\\)\uff0c\u5219\u8be5\u5e03\u5c14\u65b9\u7a0b\u4f9d\u7136\u6210\u7acb</p>"},{"location":"notebooks/dld/2/#useful-theorems","title":"Useful Theorems","text":"<ul> <li>\u6700\u5c0f\u5316\uff1a\\(x \\cdot y + \\overline{x} \\cdot y = y \\quad (x + y)(\\overline{x} + y) = y\\)</li> <li>\u5438\u6536\uff1a\\(x + x \\cdot y = x \\quad x \\cdot (x + y) = x\\)</li> <li>\u7b80\u5316\uff1a\\(x + \\overline{x} \\cdot y = x + y \\quad x \\cdot (\\overline{x} + y) = x \\cdot y\\)</li> <li>\u4e00\u81f4\u6027(consensus)\u5b9a\u7406\uff1a $$ x \\cdot y + \\overline{x} \\cdot z + y \\cdot z = x \\cdot y + \\overline{x} \\cdot z \\quad (x + y)\\cdot(\\overline{x} + z) \\cdot (y + z) = (x + y)\\cdot (\\overline{x} + z) $$</li> </ul> <p>\u5e38\u89c1\u9898\u578b\uff1a + \u8bc1\u660e\u6052\u7b49\u5f0f + \u7b80\u5316\u5e03\u5c14\u65b9\u7a0b\uff1a\u4f7f\u5f97\u5b57\u9762\u91cf(\u5305\u62ec\u6240\u6709\u672a\u53d6\u8865\u548c\u53d6\u8865\u7684)\u7684\u6570\u91cf\u6700\u5c0f</p>"},{"location":"notebooks/dld/2/#standard-forms","title":"Standard Forms","text":"<p>^214fa6</p> <p>\u6211\u4eec\u5728\u8fd0\u7b97\u5e03\u5c14\u51fd\u6570\u65f6\u4f1a\u9047\u5230\u4ee5\u4e0b\u95ee\u9898\uff1a + \u8bc1\u660e\u5e03\u5c14\u51fd\u6570\uff1a\u5e03\u5c14\u51fd\u6570\u4e0d\u662f\u552f\u4e00\u7684 + \u8868\u8fbe\u5f0f\u7684\u7b80\u5316\uff1a\u53ef\u80fd\u8981\u7528\u5230\u7684\u6052\u7b49\u5f0f\u6216\u5b9a\u7406\u592a\u591a\u4e86\uff0c\u800c\u4e14\u9700\u8981\u638c\u63e1\u4e00\u4e9b\u6280\u5de7</p> <p>\u89e3\u51b3\u65b9\u6848 </p> <p>\u6d41\u7a0b\u56fe\u4e2d\u7684\u4e2d\u95f4\u6b65\u9aa4\u7528\u5230\u4e86\u8303\u5f0f(Canonical form)\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a + \u4e0e\u771f\u503c\u8868\u76f4\u63a5\u5bf9\u5e94 + \u5bb9\u6613\u6bd4\u8f83\u5e03\u5c14\u51fd\u6570\u7684\u7b49\u4ef7\u5173\u7cfb + \u4e3a\u51fd\u6570\u7684\u4f18\u5316\u63d0\u4f9b\u826f\u597d\u5f00\u7aef \u4e24\u79cd\u5e38\u89c1\u7c7b\u578b\uff1a + \u6700\u5c0f\u9879\u4e4b\u548c(sum of minterms, SOM) ^3f6dc3 + \u6700\u5927\u9879\u4e4b\u79ef(product of maxterms, POM)</p> <p>\u6ce8\uff1a[[Chap 1 The Foundations--Logic and Proofs#^e1accd|dm\u8bb2\u5230\u8fc7\u7c7b\u4f3c\u7684\u6982\u5ff5]]</p>"},{"location":"notebooks/dld/2/#minterms-and-maxterms","title":"Minterms and Maxterms","text":"<ul> <li>\u6700\u5c0f\u9879(minterms) \u662f\u6240\u6709\u53d8\u91cf(\u4e0d\u8bba\u662f\u672c\u8eab\\(X\\)\u8fd8\u662f\u53d6\u8865\\(\\overline{X}\\))\u7684==\u4e0e(AND)==\u3002<ul> <li>\u5982\u679c\u6709n\u4e2a\u53d8\u91cf\uff0c\u5219\u6709\\(2^n\\)\u4e2a\u6700\u5c0f\u9879</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u6700\u5c0f\u9879\uff0c\u53ea\u6709\u4e00\u79cd\u8f93\u5165\u4f7f\u5f97\u5b83\u7684\u503c\u4e3a1\uff0c\u5176\u4f59\u8f93\u5165\u5bf9\u5e94\u7684\u8f93\u51fa\u5747\u4e3a0</li> <li>\u4e00\u822c\u7528\\(m_i\\)\u8868\u793a\u6700\u5c0f\u9879\uff0c\u5176\u4e2d\\(i\\)\u6307\u7684\u662f\u7b2c\\(i\\)\u79cd\u8f93\u5165\u7ec4\u5408 </li> </ul> </li> <li>\u6700\u5927\u9879(maxterms) \u662f\u6240\u6709\u53d8\u91cf(\u4e0d\u8bba\u662f\u672c\u8eab\\(X\\)\u8fd8\u662f\u53d6\u8865\\(\\overline{X}\\))\u7684==\u6216(OR)==\u3002<ul> <li>\u5982\u679c\u6709n\u4e2a\u53d8\u91cf\uff0c\u5219\u6709\\(2^n\\)\u4e2a\u6700\u5927\u9879</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u6700\u5927\u9879\uff0c\u53ea\u6709\u4e00\u79cd\u8f93\u5165\u4f7f\u5f97\u5b83\u7684\u503c\u4e3a0\uff0c\u5176\u4f59\u8f93\u5165\u5bf9\u5e94\u7684\u8f93\u51fa\u5747\u4e3a1</li> <li>\u4e00\u822c\u7528\\(M_i\\)\u8868\u793a\u6700\u5927\u9879\uff0c\u5176\u4e2d\\(i\\)\u6307\u7684\u662f\u7b2c\\(i\\)\u79cd\u8f93\u5165\u7ec4\u5408 </li> </ul> </li> </ul> <p>\u6ce8\uff1a + \u6700\u5c0f\u9879\u548c\u6700\u5927\u9879\u7684\u4e0b\u6807(subscript) \u8868\u793a\u4e00\u79cd\u4e8c\u8fdb\u5236\u7684\u6392\u5e8f\u65b9\u5f0f\uff0c\u5b83\u80fd\u591f\u53cd\u6620\u5728\u6807\u51c6\u987a\u5e8f(standard order)(\u901a\u5e38\u662f\u6309\u5b57\u6bcd\u8868\u987a\u5e8f)\u4e0b\u7684\u67d0\u79cd\u8f93\u5165\u7ec4\u5408 + \u6700\u5c0f\u9879\u548c\u6700\u5927\u9879\u7684\u7d22\u5f15(index) \u7528\u4e8c\u8fdb\u5236\u65700\u548c1\u8868\u793a\uff0c\u5b83\u80fd\u591f\u53cd\u6620\u6bcf\u4e2a\u53d8\u91cf\u5728\u6700\u5c0f/\u5927\u9879\u4e2d\u662f\u4ee5\u6b63\u5e38\u5f62\u5f0f\\(X\\)\u8fd8\u662f\u4ee5\u8865\u5f62\u5f0f\\(\\overline{X}\\)\u5b58\u5728   + \u6700\u5c0f\u9879\uff1a\u20181\u2019\u8868\u793a\u4e0d\u53d6\u8865\uff0c\u20180\u2019\u8868\u793a\u53d6\u8865   + \u6700\u5927\u9879\uff1a\u20180\u2019\u8868\u793a\u4e0d\u53d6\u8865\uff0c\u20181\u2019\u8868\u793a\u53d6\u8865   \ud83c\udf30\uff1a\u5f53\u7d22\u5f15 = 6\u65f6\uff0c\\(m_6 = XY\\overline{Z},\\ M_6 = (\\overline{X} + \\overline{Y} + Z)\\)</p> <p>\u6700\u5927\u9879\u4e0e\u6700\u5c0f\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\\(M_i\\)\u548c\\(m_i\\)\u4e92\u4e3a\u5bf9\u65b9\u7684\u8865\uff0c\u5373\\(M_i = \\overline{m_i}\\) \u4e14 \\(m_i = \\overline{M_i}\\)</p>"},{"location":"notebooks/dld/2/#som-and-pom","title":"SOM and POM","text":"<p>\u6839\u636e\u6700\u5c0f\u9879\u548c\u6700\u5927\u9879\u7684\u7b2c2\u6761\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a + \u4efb\u4f55\u51fd\u6570\u90fd\u53ef\u4ee5\u7528==\u503c\u4e3a1\u7684\u6700\u5c0f\u9879\u7684\u6216==\u6765\u8868\u793a\uff0c\u8fd9\u79cd\u51fd\u6570\u88ab\u79f0\u4e3a\u6700\u5c0f\u9879\u51fd\u6570(minterm function) + \u4efb\u4f55\u51fd\u6570\u90fd\u53ef\u4ee5\u7528==\u503c\u4e3a0\u7684\u6700\u5927\u9879\u7684\u4e0e==\u6765\u8868\u793a\uff0c\u8fd9\u79cd\u51fd\u6570\u88ab\u79f0\u4e3a\u6700\u5927\u9879\u51fd\u6570(maxterm function) \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u5f97\u5230\u4e24\u79cd\u8303\u5f0f\uff1a\u6700\u5c0f\u9879\u4e4b\u548c(SOM) \u4e0e\u6700\u5927\u9879\u4e4b\u79ef(POM)</p> <p>\u4e00\u822c\u51fd\u6570 \\(\\Rightarrow\\) SOM\uff1a\u5c06\u539f\u6765\u51fd\u6570\u4e2d\u6240\u6709\u7684\u9879\u6269\u5c55\u81f3\u5305\u542b\u5168\u90e8\u53d8\u91cf\u7684\u9879\uff0c\u5373\uff1a\u5bf9\u4e8e\u67d0\u4e2a\u9879\uff0c\u53ea\u8981\u5b83\u7f3a\u5c11\u67d0\u4e2a\u53d8\u91cf\\(v\\)\uff0c\u5c31\u5c06\\((v + \\overline{v})\\)\u548c\u8be5\u9879\u8fdb\u884c\u4e0e\u8fd0\u7b97\u3002 \ud83c\udf30\uff1a ^e31fcb $$ \\begin{align} F(A,B,C) &amp;= A + \\overline{B}C \\ &amp; = A(B + \\overline{B})(C + \\overline{C}) + (A + \\overline{A})\\overline{B}C \\ &amp; = \\dots \\ &amp; = ABC + AB\\overline{C} + A\\overline{B}C + A\\overline{BC} + \\overline{AB}C \\ &amp; = m_7 + m_6 + m_5 + m_4 + m_1 \\ &amp; = \\sum m(1,4,5,6,7) \\end{align} $$</p> <p>\u4e00\u822c\u51fd\u6570 \\(\\Rightarrow\\) POM\uff1a\u5c06\u539f\u6765\u51fd\u6570\u4e2d\u6240\u6709\u7684\u9879\u6269\u5c55\u81f3\u5305\u542b\u5168\u90e8\u53d8\u91cf\u7684\u9879 + \u5148\u8bd5\u7528\u7b2c\u4e8c\u6761\u5206\u914d\u5f8b\uff1a\\(X + YZ = (X + Y)(X + Z)\\) + \u5bf9\u4e8e\u8be5\u9879\uff0c\u53ea\u8981\u5b83\u7f3a\u5c11\u67d0\u4e2a\u53d8\u91cf\\(v\\)\uff0c\u5c31\u5c06\\(v \\cdot \\overline{v}\\)\u548c\u8be5\u9879\u8fdb\u884c\u6216\u8fd0\u7b97 + \u7136\u540e\u518d\u7528\u5206\u914d\u5f8b\u5316\u7b80 \ud83c\udf30\uff1a $$ \\begin{align} F(A, B, C) &amp; = A\\overline{C} + BC + \\overline{AB} \\  &amp; = (A\\overline{C} + BC + \\overline{A})(A\\overline{C} + BC + \\overline{B}) \\ &amp; = (\\overline{C} + BC + \\overline{A})(A\\overline{C} + C + \\overline{B}) \\ &amp; = (\\overline{C} + B + \\overline{A})(A + C + \\overline{B}) \\ &amp; = \\prod M(2, 5) \\end{align} $$</p> <p>SOM\u6216POM\u53ef\u4ee5\u901a\u8fc7\u4e24\u7ea7\u903b\u8f91(two-level logic) \u6765\u5b9e\u73b0\u3002\u5bf9\u4e8e\\(n\\)\u4e2a\u53d8\u91cf\u7684SOM\uff0c\u7b2c1\u7ea7\u91c7\u7528\\(n\\)\u8f93\u5165\u4e0e\u95e8\uff0c\u7b2c2\u7ea7\u91c7\u7528\u4e00\u4e2a\u6216\u95e8 </p> <p>\u6ce8\uff1a\u6211\u4eec==\u4e00\u822c\u4f7f\u7528SOM==\uff0cPOM\u5f88\u5c11\u4f7f\u7528</p>"},{"location":"notebooks/dld/2/#conversion","title":"Conversion","text":"<p>\u5982\u4f55\u5f97\u5230(SOM\u5f62\u5f0f\u7684)\u51fd\u6570\\(F\\)\u7684\u8865\\(\\overline{F}\\)\uff1a + \u6311\u9009\u6700\u5c0f\u9879\u4e3a0\u7684\u9879(\u5373\\(F\\)\u4e2d\u672a\u51fa\u73b0\u7684\u6700\u5c0f\u9879)\uff0c\u53d6\u5b83\u4eec\u7684SOM + \u6216\u8005\u6311\u9009\u6700\u5c0f\u9879\u4e3a1\u7684\u9879(\u5373\\(F\\)\u4e2d\u51fa\u73b0\u8fc7\u7684\u6700\u5c0f\u9879)\uff0c\u53d6\u5b83\u4eec\u7684POM \ud83c\udf30\uff1a\\(F = \\sum m(1, 3, 5, 7), \\quad \\overline{F} = \\sum m(0, 2, 4, 6) = \\prod M(1, 3, 5, 7)\\)</p> <p>SOM \\(\\Leftrightarrow\\) POM\uff1a\u53d6\u4e24\u6b21\u8865\u51fd\u6570\u3002\u4ee5SOM\u5f62\u5f0f\u7684\u51fd\u6570\u4e3a\u4f8b\uff0c\u7b2c\u4e00\u6b21\u53d6\u8865\u6539\u53d8\u6700\u5c0f\u9879\u7684\u4e0b\u6807(\u53d6\u8865\u65b9\u6cd51)\uff0c\u7b2c\u4e8c\u6b21\u53d6\u8865\u6539\u53d8\u4e3aPOM\u7684\u5f62\u5f0f(\u53d6\u8865\u65b9\u6cd52)\uff0c\u56e0\u6b64 $$ F(x_1,\\dots,x_n) = \\sum\\limits_{0 \\le i \\le 2^n - 1} m_i = \\prod_{0 \\le j \\ne i\\le 2^n - 1} M_j $$</p>"},{"location":"notebooks/dld/2/#standard-forms_1","title":"Standard Forms","text":"<p>\u8303\u5f0f\u867d\u7136\u57fa\u672c\u4e14\u5bb9\u6613\u5f97\u5230\uff0c\u4f46\u5b83\u4e0d\u5e38\u7528\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6700\u5c0f\u9879\u548c\u6700\u5927\u9879\u90fd\u9700\u8981\u5305\u542b\u6240\u6709\\(n\\)\u4e2a\u53d8\u91cf\uff0c\u8fd9\u5728\u5b9e\u9645\u8fd0\u7528\u4e2d\u4e0d\u592a\u73b0\u5b9e\uff0c\u56e0\u6b64\u6211\u4eec\u91c7\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u2014\u2014\u6807\u51c6\u5f62\u5f0f(standard form)\uff0c\u5b83\u7684\u6bcf\u4e00\u9879\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u53d8\u91cf\u3002\u5b83\u5177\u6709\u4ee5\u4e0b\u5f62\u5f0f\uff1a + \u6807\u51c6\u79ef\u4e4b\u548c(standard sum-of-products, SOP)\uff1a\u4e0e\u9879\u7684\u6216 ^2bdc1c + \u6807\u51c6\u548c\u4e4b\u79ef(standard product-of-sums, POS)\uff1a\u6216\u9879\u7684\u4e0e</p> <p>\ud83c\udf30\u8fa8\u522b\uff1a + SOP\uff1a\\(ABC +\\overline{AB}C + B\\) + POS\uff1a\\((A + B) \\cdot (A + \\overline{B} + \\overline{C}) \\cdot C\\) + \u4e24\u8005\u90fd\u4e0d\u662f\uff1a\\((AB + C)(A + C),\\ AB\\overline{C} + AC(A + B)\\)</p> <p>\u56de\u5230\u4e0a\u9762\u7684[[Chap 2 Combinational Logic Circuit#^e31fcb|\u4f8b\u5b50]]\uff0c\u5c06\u8fc7\u7a0b\u5012\u8fc7\u6765\u4fbf\u5c06\u51fd\u6570(SOM)\u8f6c\u5316\u4e3aSOP\u7684\u5f62\u5f0f\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u5927\u5e45\u7b80\u5316\u4e86\u5e03\u5c14\u51fd\u6570\uff0c\u800c\u4e14\u5b9e\u73b0\u4e0a\u4e5f\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\uff1a </p>"},{"location":"notebooks/dld/2/#circuit-optimization","title":"Circuit Optimization","text":"<p>\u4f18\u5316(optimization)\u7684\u76ee\u6807\uff1a\u5f97\u5230\u5bf9\u4e8e\u67d0\u4e2a\u7ed9\u5b9a\u51fd\u6570\u7684\u6700\u7b80\u5b9e\u73b0</p> <p></p>"},{"location":"notebooks/dld/2/#tow-level-optimization","title":"Tow-Level Optimization","text":""},{"location":"notebooks/dld/2/#cost-criteria","title":"Cost Criteria","text":"<p>\u4ece==\u5e03\u5c14\u65b9\u7a0b==\u7684\u89d2\u5ea6\u770b\uff1a + \u5b57\u9762\u91cf\u6210\u672c(literal costs)\uff1a\u6240\u6709\u5b57\u9762\u91cf\u51fa\u73b0\u7684\u6b21\u6570(\u76f8\u540c\u7684\u5b57\u9762\u91cf\u51fa\u73b0\\(n\\)\u6b21\uff0c\u4e5f\u8ba1\\(n\\)\u6b21)</p> <p>\u6ce8\uff1a\u5b57\u9762\u91cf(literal) \u6307\u5355\u4e2a\u53d8\u91cf(\u4e0d\u8bba\u6709\u6ca1\u6709\u53d6\u53cd) + \u95e8\u8f93\u5165\u6210\u672c(gate input costs)\uff1a\u6240\u6709\u95e8\u7684\u8f93\u5165\u4e2a\u6570     + G\uff1a\u4e0d\u8ba1\u7b97\u975e\u95e8     + GN\uff1a\u8ba1\u7b97\u975e\u95e8 \u6ce8\uff1a\u7531\u4e8e\u95e8\u8f93\u5165\u6210\u672c\u4e0e\u6240\u7528\u6676\u4f53\u7ba1\u548c\u5bfc\u7ebf\u6570\u91cf\u6210\u6b63\u6bd4\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u79cd\u5f88\u597d\u7684\u6d4b\u91cf\u65b9\u5f0f</p> <p>\u4ece==\u95e8\u7535\u8def\u5b9e\u73b0==\u7684\u89d2\u5ea6\u770b\uff1a + \u5b57\u9762\u91cfL\uff1a\u8ba1\u7b97\u6240\u6709\u4e0e\u95e8\u7684\u8f93\u5165\u548c\u6216\u95e8\u4e2d\u5355\u53d8\u91cf\u8f93\u5165\u7684\u4e2a\u6570 + G\uff1a\u52a0\u4e0a\u5269\u4f59\u7684\u6216\u95e8\u8f93\u5165 + GN\uff1a\u52a0\u4e0a\u975e\u95e8\u7684\u8f93\u5165 \u7279\u6b8a\u60c5\u51b5\uff1a + \u4e09\u6001\u95e8\uff1a\u6709\u4e24\u4e2a\u8f93\u5165\u811a + \u4f20\u8f93\u95e8\uff1a\u770b\u4f3c\u6709\u591a\u4e2a\u811a\uff0c\u5b9e\u5219\u53ea\u8ba1\u7b97\u4e00\u4e2a\u811a</p> <p>\ud83c\udf30 </p>"},{"location":"notebooks/dld/2/#map-manipulation","title":"Map Manipulation","text":"<p>\u5361\u8bfa\u56fe(Karnaugh maps, K-map) \u7531\u4e00\u7ec4\u65b9\u5757\u6784\u6210\uff1a + \u6bcf\u4e2a\u65b9\u5757\u4ee3\u8868\u6700\u5c0f/\u5927\u9879 + \u5e03\u5c14\u51fd\u6570\u7684\u7ed3\u679c\u4ece\u771f\u503c\u8868\u8f6c\u79fb\u5230\u4e00\u5f20\u4e8c\u7ef4\u7684K-map\u4e0a + \u76f8\u90bb\u7684\u65b9\u5757\u4ec5\u76f8\u5dee\u4e00\u4e2a\u53d8\u91cf\uff08\u65b9\u5757\u6309\u7167\u683c\u96f7\u7801\u7684\u987a\u5e8f\u6392\u5217\uff09 + \u901a\u8fc7\u8bc6\u522b\u65b9\u5757\u7684\u56fe\u6848\uff0c\u5c06\u5e03\u5c14\u51fd\u6570\u8f6c\u5316\u4e3a\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u7b49\u4ef7\u51fd\u6570</p> <p>\u4f18\u70b9\uff1a\u7b80\u5355\u4e0d\u6613\u9519\uff0c\u4e0d\u7528\u8bb0\u90a3\u4e9b\u7e41\u7410\u7684\u5b9a\u7406\u6765\u5316\u7b80\uff0c\u76f8\u8f83\u4e8e\u4ee3\u6570\u65b9\u6cd5\u5316\u7b80\u6240\u9700\u6b65\u9aa4\u66f4\u5c11 \u7f3a\u70b9\uff1a\u4ec5\u9650\u4e8e\u5c11\u91cf\u53d8\u91cf(2-5\u4e2a)\uff0c\u7ed3\u679c\u4e0d\u552f\u4e00</p> <p>\u5e94\u7528\uff1a + \u627e\u5230\u6700\u4f18\u6216\u8fd1\u4f3c\u6700\u4f18\u89e3 + \u5c06\u7b80\u5316\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u8fc7\u7a0b\u53ef\u89c6\u5316 + \u5728\u8ba1\u7b97\u673a\u8f85\u52a9\u8bbe\u8ba1(CAD)\u7528\u4e8e\u5316\u7b80\u5927\u578b\u7535\u8def</p> <p>\u4f7f\u7528K-map\u7b80\u5316\u7684\u6b65\u9aa4\uff1a + \u627e\u5230\u6700\u5c0f\u6216\u6700\u5927\u9879 + \u7528\u6700\u5c0f/\u5927\u9879\u586b\u5145K-map\uff0c\u5176\u4e2d==\u6700\u5c0f\u9879\u586b1==\uff0c\u6700\u5927\u9879\u586b0 + \u7528\u77e9\u5f62\u5708\u51fa\u5305\u62ec==2\u7684\u6b21\u5e42\u4e2a==\u5168\u90fd\u662f1(SOP)\u7684\u65b9\u5757\uff08\u76f8\u5f53\u4e8eSOP\u4e2d\u7684\u79ef\u9879\uff09\uff0c\u4e14\u786e\u4fdd\u77e9\u5f62\u5c3d\u53ef\u80fd\u7684\u5927\uff0c\u77e9\u5f62\u4e4b\u95f4\u53ef\u4ee5\u91cd\u53e0</p> <p>POS\u5219\u627e\u5168\u90fd\u662f0\u7684\u65b9\u5757(\u548c\u9879) + \u4ece\u8fd9\u4e9b\u5708\u4e2d\u5f97\u5230\u7b80\u5316\u7684\u8868\u8fbe\u5f0f\u3002     + SOP\uff1a\u627e\u5230\u4e58\u79ef\u9879\u5e76\u5c06\u5b83\u4eec\u76f8\u52a0     + POS\uff1a\u627e\u5230\u548c\u9879\u5e76\u5c06\u5b83\u4eec\u76f8\u4e58</p> <p>\u8be6\u7ec6\u9610\u91ca\uff1a 1. \u53cc\u53d8\u91cf      2. \u4e09\u53d8\u91cf     \u89c2\u5bdf\u5230K-map\u7684\u65b9\u5757\u901a\u8fc7\u683c\u96f7\u7801\u7f16\u5740          + \u4e00\u4e2a\u65b9\u5757\u4ee3\u8868\u4e09\u4e2a\u53d8\u91cf\u7684\u6700\u5c0f\u9879     + \u4e24\u4e2a\u76f8\u90bb\u65b9\u5757\u4ee3\u8868\u4e24\u4e2a\u53d8\u91cf\u6784\u6210\u7684\u79ef\u9879     + \u56db\u4e2a\u76f8\u90bb\u65b9\u5757\u4ee3\u8868\u4e00\u4e2a\u53d8\u91cf     + \u516b\u4e2a\u65b9\u5757 = 1</p> <pre><code>\u6709\u4e9b\u65b9\u5757\u770b\u4f3c\u4e0d\u76f8\u90bb\uff0c\u4f46\u5982\u679c\u91c7\u7528\u201c\u6309\u5bf9\u76f8\u90bb\u73af(pairwise adjacent ring)\u201d\u7684\u6982\u5ff5\uff0c\u5c06K-map\u201c**\u5f2f\u66f2**\u201d\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u5706\u67f1\uff0c\u90a3\u4e48\u4e24\u8fb9\u7684\u65b9\u5757\u5c31\u4f1a\u5f62\u6210\u76f8\u90bb\u7684\u5173\u7cfb\u3002\u8fd9\u6837\u7684\u76f8\u90bb\u4e5f\u53ef\u4ee5\u7528\u6765\u5316\u7b80\n![](Quicker_20240313_193307.png)\n\n\ud83c\udf30\n![](./images/C2/Quicker_20240504_195039.png)\n</code></pre> <ol> <li> <p>\u56db\u53d8\u91cf     </p> <ul> <li>1\u4e2a\u65b9\u5757 = 4\u53d8\u91cf\u79ef\u9879(\u6700\u5c0f\u9879)</li> <li>2\u4e2a\u65b9\u5757 = 3\u53d8\u91cf\u79ef\u9879</li> <li>4\u4e2a\u65b9\u5757 = 2\u53d8\u91cf\u79ef\u9879</li> <li>8\u4e2a\u65b9\u5757 = 1\u53d8\u91cf\u79ef\u9879</li> <li>16\u4e2a\u65b9\u5757 = 1</li> </ul> <p>\u56db\u53d8\u91cfK-map\u7684\u4e24\u4fa7\u548c\u4e0a\u4e0b\u4e5f\u8ba4\u4e3a\u662f\u201c\u76f8\u90bb\u201d\u7684\u2014\u2014\u53ef\u4ee5\u5c06K-map\u5f2f\u66f2\u6210\u4e00\u4e2a\u751c\u751c\u5708\u72b6\u7684\u7269\u4f53\uff1a </p> </li> <li> <p>\u4e94\u53d8\u91cf     </p> </li> </ol>"},{"location":"notebooks/dld/2/#dont-care","title":"Don't-Care","text":"<p>\u6709\u65f6\u67d0\u4e2a\u51fd\u6570\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a + \u6700\u5c0f\u9879\u5bf9\u5e94\u7684\u8f93\u5165\u4ece\u672a\u51fa\u73b0\u8fc7 + \u6700\u5c0f\u9879\u5bf9\u5e94\u7684\u8f93\u51fa\u4ece\u672a\u7528\u8fc7 \u8fd9\u6837\u7684\u8f93\u51fa\u503c\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\uff0c\u56e0\u6b64\u7528\\(\\times\\)\u4ee3\u8868Don't-Cares\uff0c\u65e2\u53ef\u4ee5\u770b\u4f5c1\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c0\u3002\u5728SOP\u5316\u7b80\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\\(\\times\\)\u770b\u4f5c\"1\"\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f62\u6210\u66f4\u5927\u9762\u79ef\u7684\u4e3b\u8574\u542b\u9879\uff0c\u6709\u52a9\u4e8e\u5316\u7b80\uff0c\u964d\u4f4e\u903b\u8f91\u7535\u8def\u6210\u672c\u3002</p> <p>\ud83c\udf30\uff1a 1. BCD\u7801\u4e2d\uff0c\u6211\u4eec\u53ea\u7528\u52300-9\u5341\u4e2a\u6570\u5b57\uff0c1010-1111\u6211\u4eec\u4e0d\u7528\uff0c\u56e0\u6b64\u5b83\u4eec\u5728K-map\u4e0a\u5bf9\u5e94\u7684\u8f93\u51fa\u6211\u4eec\u7528\\(\\times\\)\u8868\u793a 2.  3. \u72ec\u70ed\u7801\uff1a</p>"},{"location":"notebooks/dld/2/#systematic-simplication","title":"Systematic Simplication","text":"<ul> <li>\u8574\u542b\u9879(implicant)\uff1aSOP\u7684\u79ef\u9879\u6216POS\u7684\u548c\u9879\uff0c\u5305\u542b\\(2^k(k \\in [0, n])\\)\u4e2a\u76f8\u90bb\u65b9\u5757</li> <li>\u4e3b\u8574\u542b\u9879(prime implicant)\uff1a\u7ed3\u5408\u5c3d\u53ef\u80fd\u591a\u7684\\(2^k(k \\in [0, n])\\)\u4e2a\u76f8\u90bb\u65b9\u5757\u7684\u79ef\u9879</li> <li>\u8d28\u4e3b\u8574\u542b\u9879(essential prime implicant)\uff1a\u81f3\u5c11\u5305\u542b1\u4e2a==\u6ca1\u6709\u88ab\u5176\u4ed6\u4e3b\u8574\u542b\u9879\u5305\u62ec\u5728\u5185\u7684\u6700\u5c0f\u9879==\u7684\u4e3b\u8574\u542b\u9879</li> </ul> <p>\u6ce8\uff1a\u5bf9\u4e8e\u5468\u671f\u5e03\u5c14\u51fd\u6570(cyclic Boolean function)\uff0c\u5b83\u7684K-map\u662f\u6ca1\u6709\u8d28\u4e3b\u8574\u542b\u9879\u7684 </p> <p></p> <p>\u89e3\u9898\u6280\u5de7\uff1a + \u4ee5\\(n\\)\u53d8\u91cf\u5361\u8bfa\u56fe\u4e3a\u4f8b\uff0c\u5148\u627e\u5305\u542b\\(2^{n - 1}\\)\u9879\u7684\u4e3b\u8574\u542b\u9879\uff0c\u518d\u627e\u5305\u542b\\(2^{n - 2}\\)\u9879\u7684\u4e3b\u8574\u542b\u9879\uff0c\\(\\dots\\)\uff0c\u4ee5\u6b64\u7c7b\u63a8 + \u5148\uff08\u7528\u4e0d\u540c\u989c\u8272\u7684\u7b14\uff09\u6846\u51fa\u6240\u6709\u7684\u4e3b\u8574\u542b\u9879\uff0c\u7136\u540e\u518d\u627e\u53d8\u91cf\u5316\u7b80\u4e3a\u5e03\u5c14\u51fd\u6570</p> <p>\ud83c\udf30 </p> <p></p>"},{"location":"notebooks/dld/2/#multiple-level-circuit-optimization","title":"Multiple-Level Circuit Optimization","text":"<p>\u591a\u7ea7\u7535\u8def\u76f8\u8f83\u4e8e\u4e24\u7ea7\u7535\u8def(SOP \u548c POS)\uff0c\u5b83==\u51cf\u5c11\u4e86\u8f93\u5165\u7684\u6210\u672c== </p>"},{"location":"notebooks/dld/2/#additional-gates-and-circuit","title":"Additional Gates and Circuit","text":""},{"location":"notebooks/dld/2/#other-gate-types","title":"Other Gate Types","text":"<p>\ud83c\udf1f\u7b80\u5355\u95e8\u7535\u8def\u8868(\u7b80\u5355\u3001\u5feb\u6377) </p> <p>\u6ce8\uff1a 1. \u6bd4\u8f83\u4e0e\u95e8\u548c\u4e09\u6001\u95e8(3-State Buffer)\uff1a\u4e0e\u95e8\u7684\u8f93\u51faF\u4e0d\u80fd\u4e0e\u5176\u4ed6\u95e8\u7684\u8f93\u51fa\u76f8\u8fde\uff0c\u800c\u4e09\u6001\u7f13\u51b2\u5668\u53ef\u4ee5 2. Hi-Z\u610f\u601d\u662f\u9ad8\u963b\u6297\u7684\u72b6\u6001\uff0c\u6b64\u65f6\u65e2\u975e\u9ad8\u7535\u5e73\uff0c\u4ea6\u975e\u4f4e\u7535\u5e73</p> <p>\u7f13\u51b2\u5668(Buffer) \u770b\u8d77\u6765\u53ea\u8d77\u5230\u8fde\u63a5\u4f5c\u7528\uff0c\u5b9e\u9645\u4e0a\u5b83\u8d77\u5230\u63d0\u5347\u7535\u538b\uff0c\u589e\u52a0\u7535\u8def\u8fd0\u7b97\u7684\u901f\u5ea6\u7684\u4f5c\u7528</p>"},{"location":"notebooks/dld/2/#nand-and-nor-gates","title":"NAND and NOR Gates","text":"<p>\u4e0e\u975e\u95e8(NAND Gate)\uff1a  $$ F = \\overline{XYZ} = \\overline{X} + \\overline{Y} + \\overline{Z} $$</p> <p>\u6216\u975e\u95e8(NOR Gate)\uff1a  $$ F = \\overline{X + Y +Z} = \\overline{X} \\cdot \\overline{Y} \\cdot \\overline{Z} $$ \u4e0e\u975e\u95e8\u3001\u6216\u975e\u95e8\u90fd\u662f\u4e00\u79cd\u901a\u7528\u95e8(Universal gate)\uff0c\u5373\u53ef\u4ee5\u7528\u6765\u6267\u884c\u4efb\u4f55\u5e03\u5c14\u51fd\u6570\u7684\u95e8\u3002\u901a\u8fc7CMOS\u6280\u672f\u5f88\u81ea\u7136\u5730\u5b9e\u73b0\u4e0e\u975e\u95e8\u7684\u529f\u80fd\u3002</p> <p>\u2757\u590d\u6742\u95e8\u7535\u8def\u8868(\u4f4e\u6210\u672c\u3001\u4f20\u8f93\u5feb) </p>"},{"location":"notebooks/dld/2/#buffer","title":"Buffer","text":"<p>\u7f13\u51b2\u5668(buffer) \u662f\u4e00\u4e2a\u7535\u5b50\u653e\u5927\u5668\uff0c\u7528\u6765\u63d0\u9ad8\u7535\u538b\u3001\u63d0\u5347\u7535\u8def\u8fd0\u884c\u7684\u901f\u5ea6\uff0c\u5b83\u7684\u51fd\u6570\u4e3a\\(F = X\\) </p>"},{"location":"notebooks/dld/2/#3-state-buffer","title":"3-State Buffer","text":"<p>\u6ce8\uff1a\u591a\u4e2a\u95e8\u7684\u8f93\u51fa==\u4e0d\u80fd==\u7528\u7ebf\u8fde\u5728\u4e00\u8d77\uff01\uff01\uff01</p> <p>\u4e09\u6001\u95e8(3-state buffer) \u63d0\u4f9b\u4e86\u7b2c\u4e09\u4e2a\u903b\u8f91\u503c\uff1a\u9ad8\u963b\u6297(Hi-impedance) \u8f93\u51faHi-Z\uff0c\u5373\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u5904\u4e8e\u65ad\u8def\u72b6\u6001\uff0c\u56e0\u6b64\u9ad8\u963b\u6297\u72b6\u6001\u7684\u95e8\u8f93\u51fa\u53ef\u4ee5\u8fde\u5728\u4e00\u8d77\u3002 </p> <p>\u7b26\u53f7\u53ca\u771f\u503c\u8868  + IN\uff1a\u6570\u636e\u8f93\u5165 + EN\uff1a\u4f7f\u80fd\u63a7\u5236\u8f93\u5165 + OUT\uff1a\u6570\u636e\u8f93\u51fa</p> <ul> <li>EN = 0 \\(\\rightarrow\\) OUT = Hi-Z</li> <li>EN = 1 \\(\\rightarrow\\) OUT = IN</li> </ul> <p>\u4e09\u4e2a\u4e09\u6001\u95e8\u8fde\u5728\u4e00\u8d77\uff1a </p> <p>\u6ce8\uff1a\u540c\u4e00\u65f6\u95f4==\u6700\u591a\u53ea\u6709\u4e00\u4e2a==\u4e09\u6001\u95e8\u5904\u4e8e\u4f7f\u80fd\u72b6\u6001\uff0c\u5426\u5219\u7535\u8def\u5c31\u4f1a\u88ab\u70e7\u574f\u6389</p> <p>\ud83c\udf30\uff1a\u6570\u636e\u9009\u62e9\u7535\u8def  + S = 0 \\(\\rightarrow\\) OUT = IN0 + S = 1 \\(\\rightarrow\\) OUT = IN1</p> <p>\u6ce8\uff1a\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u4e00\u4e2a\u4e09\u6001\u95e8\u5904\u4e8e\u4f7f\u80fd\u72b6\u6001\u65f6\uff0c\u53e6\u4e00\u4e2a\u4e00\u5b9a\u5904\u4e8e\u9ad8\u963b\u6297\u72b6\u6001\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u70e7\u574f\u7684\u60c5\u51b5\u53d1\u751f</p>"},{"location":"notebooks/dld/2/#exclusive-or-operator-and-gates","title":"Exclusive-OR Operator and Gates","text":"<p>XOR(\u5f02\u6216\u95e8) \\(X \\oplus Y = X \\overline{Y} + \\overline{X}Y\\) XNOR(\u540c\u6216\u95e8) \\(\\overline{X \\oplus Y} = XY + \\overline{XY}\\)  ^a7ec1f</p> <p>\u6ce8\uff1aXNOR\u51fd\u6570\u5373\u4e3a\u7b49\u4ef7\u51fd\u6570\uff0c\u8bb0\u4f5c\\(\\equiv\\)</p> <p>\u5982\u4f55\u5b9e\u73b0XOR? 1.   2. \u53ea\u7528\u4e0e\u975e\u95e8\u6784\u5efa\u7684\u5f02\u6216\u95e8\u7535\u8def </p> <p>\u5e94\u7528\uff1a\u52a0/\u51cf/\u4e58\u6cd5\u5668\u3001\u8ba1\u6570\u5668\u3001\u9012\u589e\u5668\u3001\u9012\u51cf\u5668\u3001\u5947\u5076\u751f\u6210\u5668/\u6821\u9a8c\u5668</p> <p>\u6ce8\uff1a\u4e25\u683c\u6765\u8bf4\uff0cXOR\u548cXNOR\u95e8\u4e0d\u80fd\u5177\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u8f93\u5165\uff0c\u5982\u679c\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\uff0c\u5219\u5b83\u4eec\u88ab\u5947\u51fd\u6570\u548c\u5076\u51fd\u6570\u53d6\u4ee3</p> <p>\u2b50\u5f02\u6216\u6052\u7b49\u5f0f\uff1a $$ X \\oplus 0 = X \\quad X \\oplus 1 = \\overline{X} \\quad X \\oplus X = 0 \\quad X \\oplus \\overline{X} = 1 $$ $$ X \\oplus Y = Y \\oplus X \\quad (X \\oplus Y) \\oplus Z = X \\oplus (Y \\oplus Z) = X \\oplus Y \\oplus Z $$</p>"},{"location":"notebooks/dld/2/#odd-and-even-functions","title":"Odd and Even Functions","text":"<p>\u4e09\u4e2a\u53d8\u91cf\u4ee5\u4e0a\u7684\u5f02\u6216\u51fd\u6570\u79f0\u4e3a\u5947\u51fd\u6570(odd function)\uff1a \\(\\(X \\oplus Y \\oplus Z = \\overline{XY}Z + \\overline{X}Y\\overline{Z} + X \\overline{YZ} + XYZ\\)\\) \u5947\u51fd\u6570\u7684\u8865\u4e3a\u5076\u51fd\u6570(even function)</p> <p>\u5947\u51fd\u6570\u548c\u5076\u51fd\u6570\u5728K-map\u4e0a\u7684\u5e03\u5c40\u5448\u68cb\u76d8\u5e03\u5c40  \u4e0d\u96be\u770b\u51fa\uff1a + \u5947\u51fd\u6570\u76841\u51fa\u73b0\u5728\u5bf9\u5e94\u62e5\u6709\u5947\u6570\u4e2a1\u7684\u7d22\u5f15\u7684\u6700\u5c0f\u9879\u4e0a + \u5076\u51fd\u6570\u76841\u51fa\u73b0\u5728\u5bf9\u5e94\u62e5\u6709\u5076\u6570\u4e2a1\u7684\u7d22\u5f15\u7684\u6700\u5c0f\u9879\u4e0a</p> <p>\u5bf9\u4e8e\u591a\u4e2a\u53d8\u91cf\u7684\u5f02\u6216\uff0c\u6211\u4eec\u91c7\u7528\u6811\u72b6\u7ed3\u6784(tree)\uff0c\u5c06\u51e0\u4e2a\u5f02\u6216\u95e8\u8fde\u5728\u4e00\u8d77 </p>"},{"location":"notebooks/dld/2/#parity-generators-and-checkers","title":"Parity Generators and Checkers","text":"<p>\u56de\u987e\u77e5\u8bc6\uff1a[[Chap 1 Digital Systems and Information#^79ab41|\u5947\u5076\u6821\u9a8c\u4f4d]]</p> <p> \u5927\u81f4\u539f\u7406\uff1a + \u5076\u6821\u9a8c\u7801\uff1a\u4f7f\u7528\u5947\u51fd\u6570\u751f\u6210\u548c\u6821\u9a8c + \u5947\u6821\u9a8c\u7801\uff1a\u4f7f\u7528\u5076\u51fd\u6570\u751f\u6210\u548c\u6821\u9a8c </p> <p>3\u4f4d\u7801\u5076\u6821\u9a8c\u751f\u6210\u5668+\u68c0\u67e5\u5668 </p>"},{"location":"notebooks/dld/2/#gate-propagation-delay","title":"Gate Propagation Delay","text":""},{"location":"notebooks/dld/2/#gate-delay","title":"Gate Delay","text":"<p>\u5728\u5b9e\u9645\u7684\u7269\u7406\u95e8\u4e2d\uff0c\u5f53\u63d0\u4f9b\u8f93\u5165\u65f6\uff0c\u8f93\u51fa\u4e0d\u4f1a\u7acb\u9a6c\u968f\u4e4b\u53d1\u751f\u6539\u53d8\uff0c\u8fd9\u8bf4\u660e\u8f93\u5165\u7684\u53d8\u5316\u548c\u8f93\u51fa\u7684\u53d8\u5316\u4e4b\u95f4\u5b58\u5728\u5ef6\u8fdf\uff0c\u8fd9\u88ab\u79f0\u4e3a**\u95e8\u5ef6\u8fdf(gate delay)</p>"},{"location":"notebooks/dld/2/#appendix","title":"Appendix","text":""},{"location":"notebooks/dld/2/#shannon-formula","title":"Shannon Formula","text":"\\[ \\text{Extension of }X \\cdot \\bar{X} \\text{ and } X \\cdot \\bar{X} = X $$ $$ x \\cdot f(x, \\bar{x}, y, \\dots, z) = x \\cdot f(1, 0, y, \\dots, z)  $$ $$ \\bar{x} \\cdot f(x, \\bar{x}, y, \\dots, z) = \\bar{x} \\cdot f(0, 1, y, \\dots, z) $$ $$ \\text{Extension of }A + \\bar{A} = 1 \\text{ ,}A +A\\bar{B} = A + B \\text{ and } A + AB = A $$ $$ x + f(x, \\bar{x}, y, \\dots, z) = x + f(0, 1, y, \\dots, z)  $$ $$ \\bar{x} + f(x, \\bar{x}, y, \\dots, z) = \\bar{x} + f(1, 0, y, \\dots, z)  \\] <p>Shannon Expansion: $$ \\text{These formulas are derived from four formulas above} $$ $$ f(x, \\bar{x}, y, \\dots, z) = xf(1, 0, y, \\dots, z) +\\bar{x}f(0, 1, y, \\dots, z)  $$ $$ f(x, \\bar{x}, y, \\dots, z) = [x +f(0, 1, y, \\dots, z)]\\cdot [\\bar{x} + f(1, 0, y, \\dots, z)] $$</p>"},{"location":"notebooks/dld/2/#transmission-gate","title":"Transmission Gate","text":""},{"location":"notebooks/dld/3/","title":"Chap 3 Combinational Logical Design","text":":material-circle-edit-outline: \u7ea6 7634 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 25 \u5206\u949f"},{"location":"notebooks/dld/3/#design-procedure","title":"Design Procedure","text":"<p>\u4e24\u7c7b\u903b\u8f91\u7535\u8def\uff1a + \u7ec4\u5408\u903b\u8f91\u7535\u8def(combinational logic circuit)\uff1a\u903b\u8f91\u95e8\u7684\u8f93\u51fa\u662f\u53ea\u548c\u5f53\u524d\u8f93\u5165\u6709\u5173\u7684\u51fd\u6570\u7684\u7535\u8def\uff0c\u5b83\u5305\u62ec\uff1a     + \\(m\\)\u4e2a\u5e03\u5c14\u8f93\u5165     + \\(n\\)\u4e2a\u5e03\u5c14\u8f93\u51fa     + \\(n\\)\u4e2a\u5f00\u5173\u51fd\u6570\uff0c\u6bcf\u4e2a\u51fd\u6570\u5c06\\(2^m\\)\u79cd\u8f93\u5165\u7ec4\u5408\u6620\u5c04\u5230\u4e00\u4e2a\u8f93\u51fa\uff0c\u4f7f\u5f97\u5f53\u524d\u8f93\u51fa\u503c\u4ec5\u53d6\u51b3\u4e8e\u5f53\u524d\u8f93\u5165\u503c      + \u65f6\u5e8f\u903b\u8f91\u7535\u8def(sequential logic circuit)\uff1a\u903b\u8f91\u95e8\u7684\u8f93\u51fa\u662f\u548c\u5f53\u524d\u8f93\u5165\uff0c\u4ee5\u53ca\u4e4b\u524d\u7684\u8f93\u5165\uff08\u79f0\u4e3a\u72b6\u6001(state)\uff09\u90fd\u6709\u5173\u7684\u51fd\u6570\u7684\u7535\u8def     &gt;\u6ce8\uff1a\u76f8\u5173\u5185\u5bb9\u5728[[Chap 4 Sequential Circuits|\u7b2c4\u7ae0]]\u5c06\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u4ee5\u4e0b\u5185\u5bb9\u5747\u4e3a\u7ec4\u5408\u7535\u8def</p>"},{"location":"notebooks/dld/3/#design-concepts-and-automation","title":"Design Concepts and Automation","text":"<p>\u5206\u6790\u903b\u8f91\u7535\u8def + \u5199\u4e0b\u7535\u8def\u56fe\u5bf9\u5e94\u7684\u5e03\u5c14\u51fd\u6570 + \u753b\u51fa\u771f\u503c\u8868 + \u51fd\u6570\u5206\u6790 + \u68c0\u9a8c</p> <p>\u63cf\u8ff0\u903b\u8f91\u4e8b\u4ef6\u7684\u65b9\u6cd5\uff1a + \u771f\u503c\u8868 + \u5e03\u5c14\u51fd\u6570 + \u5361\u8bfa\u56fe + \u65f6\u95f4\u56fe + \u903b\u8f91\u7535\u8def </p>"},{"location":"notebooks/dld/3/#hierarchical-design","title":"Hierarchical Design","text":"<p>\u5206\u5c42\u8bbe\u8ba1(hierarchical design) \u662f\u4e00\u79cd\u63a7\u5236\u51fd\u6570\u590d\u6742\u6027\u7684\u65b9\u6cd5\uff1a + \u5c06\u51fd\u6570\u5206\u5272\u6210\u5757(blocks) + \u5206\u5272\u6210\u66f4\u5c0f\u7684\u5757\uff0c\u76f4\u81f3\u8db3\u591f\u5c0f + \u4e0d\u53ef\u518d\u5206\u79f0\u4e3a\u539f\u5757(primitive block) + \u6240\u6709\u7684\u5757\u6784\u6210\u4e86\u5206\u5c42\u7ed3\u6784</p> <p>\ud83c\udf30\uff1a9\u8f93\u5165\u201d\u5947\u5076\u4f4d\u6811(parity tree)\u201c</p> <p>\u5982\u679c\u76f4\u63a5\u5f92\u624b\u753b\uff0c\u663e\u7136\u662f\u4e0d\u5207\u5b9e\u9645\u7684\uff0c\u56e0\u6b64\u6309\u7167\u4e0b\u9762\u7684\u5206\u5c42\u8bbe\u8ba1\uff0c\u4ece\u6574\u4f53\u4e00\u5c42\u5c42\u62c6\u5206\uff0c\u6700\u540e\u5230\u95e8\u7ea7\u7ed3\u6784</p> <p></p>"},{"location":"notebooks/dld/3/#reusable-function-blocks","title":"Reusable Function Blocks","text":"<p>\u6211\u4eec\u5e94\u5c3d\u91cf\u5c06\u590d\u6742\u7684\u8bbe\u8ba1\u5206\u89e3\u4e3a\u5e38\u89c1\u7684\u3001\u53ef\u91cd\u7528\u7684\u51fd\u6570\u5757\uff0c\u8fd9\u4e9b\u5757\u5e94\u5f53\u901a\u8fc7\u68c0\u9a8c\uff0c\u4e14\u653e\u5165\u5e93(library)\u4e2d\u4ee5\u4f9b\u540e\u7eed\u4f7f\u7528\u3002 \u8ba1\u7b97\u673a\u8f85\u52a9\u8bbe\u8ba1(Computer-Aided Design, CAD)\u5e38\u7528\u5230\u51fd\u6570\u5757\uff0c\u6bd4\u5982\uff1a + \u539f\u7406\u56fe\u6355\u83b7(Schematic Capture) + \u903b\u8f91\u6a21\u62df\u5668(Logic Simulator) + \u5b9a\u65f6\u9a8c\u8bc1\u5de5\u5177(Tools for Timing Languages) + \u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00(Hardware Description Languages)\uff1aVerilog \u548c VHDL + \u903b\u8f91\u5408\u6210\u5668(Logic Synthesizers) + \u96c6\u6210\u7535\u8def\u5e03\u5c40(Integrated Circuit Layout)</p>"},{"location":"notebooks/dld/3/#top-down-versus-bottom-up","title":"Top-Down versus Bottom-Up","text":"<ul> <li>\u81ea\u9876\u5411\u4e0b\u8bbe\u8ba1(Top-down design) \u4ece\u62bd\u8c61\u7684\u3001\u9ad8\u7ea7\u7684\u5177\u4f53\u5b9e\u73b0\u51fa\u53d1\uff0c\u901a\u8fc7\u5206\u89e3\u548c\u8fde\u7eed\u7684\u4fee\u6539\uff0c\u8fdb\u884c\u8d8a\u6765\u8d8a\u7ec6\u8282\u7684\u8bbe\u8ba1\uff0c\u66f4\u52a0\u5173\u6ce8\u590d\u6742\u6027\u3002\u5b83\u56de\u7b54\u4e86\uff1a\u6211\u4eec\u9700\u8981\u6784\u5efa\u4ec0\u4e48\uff1f</li> <li>\u81ea\u5e95\u5411\u4e0a(Bottom-up design) \u4ece\u7ec6\u8282\u7684\u3001\u539f\u59cb\u7684\u5757\u51fa\u53d1\uff0c\u5c06\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\uff0c\u5f62\u6210\u66f4\u5927\u66f4\u590d\u6742\u7684\u51fd\u6570\u5757\uff0c\u7740\u91cd\u4e8e\u7ec6\u8282\u3002\u5b83\u56de\u7b54\u4e86\uff1a\u6211\u4eec\u5982\u4f55\u6784\u5efa\uff1f</li> </ul> <p>\u5728\u7535\u5b50\u8bbe\u8ba1\u4e2d\uff0c\u8fd9\u4e24\u79cd\u8bbe\u8ba1\u601d\u60f3\u5f80\u5f80\u540c\u65f6\u8fdb\u884c\u3002</p>"},{"location":"notebooks/dld/3/#design-space","title":"Design Space","text":""},{"location":"notebooks/dld/3/#integrated-circuits","title":"Integrated Circuits","text":"<p>\u96c6\u6210\u7535\u8def(Integrated circuit\uff0c\u53c8\u53eb\u82af\u7247)\uff0c\u662f\u4e00\u5757\u5177\u6709\u76f8\u4e92\u8fde\u63a5\u7684\u6570\u5b57\u95e8\u7535\u8def\u548c\u5b58\u50a8\u5143\u4ef6\u7684\u534a\u5bfc\u4f53</p> <p>\u5206\u7c7b\uff1a + SSI(small-scale integrated)\uff1a\u5c11\u4e8e10\u4e2a\u95e8 + MSI(medium-scale integrated)\uff1a10-100\u4e2a\u95e8 + LSI(large-scale integrated)\uff1a100-1000\u4e2a\u95e8 + VLSI(very large-scale ingegrated)\uff1a\u6210\u5343\u4e0a\u4e07\u7684\u95e8</p>"},{"location":"notebooks/dld/3/#technology-parameters","title":"Technology Parameters","text":"<p>\u5177\u4f53\u7684\u95e8\u7535\u8def\u5b9e\u73b0\u7531\u4ee5\u4e0b\u53c2\u6570\u8868\u793a\uff1a + \u6247\u5165(Fan-in)\uff1a\u95e8\u7535\u8def\u53ef\u7528\u7684\u8f93\u5165\u6570\u91cf     </p> <ul> <li> <p>\u2b50\u6247\u51fa(Fan-out)\uff1a\u5728\u95e8\u7535\u8def\u8f93\u51fa\u7684\u9a71\u52a8\u4e0b\u7684\u6807\u51c6\u8d1f\u8f7d(standard loads) \u6570\u91cf          1\u4e2a\u6807\u51c6\u8d1f\u8f7d = 1\u4e2a\u975e\u95e8(inverter) \u7684\u8f93\u5165</p> <p>\u8fc7\u6e21\u65f6\u95f4(Transition time)\uff1a\u95e8\u8f93\u51fa\u6539\u53d8(\u9ad8\u5230\u4f4e/\u4f4e\u5230\u9ad8)\u6240\u9700\u7684\u65f6\u95f4 + \u4e0a\u5347\u65f6\u95f4(rise time)\\(t_{HL}\\)\uff1a\u9ad8\u7535\u5e73 \\(\\rightarrow\\) \u4f4e\u7535\u5e73 + \u4e0b\u964d\u65f6\u95f4(fall time)\\(t_{LH}\\)\uff1a\u4f4e\u7535\u5e73 \\(\\rightarrow\\) \u9ad8\u7535\u5e73 </p> <p>\u6700\u5927\u6247\u51fa(maximum fan-out)\uff1a\u95e8\u80fd\u591f\u9a71\u52a8\u7684\uff0c\u4e0d\u8d85\u8fc7\u89c4\u5b9a\u7684\u6700\u5927\u8fc7\u6e21\u65f6\u95f4\u7684\u6807\u51c6\u8d1f\u8f7d\u7684\u6570\u91cf </p> <p>\u968f\u7740\u6807\u51c6\u8d1f\u8f7d\u7684\u589e\u52a0\uff0c\u8fc7\u6e21\u65f6\u95f4(\u8fd9\u91cc\u662f\u4e0a\u5347\u65f6\u95f4)\u4e5f\u968f\u4e4b\u589e\u52a0</p> </li> <li> <p>\u566a\u58f0\u5bb9\u9650(Noise Margin)\uff1a\u5728\u6b63\u5e38\u8f93\u5165\u4e0a\u65bd\u52a0\u7684\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u7535\u8def\u8f93\u51fa\u7684\u4e0d\u826f\u53d8\u5316\u7684\u6700\u5927\u5916\u90e8\u566a\u58f0\u7535\u538b</p> </li> <li> <p>\u95e8\u7535\u8def\u6210\u672c(Cost for a gate)\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u95e8\u7535\u8def\u5bf9\u6574\u4e2a\u96c6\u6210\u7535\u8def\u6210\u672c\u7684\u8d21\u732e\u7684\u6d4b\u91cf     \u5728\u96c6\u6210\u7535\u8def\u4e2d\uff1a</p> <ul> <li>\u95e8\u7535\u8def\u6210\u672c\u4e0e\u95e8\u7535\u8def\u5360\u82af\u7247\u9762\u79ef\u7684\u5927\u5c0f\u6210\u6b63\u6bd4</li> <li>\u95e8\u7535\u8def\u7684\u9762\u79ef\u5927\u81f4\u4e0e\u6676\u4f53\u7ba1\u7684\u6570\u91cf\u548c\u5927\u5c0f\uff0c\u4ee5\u53ca\u7ebf\u8fde\u63a5\u7684\u6570\u91cf\u6210\u6b63\u6bd4</li> <li>\u5982\u679c\u65e0\u89c6\u8fde\u7ebf\u533a\u57df\uff0c\u95e8\u7535\u8def\u9762\u79ef\u5927\u81f4\u4e0e\u95e8\u8f93\u5165\u6570\u91cf\u6210\u6b63\u6bd4</li> <li>\u6240\u4ee5\u6211\u4eec\u7528==\u95e8\u8f93\u5165\u6570\u91cf==\u5927\u81f4\u6d4b\u91cf\u95e8\u7535\u8def\u7684\u6210\u672c</li> </ul> </li> <li> <p>\u2b50\u4f20\u64ad\u5ef6\u8fdf(Propagation Delay)\uff1a\u4ece\u8f93\u5165\u5230\u8f93\u51fa\u7684\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u4fe1\u53f7\u503c\u53d1\u751f\u6539\u53d8\u6240\u9700\u7684\u65f6\u95f4</p> <p>\u9ad8\u5230\u4f4e(\\(t_{PHL}\\))\u548c\u4f4e\u5230\u9ad8(\\(t_{PLH}\\))\u7684\u8f93\u51fa\u4fe1\u53f7\u7684\u6539\u53d8\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u4f20\u64ad\u5ef6\u8fdf\u3002\u8fd9\u91cc\u4e24\u8005==\u53ea\u4e0e\u8f93\u51fa\u6709\u5173==\uff0c\u4e0e\u8f93\u5165\u4e0d\u76f8\u5173</p> <p>\u901a\u5e38\uff0c\u6211\u4eec\u901a\u8fc7==\u8f93\u5165/\u8f93\u51fa\u7684\u9ad8\u4f4e\u7535\u5e73\u7684\u4e2d\u70b9\u7684\u5ef6\u8fdf\u5dee==\u6765\u8ba1\u7b97\u4f20\u64ad\u5ef6\u8fdf\uff0c\u89c1\u4e0b\u56fe\ud83d\udc47 </p> <p>\u6ce8\uff1a\u6ce8\u610f\u8fc7\u6e21\u65f6\u95f4\u548c\u4f20\u64ad\u5ef6\u8fdf\u4e24\u4e2a\u6982\u5ff5\u7684\u533a\u522b\uff01</p> <p>\u5ef6\u8fdf\u6a21\u578b(delay model)\uff1a\u7528\u4e8e\u63cf\u8ff0\u5185\u90e8\u56fa\u6709\u7684\u95e8\u5ef6\u8fdf 1. \u4f20\u8f93\u5ef6\u8fdf(transport delay)\uff1a\u8f93\u5165\u53d1\u751f\u53d8\u5316\u540e\uff0c\u8f93\u51fa\u5728==\u56fa\u5b9a\u7684\u4e00\u6bb5\u5ef6\u8fdf==\u540e\u624d\u53d1\u751f\u76f8\u5e94\u7684\u53d8\u5316 2. \u60ef\u6027\u5ef6\u8fdf(inertial delay)\uff1a\u7c7b\u4f3c\u4f20\u8f93\u5ef6\u8fdf\uff0c\u4f46\u5982\u679c\u51fa\u73b0\u5c0f\u4e8e\u62d2\u7edd\u65f6\u95f4(rejection time) \u7684\u8109\u51b2\u53d8\u5316\uff0c\u5219\u8f93\u51fa\u5c06\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u3002 </p> <p>\u7535\u8def\u5ef6\u8fdf(circuit delay) \u5305\u62ec\uff1a + \u5185\u5728\u5ef6\u8fdf + \u6247\u51fa </p> <p>\u5ef6\u8fdf\u5e26\u6765\u7684\u95ee\u9898\uff1a \ud83c\udf30\uff1a \u6309\u7167\u5e03\u5c14\u4ee3\u6570\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u77e5\u9053\\(Y = A \\overline{A} = 0\\)\uff0c\u4f46\u6b63\u56e0\u4e3a\u5ef6\u8fdf\u7684\u5b58\u5728\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e0a\u56fe\u7684\u6bdb\u523a(glitch)\uff0c\u8fd9\u81ea\u7136\u4e0d\u662f\u6211\u4eec\u671f\u671b\u7684\u7ed3\u679c</p> <p>\u66f4\u590d\u6742\u7684\ud83c\udf30  \u8865\u6551\u63aa\u65bd\uff1a\u6dfb\u52a0\u4e00\u4e2a\u5197\u4f59\u9879\\(AB\\) </p> </li> <li> <p>\u529f\u7387\u8017\u6563(Power Dissipation)\uff1a\u7535\u6e90\u4f9b\u5e94\u548c\u95e8\u7535\u8def\u7684\u6d88\u8017</p> </li> </ul>"},{"location":"notebooks/dld/3/#design-trade-offs","title":"Design Trade-Offs","text":"<p>\u5728\u7535\u8def\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u9700\u8981\u6743\u8861\u6210\u672c(cost) \u548c \u6027\u80fd(performance)</p> <p>\ud83c\udf30  \u7b54\u6848\uff1a2 \u5206\u6790\uff1a + \u53ea\u6709\u4e00\u4e2a\u4e0e\u975e\u95e8\uff1a     + \u5ef6\u8fdf\uff1a0.45ns     + \u6210\u672c\uff1a2.0 + \u4e0e\u975e\u95e8 + \u7f13\u51b2\u5668\uff1a     + \u5ef6\u8fdf\uff1a0.33ns     + \u6210\u672c\uff1a2.0 + 1.5 = 3.5</p>"},{"location":"notebooks/dld/3/#positive-and-negative-logic","title":"Positive and Negative Logic","text":"<p>\u76f8\u540c\u7684\u7269\u7406\u95e8\u6709\u4e0d\u540c\u7684\u903b\u8f91\u610f\u4e49\uff0c\u53d6\u51b3\u4e8e\u5bf9\u4fe1\u53f7\u7684\u89e3\u91ca</p> <p>\u6b63\u903b\u8f91(Positive Logic)\uff1a + HIGH(more positive)\u4fe1\u53f7\u6c34\u5e73\u4ee3\u8868\u903b\u8f911 + LOW(less positive)\u4fe1\u53f7\u6c34\u5e73\u4ee3\u8868\u903b\u8f910</p> <p>\u8d1f\u903b\u8f91(Negative Logic) + LOW(more positive)\u4fe1\u53f7\u6c34\u5e73\u4ee3\u8868\u903b\u8f911 + HIGH(less positive)\u4fe1\u53f7\u6c34\u5e73\u4ee3\u8868\u903b\u8f910</p> <p>\u56e0\u6b64\uff0c\u4e00\u4e2a\u6267\u884c==\u6b63\u903b\u8f91\u4e0e==\u7684\u51fd\u6570\uff0c\u4e5f\u80fd\u6267\u884c==\u8d1f\u903b\u8f91\u6216==\u7684\u51fd\u6570\uff0c\u53cd\u4e4b\u4ea6\u7136</p> <p>\ud83c\udf30  \u4e0b\u9762\u4e24\u5f20\u8868\u5206\u522b\u8868\u793a\u6b63\u903b\u8f91\u548c\u8d1f\u903b\u8f91\u7684\u771f\u503c\u8868 </p> <p>\u5728\u95e8\u8f93\u5165\u548c\u8f93\u51fa\u4e0a\u4f7f\u7528\u6781\u6027\u6307\u793a\u5668(polarity indicator) \u4ee3\u8868\u8d1f\u903b\u8f91\u7684\u4f7f\u7528 </p>"},{"location":"notebooks/dld/3/#design-steps","title":"Design Steps","text":"<ul> <li>\u89c4\u8303(specification)\uff1a\u5199\u4e0b\u7535\u8def\u884c\u4e3a\u7684\u89c4\u8303\uff08\u6587\u672c\u3001HDL(\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00)\uff09</li> <li>\u6784\u601d(formulation)\uff1a\u5f97\u5230\u771f\u503c\u8868\u6216\u5e03\u5c14\u51fd\u6570\uff0c\u5b9a\u4e49\u6240\u9700\u7684\u5173\u4e8e\u8f93\u5165\u8f93\u51fa\u7684\u903b\u8f91\u5173\u7cfb</li> <li>\u4f18\u5316(optimization)\uff1a\u4f7f\u7528\u4e24\u7ea7\u4f18\u5316\uff0c\u6216\u8005\u591a\u7ea7\u4f18\u5316\u6765\u6700\u5c0f\u5316\u6240\u7528\u903b\u8f91\u95e8\u7684\u6570\u91cf\u3002\u753b\u51fa\u4e00\u5f20\u7528\u95e8\u7535\u8def\u6784\u5efa\u7684\u6700\u7ec8\u7535\u8def\u7684\u903b\u8f91\u56fe\u6216\u7f51\u56fe</li> <li>\u5de5\u827a\u6620\u5c04(technology mapping)\uff1a\u4f7f\u7528\u73b0\u6709\u7684\u5b9e\u73b0\u5de5\u827a\uff0c\u4fee\u6539\u521a\u624d\u5f97\u5230\u7684\u903b\u8f91\u56fe\u6216\u7f51\u56fe</li> <li>\u68c0\u9a8c(verification)\uff1a\u9a8c\u8bc1\u6700\u7ec8\u8bbe\u8ba1\u7684\u6b63\u786e\u6027 </li> </ul>"},{"location":"notebooks/dld/3/#technology-mapping","title":"Technology Mapping","text":"<p>\u5de5\u827a\u6620\u5c04(technology mapping) \u662f\u903b\u8f91\u7efc\u5408\u8fc7\u7a0b\u4e2d\u7684\u91cd\u8981\u4e00\u73af\uff0c\u5b83\u5c06\u4e0d\u4f9d\u8d56\u5177\u4f53\u5de5\u827a\u7684\u903b\u8f91\u8868\u8ff0\uff0c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u5de5\u827a\u89c4\u8303\uff08\u7a7a\u60f3 \\(\\rightarrow\\) \u73b0\u5b9e\uff09\u3002\u5de5\u827a\u6620\u5c04\u7684\u5176\u4e2d\u4e00\u4e2a\u5173\u952e\u64cd\u4f5c\u662f\u627e\u5230\u539f\u5148\u7684\u903b\u8f91\u63cf\u8ff0\u548c\u76ee\u6807\u5de5\u827a\u4e4b\u95f4\u7684\u903b\u8f91\u7b49\u4ef7\u5173\u7cfb</p>"},{"location":"notebooks/dld/3/#chip-design-styles","title":"Chip design styles","text":"<ul> <li>\u9ad8\u5ea6\u5b9a\u5236(full customized)\uff1a\u5173\u6ce8\u6574\u4e2a\u82af\u7247\u7684\u8bbe\u8ba1\uff0c\u4e00\u76f4\u5230\u5e03\u5c40\u4e0a\u7684\u7ec6\u8282<ul> <li>\u6602\u8d35</li> <li>\u9002\u7528\u4e8e\u5bc6\u96c6\u7684\u3001\u5feb\u901f\u7684\u82af\u7247</li> </ul> </li> <li>\u6807\u51c6\u5355\u5143(standard cell)\uff1a\u5728\u8bbe\u8ba1\u524d\u5df2\u7ecf\u6784\u5efa\u597d\u6a21\u5757\uff0c\u6216\u5229\u7528\u4e4b\u524d\u8bbe\u8ba1\u4e2d\u7684\u6a21\u5757<ul> <li>\u4e2d\u7b49\u8017\u8d39</li> <li>\u76f8\u6bd4full customized\uff0c\u5bc6\u5ea6\u66f4\u5c11\uff0c\u901f\u5ea6\u66f4\u6162</li> </ul> </li> <li>\u95e8\u9635\u5217(gate array)\uff1a\u5728\u5f88\u591a\u8bbe\u8ba1\u4e2d\u5e38\u7528\u7684\u95e8\u7535\u8def\u6676\u4f53\u7ba1\u65b9\u6848\uff0c\u5df2\u7ecf\u5728\u82af\u7247\u4e2d\u5efa\u597d\u4e86\u3002\u53ea\u4e13\u6ce8\u4e8e\u8be5\u82af\u7247\u4e2d\u7279\u5b9a\u7684\u95e8\u4e4b\u95f4\u7684\u5173\u7cfb<ul> <li>\u8017\u8d39\u6700\u5c11</li> <li>\u76f8\u6bd4\u524d\u4e24\u8005\u5bc6\u5ea6\u66f4\u5c11\u3001\u901f\u5ea6\u66f4\u6162</li> </ul> </li> </ul>"},{"location":"notebooks/dld/3/#cells-and-cell-libraries","title":"Cells and cell libraries","text":"<ul> <li>\u5355\u5143(Cell)\uff1a\u4e00\u4e2a\u9884\u5148\u8bbe\u8ba1\u597d\u7684\u539f\u59cb\u6a21\u5757\uff08\u524d\u9762\u4e09\u79cd\u82af\u7247\u8bbe\u8ba1\u98ce\u683c\u90fd\u4f1a\u7528\u5230\u5b83\uff09</li> <li>\u5355\u5143\u5e93(Cell library)\uff1a\u5bf9\u4e8e\u67d0\u4e2a\u8bbe\u8ba1\u7684\u4e00\u7ec4\u53ef\u7528\u7684\u5355\u5143</li> <li>\u5355\u5143\u8868\u5f81(Cell characterization)\uff1a\u7531\u8bbe\u8ba1\u8005\u6240\u4f7f\u7528\u7684\u5355\u5143\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u901a\u5e38\u57fa\u4e8e\u5b9e\u9645\u5355\u5143\u8bbe\u8ba1\u3001\u5236\u9020\u548c\u6d4b\u91cf\u503c</li> </ul> <p>\u5178\u578b\u5355\u5143\u8868\u5f81\u7ec4\u4ef6\uff1a + \u793a\u610f\u56fe\u6216\u903b\u8f91\u56fe + \u5355\u5143\u533a\u57df + \u8f93\u5165\u8d1f\u8f7d\uff08\u4ee5\u6807\u51c6\u8d1f\u8f7d\uff09\u63d0\u4ea4\u7ed9\u9a71\u52a8\u6bcf\u4e2a\u8f93\u5165\u7684\u8f93\u51fa + \u6765\u81ea\u6bcf\u4e2a\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5ef6\u8fdf + \u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u4e8e\u5de5\u827a\u6620\u5c04\u7684\u5355\u5143\u6a21\u7248 + \u4e00\u4e2a\u6216\u591a\u4e2aHDL\u6a21\u578b + \u81ea\u52a8\u5e03\u5c40\uff1a     + \u5355\u5143\u7535\u8def\u7684\u7269\u7406\u5e03\u5c40     + \u63d0\u4f9b\u5355\u5143\u7684\u8f93\u5165\u3001\u8f93\u51fa\u3001\u7535\u6e90\u548c\u63a5\u5730\u4f4d\u7f6e\u7684\u5e73\u9762\u56fe\u5e03\u5c40</p> <p></p>"},{"location":"notebooks/dld/3/#mapping-to-nand-gates","title":"Mapping to NAND Gates","text":"<p>\u5047\u5b9a\uff1a + \u539f\u6765\u7684\u793a\u610f\u56fe\u4e2d\u6709\u4e0e\u95e8\u3001\u6216\u95e8\u548c\u975e\u95e8 + \u5355\u5143\u5e93\u4ec5\u5305\u62ec\u4e00\u4e2a\u975e\u95e8\u548cn\u8f93\u5165\u4e0e\u975e\u95e8(\\(n = 2, 3, \\dots\\)) + \u5ffd\u7565\u95e8\u52a0\u8f7d\u548c\u5ef6\u8fdf\u7684\u65f6\u95f4</p> <p>\u5982\u4f55\u5b9e\u73b0\uff1a + \u79fb\u9664\u4e0e\u95e8\u548c\u6216\u95e8\uff08\u4f7f\u7528\u4e0e\u975e\u95e8\u548c\u975e\u95e8\uff09  + \u5c3d\u53ef\u80fd\u51cf\u5c11\u975e\u95e8\u4e2a\u6570 </p> <p>\ud83c\udf30 </p>"},{"location":"notebooks/dld/3/#mapping-to-nor-gates","title":"Mapping to NOR Gates","text":"<p>\u5047\u5b9a\uff1a + \u539f\u6765\u7684\u793a\u610f\u56fe\u4e2d\u6709\u4e0e\u95e8\u3001\u6216\u95e8\u548c\u975e\u95e8 + \u5355\u5143\u5e93\u4ec5\u5305\u62ec\u4e00\u4e2a\u975e\u95e8\u548cn\u8f93\u5165\u6216\u975e\u95e8(\\(n = 2, 3, \\dots\\)) + \u5ffd\u7565\u95e8\u52a0\u8f7d\u548c\u5ef6\u8fdf\u7684\u65f6\u95f4</p> <p>\u5982\u4f55\u5b9e\u73b0\uff1a + \u79fb\u9664\u4e0e\u95e8\u548c\u6216\u95e8\uff08\u4f7f\u7528\u4e0e\u975e\u95e8\u548c\u975e\u95e8\uff09  + \u5c3d\u53ef\u80fd\u51cf\u5c11\u975e\u95e8\u4e2a\u6570 </p> <p>\ud83c\udf30 </p>"},{"location":"notebooks/dld/3/#verification","title":"Verification","text":"<ul> <li>\u4eba\u5de5\u903b\u8f91\u5206\u6790(Manual Logic Analysis)<ul> <li>\u6839\u636e\u6700\u7ec8\u7535\u8def\uff0c\u5f97\u5230\u771f\u503c\u8868\uff0c\u6216\u8005\u5e03\u5c14\u65b9\u7a0b</li> <li>\u6bd4\u8f83\u73b0\u5728\u5f97\u5230\u7684\u548c\u4e4b\u524d\u5f97\u5230\u7684\u771f\u503c\u8868\uff0c\u6216\u8005\u8bc1\u660e\u73b0\u5728\u5f97\u5230\u7684\u5e03\u5c14\u65b9\u7a0b\u548c\u4e4b\u524d\u5f97\u5230\u7684\u5e03\u5c14\u65b9\u7a0b\u7b49\u4ef7</li> </ul> </li> <li>\u4eff\u771f(Simulation)<ul> <li>\u4f7f\u7528\u6d4b\u8bd5\u8f93\u5165\u6a21\u62df\u6700\u7ec8\u7535\u8def\u3001\u4e4b\u524d\u5f97\u5230\u7684\u771f\u503c\u8868\u3001\u5e03\u5c14\u65b9\u7a0b\u6216HDL</li> <li>\u5bf9\u4e8e\u7ec4\u5408\u7535\u8def\uff0c\u6211\u4eec\u9700\u8981\u6d4b\u8bd5\u6240\u6709\u53ef\u80fd\u7684\u6709\u610f\u4e49\u7684\u8f93\u5165\u7ec4\u5408\u6765\u9a8c\u8bc1\u6b63\u786e\u6027</li> </ul> </li> </ul>"},{"location":"notebooks/dld/3/#combinational-logic","title":"Combinational Logic","text":""},{"location":"notebooks/dld/3/#functions-and-functional-blocks","title":"Functions and functional blocks","text":"<p>\u51fd\u6570\u5757(functional block) \u662f\u51fd\u6570\u5728\u7ec4\u5408\u7535\u8def\u4e0a\u7684\u5b9e\u73b0\u3002\u73b0\u5728\uff0c\u5b83\u4eec\u5e38\u5e38\u7531VLSI(\u8d85\u5927\u89c4\u6a21\u96c6\u6210\u7535\u8def)\u5b9e\u73b0</p> <p></p>"},{"location":"notebooks/dld/3/#rudimentary-logic-functions","title":"Rudimentary Logic Functions","text":"<p>\u57fa\u672c\u7ec4\u5408\u903b\u8f91\u51fd\u6570\u5305\u62ec\uff1a + \u503c\u56fa\u5b9a(value-fixing)\uff1a\\(F = 0 \\text{ or } F = 1\\)\uff0c\u6ca1\u6709\u5e03\u5c14\u8fd0\u7b97\u7b26</p> <p>\u6ce8\uff1a\u503c\u56fa\u5b9a\u5206\u4e3a\u6682\u65f6\u56fa\u5b9a\u548c\u6c38\u4e45\u56fa\u5b9a\uff0c\u5e38\u7528\u4e8e\u53ef\u7f16\u7a0b\u903b\u8f91\u8bbe\u5907\u4e2d(\u89c1\u7b2c5\u7ae0) + \u8f6c\u79fb(transferring)\uff1a\\(F = X\\)\uff0c\u6ca1\u6709\u5e03\u5c14\u8fd0\u7b97\u7b26 + \u9006\u8f6c(inverting)\uff1a\\(F = \\overline{X}\\)\uff0c\u5305\u542b\u4e00\u4e2a\u903b\u8f91\u95e8 + \u4f7f\u80fd(enabling)\uff1a\\(F = X \\cdot EN \\text{ or } F = X + \\overline{EN}\\)\uff0c\u5305\u542b\u4e00\u4e2a\u6216\u4e24\u4e2a\u903b\u8f91\u95e8 [!note] \u4f7f\u80fd(enabling) \u5141\u8bb8\u8f93\u5165\u4fe1\u53f7\u5f71\u54cd\u8f93\u51fa\u4fe1\u53f7 \u7981\u7528(disabling) \u963b\u6b62\u8f93\u5165\u5bf9\u8f93\u51fa\u7684\u5f71\u54cd\uff0c\u7528\u4e00\u4e2a\u56fa\u5b9a\u503c\u8868\u793a\u8f93\u51fa\u3002\u8fd9\u4e2a\u503c\u53ef\u4ee5\u662fHi-Z(\u9ad8\u963b\u6297)\uff0c0\u62161 </p> <p>\u5176\u4ed63\u79cd\u57fa\u672c\u51fd\u6570\u7684\u5b9e\u73b0\uff1a </p>"},{"location":"notebooks/dld/3/#multiple-bit-rudimentary-functions","title":"Multiple-bit Rudimentary Functions","text":"<p> + \u7c97\u7ebf\u7528\u6765\u8868\u793a\u603b\u7ebf(bus)\uff0c\u5b83\u662f\u5411\u91cf(\u7b80\u5355\u7406\u89e3\u4e3a\u201c\u6570\u7ec4\u201d\uff0c\u4f46\u4e0d\u51c6\u786e)\u4fe1\u53f7 + \u603b\u7ebf\u53ef\u4ee5\u88ab\u5206\u6210\u591a\u4e2a1\u4f4d\u4fe1\u53f7 + \u53ef\u4ee5\u4ece\u603b\u7ebf\u4e2d\u5206\u51fa\u4e00\u4e9b\u4f4d\u51fa\u6765\uff0c\u4e14\u4e0d\u8981\u6c42\u8fd9\u4e9b\u4f4d\u4e00\u5b9a\u8981\u8fde\u7eed(\u4f8b(d))</p>"},{"location":"notebooks/dld/3/#decoder","title":"Decoder","text":"<p>\u8bd1\u7801(decoding)\uff1a\u4ece\\(n\\)\u4f4d\u8f93\u5165\u7801\u5230\\(m\\)\u4e3a\u8f93\u51fa\u7801\u7684\u8f6c\u6362(\\(n \\le m \\le 2^n\\))\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5408\u6cd5\u7801\u80fd\u591f\u4ea7\u751f\u552f\u4e00\u7684\u8f93\u51fa\u7801</p> <p>\u8bd1\u7801\u5668(decoder)\uff1a\u6267\u884c\u8bd1\u7801\u7684\u7535\u8def\u3002</p> <p>\u8bd1\u7801\u5668\u7684\u7c7b\u578b\uff1a + \u53d8\u91cf\u8bd1\u7801\u5668(variable decoder)(\u6700\u5c0f\u9879\u4fa6\u6d4b\u5668\uff0cminterm detector) + \u663e\u793a\u8bd1\u7801\u5668(display decoder) + \u7f16\u7801\u7ffb\u8bd1\u8bd1\u7801\u5668(code translation decoder)</p> <p>\u5e38\u7528\u8bd1\u7801\u5668\uff1a + 74LS139(2-4\u8bd1\u7801\u5668)\uff1a2\u8f93\u5165\uff0c4\u8f93\u51fa + 74LS138(3-8\u8bd1\u7801\u5668)\uff1a3\u8f93\u5165\uff0c8\u8f93\u51fa + MC14514(4-16\u8bd1\u7801\u5668)\uff1a4\u8f93\u5165\uff0c16\u8f93\u51fa</p> <p>\ud83c\udf30\uff1a 1. 1-2\u8bd1\u7801\u5668 2. 2-4\u8bd1\u7801\u5668</p> <p>\u6ce8\uff1a2-4\u8bd1\u7801\u5668\u75312\u4e2a1-2\u8bd1\u7801\u5668\u548c4\u4e2a\u4e0e\u95e8\u6784\u6210</p>"},{"location":"notebooks/dld/3/#decoder-expansion","title":"Decoder Expansion","text":"<p>\u5927\u578b\u7684\u8bd1\u7801\u5668\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5355\u4e2a\u7684\uff0c\u5e26\u6709\u66f4\u591a\u8f93\u5165\u7684\u4e0e\u95e8\u6765\u5b9e\u73b0\u6bcf\u4e2a\u6700\u5c0f\u9879\u51fd\u6570\u6765\u6784\u5efa  \u663e\u7136\uff0c\u5f53\u8bd1\u7801\u5668\u53d8\u5f97\u5f88\u5927\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e0d\u73b0\u5b9e\u7684\u2014\u2014\u5b83\u7684\u6247\u5165\u548c\u95e8\u8f93\u5165\u6210\u672c\u592a\u5927\u5566\uff01</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u91c7\u7528\u524d\u9762\u63d0\u5230\u7684==\u5206\u5c42\u8bbe\u8ba1(hierarchical design)==(\u5176\u5b9e\u4e5f\u662f\u4e00\u79cd\u5206\u6cbb(divide-and-conquer) \u7684\u601d\u60f3)\u548c\u4e00\u7ec4\u4e0e\u95e8\u6765\u6784\u5efa\u8bd1\u7801\u5668\uff0c\u901a\u8fc7\u5171\u4eab\u9879(shared term) \u6765\u51cf\u5c11\u6247\u5165\u548c\u95e8\u8f93\u5165\u6210\u672c \u540c\u65f6\uff0c\u8fd9\u4e5f\u4f53\u73b0\u4e86\u81ea\u9876\u5411\u4e0b(top down)\u8bbe\u8ba1\u7684\u601d\u60f3</p> <p>\ud83c\udf30\uff1a 1. \u8fd0\u7528\u5206\u5c42\u8bbe\u8ba1\u6784\u5efa8-256\u8bd1\u7801\u5668 2. 3-8\u8bd1\u7801\u5668 3. 6-64\u8bd1\u7801\u5668</p>"},{"location":"notebooks/dld/3/#decoder-with-enable","title":"Decoder with Enable","text":"<ul> <li>\u5982\u4f55\u5b9e\u73b0\uff1a\u5728\u8f93\u51fa\u7684\u4f4d\u7f6e\u4e0a\u9644\u4e0a\u4f7f\u80fd\u7535\u8def</li> <li>\u770b\u4e0b\u9762\u7684\u771f\u503c\u8868\uff1a\u7528\\(\\times\\)\u8868\u793a0\u62161\uff0c\u56e0\u6b64\u4e24\u4e2a\\(\\times\\)\u7684\u7ec4\u5408\u4ee3\u88684\u79cd\u4e8c\u8fdb\u5236\u7ec4\u5408</li> <li>\u8fd9\u79cd\u7535\u8def\u88ab\u79f0\u4e3a\u4fe1\u53f7\u5206\u914d\u5668(demultiplexer) </li> </ul> <p>\ud83c\udf30\uff1a 1. \u4f4e\u9636\u8bd1\u7801\u5668 + \u4f7f\u80fd \\(\\rightarrow\\) \u8bd1\u7801\u5668\u7684\u6269\u5f20(\u4ee52-4\u8bd1\u7801\u5668\u6269\u5c55\u81f33-8\u8bd1\u7801\u5668\u4e3a\u4f8b) 2. \u8bd1\u7801\u5668 + \u6216\u95e8 \\(\\rightarrow\\) \u7ec4\u5408\u903b\u8f91\u7684\u5b9e\u73b0     \u5b9e\u73b0m\u4e2an\u53d8\u91cf\u51fd\u6570\u9700\u8981\uff1a     + SOM\u8868\u8fbe\u5f0f     + n-\\(2^n\\)\u8bd1\u7801\u5668     + m\u4e2a\u6216\u95e8\uff0c\u6bcf\u4e2a\u8f93\u51fa\u5bf9\u5e94\u4e00\u4e2a     \u65b9\u6cd5\uff1a\u89c1\u7b2c2\u7ae0</p> <pre><code>\u6bd4\u5982\uff0c\u5b9e\u73b0\u4e8c\u8fdb\u5236\u52a0\u6cd5\u5668(\u540e\u9762\u4f1a\u6709\u7cfb\u7edf\u7684\u8bb2\u89e3)![](./images/C3/Quicker_20240514_192217.png)\n\u53c8\u6bd4\u5982\uff0c\u5947\u6821\u9a8c\u51fd\u6570\u7684\u5b9e\u73b0\uff1a![](./images/C3/Quicker_20240514_193059.png)\n</code></pre>"},{"location":"notebooks/dld/3/#display-decoderseven-segment-decoder","title":"Display Decoder(Seven-Segment Decoder)","text":"<p>\u8865\u5145\uff1a + \u5171\u9633\u6781\u663e\u793a(The Common Anode Display, CAD)\uff1a\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5982\u679ca~g = 0\uff0c\u5f00\uff1ba~g = 1\uff0c\u5173\uff08\u4f4e\u7535\u5e73\u6d3b\u8dc3\uff09 + \u5171\u9634\u6781\u663e\u793a(The Common Cathode Display, CCD)\uff1a\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5982\u679ca~g = 1\uff0c\u5f00\uff1ba~g = 0\uff0c\u5173\uff08\u9ad8\u7535\u5e73\u6d3b\u8dc3\uff09 </p> <p></p> <p>\u5e03\u5c14\u65b9\u7a0b\uff1a </p>"},{"location":"notebooks/dld/3/#encoder","title":"Encoder","text":"<p>\u7f16\u7801(encoding)\uff1a\u4e0e\u8bd1\u7801\u76f8\u53cd\uff0c\u5c06\\(m\\)\u4f4d\u8f93\u5165\u7801\u8f6c\u5316\u4e3a\\(n\\)\u4f4d\u8f93\u51fa\u7801(\\(n \\le m \\le 2^n\\))\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5408\u6cd5\u7801\u80fd\u591f\u4ea7\u751f\u552f\u4e00\u7684\u8f93\u51fa\u7801</p> <p>\u7f16\u7801\u5668(encoder)\uff1a\u6267\u884c\u7f16\u7801\u7684\u7535\u8def</p> <p>\u7c7b\u578b\uff1a + \u5341\u8fdb\u5236-BCD\u7f16\u7801\u5668(decimal-to-BCD encoder) + \u6307\u4ee4\u7f16\u7801\u5668(instruction encoder) + \u4f18\u5148\u7f16\u7801\u5668(priority encoder)</p> <p>\u6ce8\uff1a\u8fd9\u79cd\u7f16\u7801\u5668\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e \u8ba1\u7b97\u673a\u4f18\u5148\u7ea7\u4e2d\u65ad\u7cfb\u7edf(computer priority interrupt system) \u548c \u952e\u76d8\u7f16\u7801\u7cfb\u7edf(keyboard coding system)\u4e2d + \u5bc6\u7801\u7f16\u7801\u5668(cypher encoder)</p> <p></p> <p>\ud83c\udf30\uff1a\u5341\u8fdb\u5236-BCD\u7f16\u7801\u5668 + \u8f93\u5165\uff1a10\u4e2a\u4f4d\uff0c\u6bcf\u4f4d\u5bf9\u5e94\u5341\u8fdb\u5236\u65700-9(\\(D_0, \\dots, D_9\\))\u2014\u2014\u72ec\u70ed\u7801(one-hot encoding) + \u8f93\u51fa\uff1a4\u4f4d\u7684BCD\u7801 + \u51fd\u6570\uff1a\\(D_i = 1 \\rightarrow\\) \u8f93\u51fa\\((A_3, A_2, A_1, A_0)\\)\u8868\u793a\u6570\u5b57i\u7684BCD\u7801  \u771f\u503c\u8868\uff1a \u6211\u4eec\u5f97\u5230\u5e03\u5c14\u65b9\u7a0b\uff1a$$     \\begin{align}     A_3 &amp; = D_8 + D_9 \\      A_2 &amp; = D_4 + D_5 + D_6 + D_7 \\     A_1 &amp; = D_2 + D_3 + D_6 + D_7 \\     A_0 &amp; = D_1 + D_3 + D_5 + D_7 + D_9     \\end{align}     $$</p> <p>\u6ce8\uff1a + \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\\(F_1 = D_6 + D_7\\)\uff0c\u5f97\u5230\\(A_1\\)\u548c\\(A_2\\)\u7684\u5171\u4eab\u9879\uff0c\u4ece\u800c\u8282\u7701\u6210\u672c + \u5bf9\u4e8e\u72ec\u70ed\u7f16\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u7528k-map\u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u6700\u4f18\u8bbe\u8ba1</p>"},{"location":"notebooks/dld/3/#priority-encoder","title":"Priority Encoder","text":"<p>[!warning] \u5bf9\u4e8e\u666e\u901a\u7684\u7f16\u7801\u5668\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165\u7684\u503c\u4e3a1\uff0c\u5219\u7f16\u7801\u5668\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c</p> <p>\u89e3\u51b3\u65b9\u6848\u2014\u2014\u4f18\u5148\u7f16\u7801\u5668(Priority encoder)\uff1a \u80fd\u591f\u63a5\u53d7\u6240\u6709\u8f93\u5165\u60c5\u51b5\uff0c\u5e76\u4e14\u4ea7\u751f\u6709\u610f\u4e49\u7684\u7ed3\u679c\u7684\u7f16\u7801\u5668\u3002\u5bf9\u4e8e\u6240\u6709\u503c\u4e3a1\u7684\u8f93\u5165\uff0c\u5b83\u4f1a\u9009\u62e9\u4f4d\u4e8e\u6700\u9ad8\u4f4d\uff08\u6216\u6700\u4f4e\u4f4d\uff09\u7684\u8f93\u5165\uff0c\u6839\u636e\u8be5\u4f4d\u7f6e\u8f93\u51fa\u76f8\u5e94\u7684\u4e8c\u8fdb\u5236\u7801</p> <p>\ud83c\udf30\uff1a</p> <ol> <li> <p>     \u5361\u8bfa\u56fe\uff1a     </p> <p>\u7535\u8def\u5b9e\u73b0\uff1a </p> </li> <li> <p>\u4e94\u8f93\u5165\u4f18\u5148\u7f16\u7801\u5668\uff1a\u5b83\u4f18\u5148\u8003\u8651\u6700\u9ad8\u4f4d\u76841\u3002\u5176\u4e2dX\u4ee3\u88680\u62161\uff0cV\u4ee3\u8868\u8f93\u5165\u4e2d\u662f\u5426\u67091\u51fa\u73b0\u8fc7\u3002\u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u5f20\u771f\u503c\u8868\u5305\u542b\u4e86\u6240\u670932\u79cd\u60c5\u51b5\u3002  \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u5316\u7b80\u64cd\u4f5c(\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5361\u8bfa\u56fe)\uff1a $$ \\begin{align} A_2 &amp; = D_4 \\ A_1 &amp; = \\overline{D_4}D_3 + \\overline{D_4D_3}D_2  = \\overline{D_4}F_1 \\quad \\text{\u5176\u4e2d } F_1 = D_3 + D_2 \\ A_0 &amp; = \\overline{D_4}D_3 + \\overline{D_4D_3D_2}D_1 = \\overline{D_4}(D_3 + \\overline{D_2}D_1) \\ V &amp; = D_4 + F_1 + D_1 + D_0 \\end{align} $$</p> </li> </ol>"},{"location":"notebooks/dld/3/#multiplexer","title":"Multiplexer","text":"<p>\u6267\u884c\u9009\u62e9(selecting) \u529f\u80fd\u7684\u7535\u8def\u5305\u542b\uff1a + \u4e00\u7ec4\u8f93\u5165\u4fe1\u606f + \u4e00\u7ec4\u7528\u6765\u505a\u51fa\u9009\u62e9\u7684\u63a7\u5236\u7ebf\u8def + \u5355\u4e2a\u8f93\u51fa</p> <p>\u591a\u8def\u590d\u7528\u5668(Multiplexers, MUX)\uff1a\u6267\u884c\u9009\u62e9\u7684\u903b\u8f91\u7535\u8def\uff0c\u53ef\u7531\u8bd1\u7801\u5668 + \u4e0e-\u6216\u95e8\u6216\u8005\u4e09\u6001\u95e8\u5b9e\u73b0 </p> <p>\u5b83\u5305\u542b\uff1a + \\(n\\)\u4e2a\u63a7\u5236\u8f93\u5165(\\(S_{n - 1}, \\dots, S_0\\))\uff0c\u79f0\u4e3a\u9009\u62e9\u8f93\u5165(selection inputs) + \\(2^n\\)\u4e2a(\u6700\u5927\u6570\u91cf)\u4fe1\u606f\u8f93\u5165(\\(I_{2^n - 1}, \\dots, I_0\\))\uff0c\u5b83\u7684\u5b9e\u9645\u6570\u91cf\\(m\\)\u53ef\u4ee5\u5c0f\u4e8e\\(2^n\\) + \u4e00\u4e2a\u8f93\u51fa\\(Y\\)</p> <p>\u5404\u79cd\u591a\u8def\u590d\u7528\u5668\uff1a 1. 2-1\u591a\u8def\u590d\u7528\u5668     \u6784\u6210\uff1a     + 1\u4e2a1-2\u8bd1\u7801\u5668     + 2\u4e2a\u4f7f\u80fd\u7535\u8def     + 1\u4e2a2\u8f93\u5165\u6216\u95e8</p> <pre><code>\u5355\u4e2a\u9009\u62e9\u53d8\u91cf$S$\u6709\u4e24\u4e2a\u503c\uff1a\n+ $S = 0$\u9009\u62e9\u8f93\u5165$I_0$\n+ $S = 1$\u9009\u62e9\u8f93\u5165$I_1$\n\n\u65b9\u7a0b\uff1a$Y = \\overline{S}I_0 + SI_1$\n\n\u6839\u636e\u8fd9\u4e2a\u591a\u8def\u590d\u7528\u5668\u7684\u6784\u6210\uff0c\u6211\u4eec\u53ef\u4ee5\u6269\u5c55\u81f3$2^n$-1\u591a\u8def\u590d\u7528\u5668\uff1a\n+ $n-2^n$\u8bd1\u7801\u5668\n+ $2^n \\times 2$ \u4e0e-\u6216\u95e8\n</code></pre> <ol> <li> <p>4-1\u591a\u8def\u590d\u7528\u5668     \u6784\u6210\uff1a \\(2-2^2\\)\u8bd1\u7801\u5668 + \\(2^2 \\times 2\\)\u4e0e-\u6216\u95e8\uff0c\u95e8\u8f93\u5165\u6210\u672c = 32</p> </li> <li> <p>64-1\u591a\u8def\u590d\u7528\u5668     \u6784\u6210\uff1a\\(6-2^6\\)\u8bd1\u7801\u5668 + \\(2^6 \\times 2\\)\u4e0e-\u6216\u95e8</p> </li> </ol> <p>[!note] \u8003\u8bd5\u65f6\uff0c\u5982\u679c\u591a\u8def\u590d\u7528\u5668\u89c4\u6a21\u5f88\u5927\uff08\u6bd4\u5982\u4e0a\u9762\u8fd9\u4e2a\uff09\uff0c\u5c31\u4e0d\u9700\u8981\u753b\u51fa\u5176\u5177\u4f53\u7684\u7ec6\u8282\uff0c\u53ea\u8981\u753b\u51fa\u4e00\u4e2a==\u5c01\u88c5\u7684\u6a21\u5757==\uff0c\u5e76\u6807\u51fa\u5b83\u662f\u4ec0\u4e48\u89c4\u6a21\u7684\u8bd1\u7801\u5668\u548cAND-OR\u5373\u53ef\u3002</p>"},{"location":"notebooks/dld/3/#multiplexer-width-expansion","title":"Multiplexer Width Expansion","text":"<p>\u65b9\u6cd5\uff1a + \u4f7f\u7528\u4f4d\u5411\u91cf(vectors of bits) \u800c\u975e\u4f4d(bit) + \u5e76\u884c\u4f7f\u7528\u591a\u4e2a\\(2^n \\times 2\\) \u4e0e-\u6216\u95e8</p> <p>\ud83c\udf30\uff1a4-1\u56db\u4f4d\u591a\u8def\u590d\u7528\u5668 </p>"},{"location":"notebooks/dld/3/#other-selection-implementations","title":"Other Selection Implementations","text":"<ul> <li> <p>\u4f7f\u7528\u4e09\u6001\u95e8\u4ee3\u66ff\u4e0e-\u6216\u95e8     \u95e8\u8f93\u5165\u6210\u672c\uff1a18(2\u4e2a\u975e\u95e8 + 4\u4e2a\u4e0e\u95e8 * 2 + 4\u4e2a\u4e09\u6001\u95e8 * 2)     &gt;\u6ce8\uff1a\u5982\u679c\u4f7f\u7528\u4e0e-\u6216\u95e8\uff0c\u6210\u672c = 22</p> </li> <li> <p>\u7528\u4e09\u6001\u95e8\u5b9e\u73b0\u8bd1\u7801\u5668     \u95e8\u8f93\u5165\u6210\u672c\uff1a14(2\u4e2a\u975e\u95e8 + 6\u4e2a\u4e09\u6001\u95e8 * 2)</p> </li> </ul>"},{"location":"notebooks/dld/3/#combinational-logic-implementation","title":"Combinational Logic Implementation","text":"<p>\u65b9\u6cd51\uff1a</p> <p>\u5b9e\u73b0m\u4e2an\u53d8\u91cf\u51fd\u6570\u9700\u8981\uff1a + SOM\u8868\u8fbe\u5f0f + \u4e00\u4e2am\u4f4d\\(2^n\\)-1\u591a\u8def\u590d\u7528\u5668</p> <p>\u8bbe\u8ba1\uff1a + \u627e\u5230\u51fd\u6570\u7684\u771f\u503c\u8868 + \u5c06\u51fd\u6570\u8f93\u5165\u53d8\u91cf\u4e0e\u591a\u8def\u590d\u7528\u5668\u7684\u9009\u62e9\u8f93\u5165\\(S_{n-1}, \\dots, S_0\\)\u6309\u987a\u5e8f\u5bf9\u5e94 + \u5728\u591a\u8def\u590d\u7528\u5668\u7684\u8f93\u51fa\u4e0a\u6807\u6ce8\u8f93\u51fa\u53d8\u91cf + \u4f7f\u7528\u771f\u503c\u8868\u7684\u503c\u5bf9\u591a\u8def\u590d\u7528\u5668\u7684\u4fe1\u606f\u8f93\u5165\u8fdb\u884c\u503c\u56fa\u5b9a</p> <p>\ud83c\udf30\uff1a\u683c\u96f7\u7801 \\(\\rightarrow\\) \u4e8c\u8fdb\u5236\u7801 </p> <p>\u6ce8\uff1a\u5c06\u683c\u96f7\u7801\u6309\u7167\u8ba1\u6570\u987a\u5e8f\u91cd\u65b0\u6392\u5217(\u5982\u53f3\u56fe\u6240\u793a)</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u51fd\u6570y\u548cz\u53ef\u4ee5\u7528\u4e24\u4e2a8-1\u591a\u8def\u590d\u7528\u5668\u6765\u5b9e\u73b0\uff1a + \u5c06A, B\u548cC\u8fde\u63a5\u81f3\u591a\u8def\u590d\u7528\u5668\u7684\u9009\u62e9\u8f93\u5165 + \u5c06y, z\u8fde\u63a5\u81f3\u591a\u8def\u590d\u7528\u5668\u7684\u8f93\u51fa + \u5206\u522b\u5c06\u5b83\u4eec\u771f\u503c\u8868\u7684\u503c\u8fde\u63a5\u81f3\u4fe1\u606f\u8f93\u5165 </p> <p>\u6ce8\uff1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u503c\u56fa\u5b9a\u7684\u591a\u8def\u590d\u7528\u5668\uff0c\u4e0e3\u4f4d\u5730\u5740\u548c2\u4f4d\u6570\u636e\u7684ROM\u662f\u4e00\u6837\u7684</p> <p>\u65b9\u6cd52\uff1a</p> <p>\u5b9e\u73b0m\u4e2an\u53d8\u91cf\u7684\u51fd\u6570\u9700\u8981\uff1a + \u4e00\u4e2am\u4f4d\u7684\\(2^{n-1}\\)-1\u591a\u8def\u590d\u7528\u5668 + \u4e00\u4e2a\u975e\u95e8</p> <p>\u8bbe\u8ba1\uff1a + \u524dn - 1\u4e2a\u53d8\u91cf\u8fde\u63a5\u81f3\u9009\u62e9\u8f93\u5165 + \u5bf9\u4e8e\u6bcf\u4e2a\u9009\u62e9\u53d8\u91cf\u7684\u7ec4\u5408\uff0c\u5bf9\u5e94\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u5173\u4e8e\u6700\u540e\u7684\u53d8\u91cf\\((0, 1, X, \\overline{X})\\)\u7684\u51fd\u6570 + \u8fd9\u4e9b\u503c\u968f\u540e\u88ab\u5e94\u7528\u4e8e\u5408\u9002\u7684\u6570\u636e\u8f93\u5165\u4e2d</p> <p>\ud83c\udf30\uff1a(\u63a5\u7740\u4e0a\u9762\u7684\u4f8b\u5b50) \u6839\u636e\u4e0a\u9762\u7684\u8bbe\u8ba1\u539f\u5219\uff0c\u5f97\u5230\u5982\u4e0b\u8868\u683c\uff1a \u5b9e\u73b0\uff1a</p> <p>\u6ce8\uff1a + \u8fd9\u4e2a\u65b9\u6cd5\u76f8\u6bd4\u524d\u9762\u90a3\u4e2a\uff0c\u6210\u672c\u4e0a\u51cf\u5c11\u4e86\u8fd1\u4e4e\u4e00\u534a + \u4f46\u8fd9\u4e2a\u5b9e\u73b0\u5c31\u4e0d\u50cfROM\u4e86 + \u6269\u5c55\uff1a\u591a\u4e8en\u53d8\u91cf\u7684\u51fd\u6570\u53ef\u4ee5\u88ab\u5206\u89e3\u6210\u4e00\u4e9b\u5b50\u51fd\u6570\uff0c\u8fd9\u4e9b\u5b50\u51fd\u6570\u7684\u53d8\u91cf\u662f\u6240\u6709\u53d8\u91cf\u7684\u5b50\u96c6\u3002\u7136\u540e\u7528\u591a\u8def\u590d\u7528\u5668\u5728\u8fd9\u4e9b\u5b50\u51fd\u6570\u4e2d\u8fdb\u884c\u9009\u62e9\u3002</p> <p>[!note] \u8865\u5145\uff1a\u591a\u8def\u590d\u7528\u5668(multiplexer) \u4e0e\u4fe1\u53f7\u5206\u914d\u5668(demultiplexer) \u7684\u533a\u522b + \u591a\u8def\u590d\u7528\u5668\u662f\"\u4e00\u5bf9\u591a\u201c\u7684 + \u4fe1\u53f7\u5206\u914d\u5668\u662f\u201c\u591a\u5bf9\u4e00\u201d\u7684</p> <p>\u603b\u4f53\u6846\u67b6\uff1a</p>"},{"location":"notebooks/dld/3/#iterative-combinational-circuits","title":"Iterative Combinational Circuits","text":"<p>\u5728\u903b\u8f91\u7535\u8def\u4e2d\uff0c\u7b97\u672f\u8ba1\u7b97(arithmetic calculation) (\u6bd4\u5982\u52a0\u6cd5\u3001\u51cf\u6cd5)\u5176\u5b9e\u662f\u4e00\u79cd\u7f16\u7801\u7ffb\u8bd1\u8bd1\u7801\u5668\u3002\u6bd4\u5982\uff0cN\u4f4d\u4e8c\u8fdb\u5236\u52a0\u6cd5\u9700\u89812N-(N+1)\u8bd1\u7801\u5668\u3002</p> <p>\u7136\u800c\uff0c\u5f53\u64cd\u4f5c\u6570\u53d8\u5f97\u5f88\u5927\u65f6\uff0c\u7528\u8bd1\u7801\u5668\u5b9e\u73b0\u52a0\u6cd5\u5c31\u6bd4\u8f83\u56f0\u96be\u4e86\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4e8c\u5206\u6cd5(bisection method) \u6765\u6784\u5efa\u5927\u578b\u8bd1\u7801\u5668\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u6548\u7387\u4e0d\u9ad8\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u9075\u5faa\u8ba1\u7b97\u6cd5\u5219(calculation rules) \u4e3a\u7b97\u672f\u51fd\u6570\u6784\u5efa\u65b0\u7684\u51fd\u6570\u5757\u3002 </p> <p>\u6267\u884c\u7b97\u672f\u7684\u51fd\u6570\u5757\u88ab\u79f0\u4e3a\u5355\u5143(cell)\uff0c\u56e0\u6b64\u7b97\u672f\u8fd0\u7b97\u7684\u603b\u4f53\u5b9e\u73b0\u662f\u7531\u4e00\u7ec4\u5355\u5143\u6784\u6210\u7684\u3002</p> <p>\u8fed\u4ee3\u7ec4(iterative array) \u662f\u4e00\u79cd\u8ba1\u7b97\u88ab\u5206\u89e3\u7684\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u5b83\u5229\u7528\u89c4\u5f8b\u6027(regularity) \u7684\u4f18\u52bf\uff0c\u4f7f\u5f97\u5927\u578b\u3001\u591a\u7ea7\u7684\u7b97\u672f\u7535\u8def\u8bbe\u8ba1\u53d8\u5f97\u53ef\u884c </p> <p>\u53ef\u8fed\u4ee3\u7ec4\u5408\u7535\u8def(iterative combinational circuits) \u5305\u62ec\uff1a + \u7b97\u6570\u51fd\u6570(arithmetic functions)\uff1a\u5bf9\u4e8c\u8fdb\u5236\u5411\u91cf\u8fdb\u884c\u8fd0\u7b97\uff0c\u5bf9\u5176\u6bcf\u4e00\u4f4d\u4f7f\u7528\u76f8\u540c\u7684\u5b50\u51fd\u6570\u3002 + \u5355\u5143(Cell)\uff1a\u5b50\u51fd\u6570\u5757 + \u8fed\u4ee3\u7ec4(iterative array)\uff1a\u5177\u6709\u4e92\u76f8\u8054\u7cfb\u7684\u5355\u5143\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u662f\u4e00\u7ef4\uff0c\u4e5f\u53ef\u4ee5\u662f\u591a\u7ef4</p>"},{"location":"notebooks/dld/3/#binary-adders","title":"Binary Adders","text":"<p>\u5206\u7c7b\uff1a + \u534a\u52a0\u5668(half-adder)\uff1a2\u8f93\u5165\u6309\u4f4d\u52a0\u6cd5\u51fd\u6570\u5757 + \u5168\u52a0\u5668(full-adder)\uff1a3\u8f93\u5165\u6309\u4f4d\u52a0\u6cd5\u51fd\u6570\u5757 + \u884c\u6ce2\u52a0\u6cd5\u5668(ripple carry adder)\uff1a\u6267\u884c\u4e8c\u8fdb\u5236\u52a0\u6cd5\u7684\u8fed\u4ee3\u7ec4 + \u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668(carry-look-ahead adder)\uff1a\u7528\u6765\u63d0\u5347\u52a0\u6cd5\u8ba1\u7b97\u6027\u80fd\u7684\u5206\u5c42\u7ed3\u6784 ^694345</p>"},{"location":"notebooks/dld/3/#half-adderha","title":"Half-Adder(HA)","text":"<p>\u534a\u52a0\u5668(half-adder) \u662f\u4e00\u79cd2\u8f93\u5165\uff0c\u4f4d\u5bbd\u4e3a1\u7684\u4e8c\u8fdb\u5236\u52a0\u6cd5\u5668\uff0c\u5c062\u4e2a\u4f4d\u76f8\u52a0\uff0c\u5f97\u52301\u4e2a2\u4f4d\u7684\u548c\u3002\u5177\u4f53\u5982\u4e0b\uff1a </p> <p>\u672c\u8d28\u4e0a\uff0c\u534a\u52a0\u5668\u662f\u4e00\u4e2a2-2\u8bd1\u7801\u5668(2\u8f93\u5165\uff0c2\u8f93\u51fa)</p> <p>\u771f\u503c\u8868\uff1a</p> <p>\u5176\u4e2dS\u88ab\u79f0\u4e3a\u548c\u4f4d(sum bit)\uff0cC\u88ab\u79f0\u4e3a\u8fdb\u4f4d(carry bit)</p> <p>\u5361\u8bfa\u56fe\uff1a \u89c2\u5bdf\u5f97\uff1a\\(\\(S = X \\oplus Y,\\quad C = XY\\)\\)\u5176\u4ed6\u7b49\u4ef7\u7684\u5e03\u5c14\u65b9\u7a0b\uff1a </p> <p>\u6ce8\uff1a + (a), (b), (e)\u4e2d\u7684S\u5206\u522b\u7528\u5230\u4e86SOP, POS\u548cXOR\u8868\u793a\u6cd5 + (c)\u4e2d\uff0cC\u4f5c\u4e3aS\u7684AND-OR\u65b9\u7a0b\u7684\u4e00\u9879\uff1b(d)\u4e2d\uff0c\\(\\overline{C}\\)\u4f5c\u4e3aS\u7684POS\u65b9\u7a0b\u7684\u4e00\u9879</p> <p>\u5b9e\u73b0\uff1a 1. \u6700\u5e38\u89c1\u7684\u5b9e\u73b0\u5f62\u5f0f(\\(S = X \\oplus Y,\\ C = XY\\))\uff1a 2. \u4e0e\u975e\u95e8\u7684\u5b9e\u73b0(\\(S = (X + Y)\\overline{C},\\ C = \\overline{(\\overline{XY})}\\))\uff1a</p>"},{"location":"notebooks/dld/3/#full-adderfa","title":"Full-Adder(FA)","text":"<p>\u5168\u52a0\u5668(Full adder) \u7684\u5de5\u4f5c\u539f\u7406\u7c7b\u4f3c\u534a\u52a0\u5668\uff0c\u4f46\u5b83\u5728\u8f93\u5165\u7aef\u591a\u4e86\u4e00\u4e2a\uff08\u6765\u81ea\u4e0a\u4e00\u4f4d\u7684\uff09\u8fdb\u4f4d(carry-in bit) \u7684\u8f93\u5165</p> <p>\u6846\u56fe\uff1a</p> <p>\u6240\u6709\u7684\u8ba1\u7b97\u60c5\u51b5\uff1a </p> <p>\u771f\u503c\u8868\uff1a</p> <p>\u5361\u8bfa\u56fe\uff1a </p> <p>\u5e03\u5c14\u51fd\u6570\uff1a \\(\\(\\begin{align}S &amp;= X\\overline{YZ} + \\overline{X}Y\\overline{Z}+\\overline{XY}Z + XYZ \\\\ &amp; = X \\oplus Y \\oplus Z\\end{align}\\)\\) $$ C = XY+XZ+YZ = XY+(X \\oplus Y)Z $$</p> <p>\u6ce8\uff1a\u5176\u4e2d\uff0c\\(X \\cdot Y\\)\u79f0\u4e3a\u8fdb\u4f4d\u751f\u6210(carry generate)\uff0c\\(X \\oplus Y\\)\u79f0\u4e3a\u8fdb\u4f4d\u4f20\u64ad(carry propagate)</p> <p>\u5b9e\u73b0\uff1a </p>"},{"location":"notebooks/dld/3/#ripple-carry-adder","title":"Ripple Carry Adder","text":"<p>\u884c\u6ce2\u52a0\u6cd5\u5668(Repple-carry binary adder)\uff1a\u4e3a\u4e86\u6267\u884c\u591a\u4f4d\u64cd\u4f5c\u6570\u7684\u52a0\u6cd5\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5355\u4e2a\u4f4d\u201c\u6346\u7ed1\u201d\u5728\u4e00\u8d77\u5f62\u6210\u5411\u91cf\uff0c\u7136\u540e\u4f7f\u7528\u51fd\u6570\u5757\u64cd\u4f5c</p> <p>\ud83c\udf30\uff1a\u56db\u4f4d\u884c\u6ce2\u52a0\u6cd5\u5668\u2014\u2014\u5c06\u8f93\u5165\u5411\u91cfA(3: 0)\u548cB(3: 0)\u76f8\u52a0\uff0c\u5f97\u5230\u548c\u5411\u91cfS(3: 0) </p> <p>\u6ce8\uff1a\u5355\u5143i\u7684\u8f93\u51fa\u8fdb\u4f4d\u662f\u5355\u5143i+1\u7684\u8f93\u5165\u8fdb\u4f4d</p> <p>\u6846\u56fe(4\u4f4d\u884c\u6ce2\u52a0\u6cd5\u5668 = 4\u4e2a\u5168\u52a0\u5668)\uff1a </p> <p>[!note] \u884c\u6ce2\u52a0\u6cd5\u5668\u7684\u95ee\u9898\u2014\u2014\u8fdb\u4f4d\u7684\u4f20\u64ad&amp;\u5ef6\u8fdf\uff1a\u8fdb\u4f4d\u4ece\u6700\u4f4e\u4f4d\u4f20\u64ad\u5230\u6700\u9ad8\u4f4d\u7684\u65f6\u95f4 \u4e0a\u9762\u7684\u56db\u4f4d\u884c\u6ce2\u52a0\u6cd5\u5668\u7684\u95e8\u7ea7\u4f20\u64ad\u8def\u5f84\u5982\u4e0b\uff1a  \u5176\u4e2d\u6700\u957f\u7684\u8def\u5f84\u662f\u4ece\\(A_0\\)\u6216\\(B_0\\)\u5230\\(S_0\\)\u7684\u957f\u5ea6(\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u957f\u5ef6\u8fdf = \u8def\u5f84\u4e0a12\u4e2a\u95e8\u7684\u5ef6\u8fdf\u548c)</p> <p>\u600e\u4e48\u7406\u89e3\u5ef6\u8fdf\u7684\u4ea7\u751f\uff1f \u56de\u987e\u5168\u52a0\u5668\u7684\u8fdb\u4f4d\u4f20\u64ad\u548c\u8fdb\u4f4d\u751f\u6210\uff1a\u5bf9\u5e94\u4e24\u4e2a\u51fd\u6570\uff1a + \u4f20\u64ad\u51fd\u6570(generate function)\uff1a\\(P_i = A_i \\oplus B_i\\) + \u751f\u6210\u51fd\u6570(propagate function)\uff1a\\(G_i = A_iB_i\\) \u6211\u4eec\u5f97\u5230\uff1a\\(S_i = P_i \\oplus C_i,\\ C_{i+1} = G_i + P_iC_i\\)</p> <p>\u5728\u884c\u6ce2\u52a0\u6cd5\u5668\u4e2d\uff1a + \\(P_i, G_i\\)\u5bf9\u4e8e\u52a0\u6cd5\u5668\u7684\u6bcf\u4e2a\u5355\u5143\u662f\u5c40\u90e8\u7684(local) + \\(S_i, C_{i+1}\\)\u5fc5\u987b\u7b49\u5f85\\(C_i\\)\u7684\u5230\u6765 \u56e0\u6b64\u5c31\u6709\u4e86\u4f20\u64ad\u5ef6\u8fdf\u7684\u95ee\u9898</p>"},{"location":"notebooks/dld/3/#carry-lookahead-addercla","title":"Carry Lookahead Adder(CLA)","text":"<p>\u4e3a\u4e86\u4e0a\u8ff0\u5f0a\u7aef\uff0c\u5c31\u8981\u7528\u5230\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668(Carry Lookahead Adder)\uff0c\u5b83\u57fa\u4e8e\u5bf9\u8f93\u5165\u7684\u66ff\u6362(substitution)\uff0c\u63d0\u524d\u8ba1\u7b97\u8fdb\u4f4d\u3002 ^8d8d07</p> <p>\u5177\u4f53\u505a\u6cd5\uff1a\u5355\u5143\u4e2d\u7684\\(C_{i+1}\\)\u7684\u4f5c\u7528\u6539\u4e3a\u5f97\u5230\u4e00\u7ec4\u5173\u4e8e\u8fdb\u4f4d\u7684\u65b9\u7a0b\uff0c\u56e0\u6b64\u6240\u6709\u7684\\(C_i\\)\u90fd\u53ef\u4ee5\u88ab\\(C_0\\)\u548c\u5176\u4ed6\u53d8\u91cf\u8868\u793a\uff0c\u6bd4\u5982(4\u4f4d\u52a0\u6cd5\u5668)\uff1a \u4f7f\u7528\u8fd9\u4e9b\u516c\u5f0f\uff0c\u52a0\u6cd5\u5668\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4eceO(n)\u964d\u5230O(1)</p> <p>\u7535\u8def\u5b9e\u73b0\uff1a </p>"},{"location":"notebooks/dld/3/#group-carry-lookahead-logic","title":"Group Carry Lookahead Logic","text":"<p>\u7ec4\u5408\u8d85\u524d\u8fdb\u4f4d\u903b\u8f91(Group Carry Lookahead Logic) \u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7531\u4e8e\u95e8\u6247\u5165\u7684\u9650\u5236\uff0c\u8d85\u524d\u8fdb\u4f4d\u7684\u65b9\u6cd5\u5bf9\u4e8e\u66f4\u5927\u7684\u52a0\u6cd5\u5668\u5c31\u4e0d\u592a\u53ef\u884c\u3002\u8fd9\u65f6\u6211\u4eec\u7528\u5230\u4e86\u7ec4\u5408\u751f\u6210(group generate) (\\(G_{0-3}\\))\u548c\u7ec4\u5408\u4f20\u64ad(group propagate)(\\(P_{0-3}\\))\u7684\u6982\u5ff5\uff0c\u5bf9\u4e8e\u4e0a\u8ff0\u56db\u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff1a $$ \\begin{align} G_{0-3} &amp; = G_3 + P_3G_2+P_3P_2G_1+P_3P_2P_1P_0G_0 \\ P_{0-3} &amp; = P_3P_2P_1P_0 \\end{align} $$ \u56e0\u6b64\uff1a $$ \\begin{align} C_4 = &amp; G_3 + P_3G_2 + P_3P_2G_1 + P_3P_2P_1G_0 + P_3P_2P_1P_0C_0\\ = &amp; G_{0-3} + P_{0-3}C_0  \\end{align} $$</p> <p>\ud83c\udf30\uff1a\u4f7f\u75284\u4e2a4\u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u8fdb\u884c16\u4f4d\u7684\u52a0\u6cd5\u8fd0\u7b97\uff1a</p> <p>\u5e03\u5c14\u65b9\u7a0b\uff1a </p> <p>\u6846\u56fe\u5b9e\u73b0\uff1a </p>"},{"location":"notebooks/dld/3/#summary","title":"Summary","text":""},{"location":"notebooks/dld/3/#binary-subtraction","title":"Binary Subtraction","text":""},{"location":"notebooks/dld/3/#unsigned-subtraction","title":"Unsigned Subtraction","text":"<p>\u7b97\u6cd5\uff1a + \u51cf\u6570N\u51cf\u53bb\u88ab\u51cf\u6570M\uff0c\u5373M - N + \u5982\u679c\u6ca1\u6709\u5411\u672b\u4f4d(\u6307\u6700\u9ad8\u4f4d\u7684\u540e\u4e00\u4f4d)\u501f\u4f4d\uff0c\u5219\\(M \\ge N\\)\uff0c\u90a3\u4e48\u7ed3\u679c\u662f\u975e\u8d1f\u4e14\u6b63\u786e\u7684 + \u5982\u679c\u5411\u672b\u4f4d\u501f\u4f4d\uff0c\u5219\\(N &gt; M\\)\uff0c\u90a3\u4e48\u7ed3\u679c\u662f\u8d1f\u7684\uff0c\u9700\u8981\u7ea0\u6b63</p> <p>\u7ea0\u6b63\u65b9\u6cd5\uff1a\u7528\u5deeM - N + \\(2^n\\)\u51cf\u53bb\\(2^n\\)\uff0c\u5f97\u5230M - N\u7684\u7edd\u5bf9\u503c $$ 2^n - (M - N + 2^n) = N - M $$</p> <p>\u6ce8\uff1a\\(2^n\\) - X\u79f0\u4e3aX\u7684\u8865\u7801(2's complement)\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09</p> <p>\ud83c\udf30\uff1a</p> <p>\u540c\u65f6\u5b9e\u73b0\u65e0\u7b26\u53f7\u52a0\u6cd5\u548c\u65e0\u7b26\u53f7\u51cf\u6cd5\u7684\u7535\u8def\u56fe\uff1a  \u5f88\u660e\u663e\uff0c\u7535\u8def\u56fe\u7684\u5b9e\u73b0\u8fc7\u4e8e\u590d\u6742\uff0c\u56e0\u6b64\u6211\u4eec\u91c7\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\uff1a</p>"},{"location":"notebooks/dld/3/#unsigned-2s-complement-subtraction","title":"Unsigned 2's Complement Subtraction","text":"<p>\u5982\u679c\u8981\u540c\u65f6\u5b9e\u73b0\u65e0\u7b26\u53f7\u7684\u52a0\u6cd5\u548c\u51cf\u6cd5\uff0c\u9700\u8981\uff1a\u52a0\u6cd5\u5668\u3001\u51cf\u6cd5\u5668\u548c\u53d6\u8865\u5668(complementer)\uff0c\u76f8\u5f53\u590d\u6742\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8ba9\u52a0\u6cd5\u548c\u51cf\u6cd5\u201c\u5171\u4eab\u201d\u4e00\u4e9b\u66f4\u7b80\u5355\u7684\u903b\u8f91\uff0c\u4e3a\u6b64\u5f15\u5165\u201c\u8865(complement)\u201d\u7684\u6982\u5ff5\u4f5c\u4e3a\u89e3\u51b3\u65b9\u6cd5\u3002</p> <p>[!\u201c\u8865\u201d]</p> <p>\u6ce8\uff1a\u8fd9\u91cc\u7684\u6982\u5ff5\u8bb2\u8fc7\u5f88\u591a\u904d\u4e86\uff0c\u5b9e\u5728\u4e0d\u719f\u6089\u7684\u8bdd\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b</p> <p>\u5206\u7c7b\uff1a + \ud83c\udf1f\u57fa\u6570\u8865(radix complement)\u2014\u2014\u8865\u7801   + r\u8fdb\u5236\uff1ar's complement   + \u4e8c\u8fdb\u5236\uff1a2's complement   + N\u7684\u8865\u7801\u4e3a\\(r^n - N\\)</p> <ul> <li>\u7f29\u5c0f\u57fa\u6570\u8865(diminished radix complement)\u2014\u2014\u53cd\u7801</li> <li>r\u8fdb\u5236\uff1a(r - 1)'s complement</li> <li>\u4e8c\u8fdb\u5236\uff1a1's complement</li> <li>N\u7684\u53cd\u7801\u4e3a\\((r^n-1) - N\\) <p>\u901f\u8bb01\u2018s complement\uff1a\u6bcf1\u4f4d\u53d6\u53cd\uff0c\u5373\\(0 \\rightarrow 1, 1 \\rightarrow 0\\)</p> </li> </ul> <p>2\u2019s complement\u7684\u51e0\u79cd\u53d6\u6cd5\uff1a 1. \u6839\u636e\u5b9a\u4e49\uff1a\\(2^n - X\\) 2. 1\u2018s complement + 1 3. \u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\uff0c\u4ece\u4f4e\u5230\u9ad8\u626b\u63cf\uff0c\u9047\u5230\u7b2c1\u4e2a\u20181\u2019\u540e\uff0c\u8fd9\u4e2a\u20181\u2019\u540e\u9762\u6240\u6709\u7684\u4f4d\u5747\u53d6\u53cd\uff0c\u5373\\(0 \\rightarrow 1, 1 \\rightarrow 0\\) \ud83c\udf30\uff1a</p> <p>\u7528\u8865\u7801\u8fdb\u884c\u51cf\u6cd5\u8fd0\u7b97(n\u4f4d\u65e0\u7b26\u53f7\u6570M, N\uff0c\u6c42M - N(\u4e8c\u8fdb\u5236\u8868\u793a))\uff1a + \\(M - N = M + (2^n - N) = M - N + 2^n\\) + \u5982\u679c\\(M \\ge N\\)\uff0c\u52a0\u6cd5\u4ea7\u751f\u7684\u672b\u8fdb\u4f4d\\(2^n\\)\u76f4\u63a5\u6254\u6389\uff0c\u4fdd\u7559M - N + \u5982\u679c\\(M &lt; N\\)\uff0c\u52a0\u6cd5\u672a\u4ea7\u751f\u672b\u8fdb\u4f4d\uff0c\u90a3\u4e48\u5bf9\u5f97\u5230\u7684\u7ed3\u679c\u53d6\u8865\u7801\uff0c\u5373N - M\u7684\u8865\u7801\u3002\u6b63\u786e\u7684\u7ed3\u679c\u5373\u4e3a-(N - M)</p> <p>\ud83c\udf30\uff1a 1.  2. </p> <p>\u6ce8\uff1a\u6bd4\u8f83\u65e0\u7b26\u53f7\u7b97\u672f\u548c\u7528\u8865\u7801\u7684\u65e0\u7b26\u53f7\u7b97\u672f\uff0c\u53ef\u4ee5\u53d1\u73b0\u540e\u8005\u53ef\u4ee5\u5c11\u7528\u4e00\u4e2a\u51cf\u6cd5\u5668\uff0c\u56e0\u6b64\u8bbe\u8ba1\u4e0a\u66f4\u52a0\u7b80\u5355\uff0c\u6210\u672c\u4e5f\u5f97\u5230\u964d\u4f4e</p>"},{"location":"notebooks/dld/3/#signed-integers","title":"Signed Integers","text":"<p>\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u5e26\u7b26\u53f7\u6574\u6570(signed integers)\uff1a\\(sa_{n-1}\\dots a_2a_1a_0\\)\uff0c\u5176\u4e2d\u5bf9\u4e8e\u6700\u9ad8\u4f4ds\uff1a + s = 0 \\(\\rightarrow\\) \u6b63\u6570 + s = 1 \\(\\rightarrow\\) \u8d1f\u6570</p> <p>\u8868\u793a\u6cd5\uff1a + \u5e26\u7b26\u53f7\u7684\u91cf(magnitude)\uff1an - 1\u4e2a\u6570\u5b57\u8868\u793a\u6b63\u7684\u91cf\u3002\u5bf9\u4e8e2\u4e2a\u6570\u7684\u8fd0\u7b97\uff1a     + \u5982\u679c\u6700\u9ad8\u4f4d\u52a0\u8d77\u6765\u7684\u548c\u7684\u6700\u4f4e\u4f4d\u4e3a0\uff0c\u5219\uff1a         + \u5c06\u5b83\u4eec\u7684\u91cf\u76f8\u52a0         + \u68c0\u67e5\u7ed3\u679c\u662f\u5426\u6ea2\u51fa(\u6709\u6ca1\u6709\u6765\u81ea\u6700\u9ad8\u4f4d\u7684\u8fdb\u4f4d)         + \u7ed3\u679c\u7684\u7b26\u53f7\u540c\u7b2c1\u4e2a\u64cd\u4f5c\u6570     + \u5982\u679c\u6700\u9ad8\u4f4d\u52a0\u8d77\u6765\u7684\u548c\u7684\u6700\u4f4e\u4f4d\u4e3a1\uff0c\u5219\uff1a         + \u7528\u7b2c2\u4e2a\u6570\u7684\u91cf\u51cf\u53bb\u7b2c1\u4e2a\u6570\u7684\u91cf         + \u5982\u679c\u6ca1\u6709\u501f\u4f4d\uff0c\u7ed3\u679c\u7684\u7b26\u53f7\u540c\u7b2c1\u4e2a\u64cd\u4f5c\u6570         + \u5982\u679c\u53d1\u751f\u501f\u4f4d\uff0c\u53d6\u7ed3\u679c\u7684\u8865\u7801\uff0c\u5b83\u7684\u7b26\u53f7\u4e3a\u7b2c1\u4e2a\u64cd\u4f5c\u6570\u7684\u7b26\u53f7         + \u4e0d\u7528\u62c5\u5fc3\u6ea2\u51fa(\u56e0\u4e3a\u4e0d\u53ef\u80fd\u53d1\u751f) \ud83c\udf30\uff1a \u6d41\u7a0b\uff1a + \u5e26\u7b26\u53f7\u7684\u8865(complement)\uff1a     + \u5e26\u7b26\u53f71's complement      + \u2b50\u5e26\u7b26\u53f72's complement\uff1a\u5c06\u5e26\u7b26\u53f7\u6574\u6570\u8f6c\u6362\u6210\u5e26\u7b26\u53f7\u7684\u8865\u7801         + \u6b63\u6570\uff1a\u5b83\u7684\u8865\u7801\u5373\u4e3a\u81ea\u8eab\uff0c\u56e0\u6b64\u8f6c\u5316\u4e3a\u65e0\u7b26\u53f7\u7684\u6570         + \u8d1f\u6570\uff1a\u53d6\u5b83\u7684\u7edd\u5bf9\u503c(\u7b26\u53f7\u4f4d\u4ece1\u53d80)\u7684\u8865\u7801 \ud83c\udf30\uff1a3\u4f4d\u4e8c\u8fdb\u5236\u5e26\u7b26\u53f7\u6574\u6570 </p> <p>\u66f4\u5f62\u8c61\u7684\u89c2\u5bdf\uff1a </p> <p>\u6ce8\uff1an\u4f4d\u5e26\u7b26\u53f7\u7684\u8865\u7801 + \u4e0a\u9650\uff1a\\(2^{n - 1} - 1\\) + \u4e0b\u9650\uff1a\\(-2^{n-1}\\)</p> <p>\u8865\u5145\uff1a 1. \u7b26\u53f7\u6269\u5c55(sign extension) \u4fdd\u7559\u8865\u7801\u7684\u503c     + \u6b63\u6570\uff1a\u9ad8\u4f4d\u6dfb\u52a00     + \u8d1f\u6570\uff1a\u9ad8\u4f4d\u6dfb\u52a01 \ud83c\udf30\uff1a0111 \\(\\rightarrow\\) 0000111, 1011 \\(\\rightarrow\\) 1111011</p> <p>\u5177\u4f53\u539f\u7406\uff1a 2. \u5728\u8865\u7801\u7684\u7b97\u672f\u8fd0\u7b97\u4e2d\uff0c\u6700\u9ad8\u4f4d\u7684\u8fdb\u4f4d\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u6ea2\u51fa \ud83c\udf30\uff1a</p>"},{"location":"notebooks/dld/3/#signed-2s-complement-arithmetic","title":"Signed 2's Complement Arithmetic","text":"<p>\u52a0\u6cd5\uff1a 1. \u4e24\u6570\u76f8\u52a0(\u5305\u62ec\u7b26\u53f7\u4f4d)\uff0c\u6254\u6389\u7b26\u53f7\u4f4d\u7684\u8fdb\u4f4d 2. \u5982\u679c\u4e24\u6570\u7b26\u53f7\u76f8\u540c\uff0c\u4f46\u7ed3\u679c\u7684\u7b26\u53f7\u4e0e\u4e24\u6570\u4e0d\u540c\uff0c\u8868\u660e\u53d1\u751f\u6ea2\u51fa 3. \u7ed3\u679c\u7684\u7b26\u53f7\u5df2\u7ecf\u4ece\u6b65\u9aa41\u5f97\u5230 \u51cf\u6cd5\uff1a\u51cf\u6cd5(\u88ab\u51cf\u6570 - \u51cf\u6570) \\(\\rightarrow\\) \u88ab\u51cf\u6570 + \u51cf\u6570\u7684\u8865\uff0c\u7136\u540e\u7528\u52a0\u6cd5\u7684\u65b9\u6cd5\u505a\u5373\u53ef</p> <p>\u5e26\u7b26\u53f7\u7684\u8865\u7801\u52a0\u6cd5\u5668/\u51cf\u6cd5\u5668\uff1a + \u5f53\\(S = 0\\)\u65f6\uff0c\u6b64\u65f6B\u6ca1\u6709\u88ab\u6539\u53d8\uff0c\u6267\u884c\u52a0\u6cd5 + \u5f53\\(S = 1\\)\u65f6\uff0c\u6b64\u65f6\u901a\u8fc7\u5f02\u6216\u7684\u53d6\u53cd\u4f5c\u7528\uff0c\u52a0\u4e0a\\(C_0 = 1\\)\uff0c\u6211\u4eec\u5f97\u5230\u4e86B\u7684\u8865\u7801\uff0c\u6267\u884c\u51cf\u6cd5</p>"},{"location":"notebooks/dld/3/#overflow-detection","title":"Overflow Detection","text":"<p>\u6ea2\u51fa(overflow) \u53ef\u80fd\u53d1\u751f\u4e8e\uff1a + \u4e24\u4e2a\u7b26\u53f7\u76f8\u540c\u7684\u64cd\u4f5c\u6570\u7684\u52a0\u6cd5 + \u4e24\u4e2a\u7b26\u53f7\u4e0d\u540c\u7684\u64cd\u4f5c\u6570\u7684\u51cf\u6cd5</p> <p>\u4e24\u4e2ak\u4f4d\u6570\u7684\u52a0\u6cd5\uff1a\\(X_{k-1}\\dots X_0 + Y_{k-1}\\dots Y_0 = S_{k-1}\\dots S_0\\) \u4fa6\u6d4b\u9519\u8bef\u7684\u516c\u5f0f\uff1a\\(V = X_{k-1}Y_{k-1}\\overline{S_{k-1}} + \\overline{X_{k-1}Y_{k-1}}S_{k-1} = C_{k-1} \\oplus C_{k-2}\\)\uff0c\u5e94\u5bf9\u4e24\u79cd\u60c5\u51b5\uff1a + \u4e0b\u6ea2(underflow) + \u4e0a\u6ea2(overflow) </p> <p>\ud83c\udf30\uff1a\u5e26\u6ea2\u51fa\u4fa6\u6d4b\u7684\u8865\u7801\u52a0\u6cd5\u5668/\u51cf\u6cd5\u5668 + \u7b80\u5316\u7248\uff1a + \u7528\u4e8e4\u4f4d\u884c\u6ce2\u52a0\u6cd5\u5668\uff1a</p>"},{"location":"notebooks/dld/3/#summary_1","title":"Summary","text":""},{"location":"notebooks/dld/3/#other-arithmetic-functions","title":"Other Arithmetic Functions","text":"<p>\u9664\u4e86\u52a0\u51cf\u7684\u7b97\u672f\u51fd\u6570\u5916\uff0c\u8fd8\u6709\u81ea\u589e(incrementing)\u3001\u81ea\u51cf(decrementing)\u3001\u4e58\u6cd5(multiplication)\u3001\u5e38\u6570\u9664\u6cd5(division by a constant) \u7b49\u3002</p>"},{"location":"notebooks/dld/3/#design-by-contraction","title":"Design by Contraction","text":"<p>\ud83c\udfaf\uff1a\u5229\u7528\u6765\u81ea\u4e4b\u524d\u8bbe\u8ba1\u7684\u7ed3\u679c\uff0c\u5b9e\u73b0\u903b\u8f91\u7535\u8def\u6216\u51fd\u6570\u5757\u7684\u8bbe\u8ba1</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u7c7b\u4f3c\u7ed9\u5b9a\u7535\u8def\u7684\u5de5\u827a\uff0c\u968f\u540e\u201c\u538b\u7f29\u201d\u6210\u66f4\u7b80\u5355\u7684\u7535\u8def\uff08\u6bd4\u5982\u5229\u7528\u503c\u56fa\u5b9a(value fixing)\u3001\u4f20\u8f93(transfer) \u548c\u9006\u8f6c\u8f93\u5165(inverting on its inputs) \u7b49\u65b9\u6cd5\uff09\uff0c\u5c06\u5176\u5e94\u7528\u4e8e\u7279\u5b9a\u573a\u666f\u6765\u5b9e\u73b0\u65b0\u7684\u51fd\u6570\u3002</p> <p>\ud83c\udf30\uff1a\u5c06\u884c\u6ce2\u52a0\u6cd5\u5668\u538b\u7f29\u6210\u81ea\u589e\u5668(incrementer)\uff1an = 3, \\(A_2A_1A_0 + 1\\)  ^01b3d3</p>"},{"location":"notebooks/dld/3/#incrementing-and-decrementing","title":"Incrementing and Decrementing","text":"<p>\u81ea\u589e(incrementing)\uff1a + \u51fd\u6570\u5757\uff1a\u81ea\u589e\u5668(incrementer) + \ud83c\udf30\uff1aA + 1, B + 4 + \u4f5c\u7528\uff1a\u7b97\u672f\u53d8\u91cf + \u56fa\u5b9a\u503c + \u56fa\u5b9a\u503c = 1\u65f6\u79f0\u4e3a\u5411\u4e0a\u8ba1\u6570(counting up)</p> <p>\u81ea\u51cf(decrementing)\uff1a + \u51fd\u6570\u5757\uff1a\u81ea\u51cf\u5668(decrementer) + \ud83c\udf30\uff1aA - 1, B - 4 + \u4f5c\u7528\uff1a\u7b97\u672f\u53d8\u91cf - \u56fa\u5b9a\u503c + \u56fa\u5b9a\u503c = 1\u65f6\u79f0\u4e3a\u5411\u4e0b\u8ba1\u6570(counting down)</p>"},{"location":"notebooks/dld/3/#multiplication-and-division","title":"Multiplication and Division","text":"<ul> <li>\u4e0e\\(2^n\\)\u76f8\u4e58\uff1a\u5411\u5de6\u79fbn\u4f4d</li> <li>\u4e0e\\(2^n\\)\u76f8\u9664\uff1a\u5411\u53f3\u79fbn\u4f4d  <p>\u6ce8\uff1a\u4e0a\u9762\u4e3a\u4e58\u6cd5\uff0c\u4e0b\u9762\u4e3a\u9664\u6cd5</p> </li> </ul> <p>\ud83c\udf30\uff1a\\(B(3: 0) \\times (101)_2\\) </p>"},{"location":"notebooks/dld/3/#zero-fill","title":"Zero Fill","text":"<p>\u6dfb0(zero fill)\uff1a\u901a\u8fc7\u5bf9m\u4f4d\u7684\u64cd\u4f5c\u6570\u6dfb0\uff0c\u8be5\u64cd\u4f5c\u6570\u6269\u5c55\u81f3n\u4f4d(m &lt; n)\u3002\u901a\u5e38\u5728\u6700\u9ad8\u4f4d(MSB) \u6dfb0\uff0c\u4e5f\u53ef\u4ee5\u5728\u6700\u4f4e\u4f4d(LSB) \u6dfb0 \ud83c\udf30\uff1a\u5c0611110101\u6269\u621016\u4f4d + MSB\uff1a00000000 11110101 + LSB\uff1a11110101 00000000</p>"},{"location":"notebooks/dld/3/#sign-extension","title":"Sign Extension","text":"<p>\u7b26\u53f7\u6269\u5c55(sign extension)\uff1a\u6839\u636e\u8865\u7801\u8868\u793a\u6cd5\u7684\u89c4\u5219\uff0c\u5728\u6700\u9ad8\u4f4d\u540e\u6dfb\u52a0\u6570\u5b57 \ud83c\udf30\uff1a + \u6b63\u6570\uff1a01110101 \\(\\rightarrow\\) 00000000 01110101 + \u8d1f\u6570\uff1a11110101 \\(\\rightarrow\\) 11111111 11110101</p>"},{"location":"notebooks/dld/3/#arithmetic-logic-unitalu","title":"Arithmetic Logic Unit(ALU)","text":"<p>\u7b26\u53f7\uff1a </p> <ul> <li>2\u4e2an\u4f4d\u8f93\u5165\uff1a\\(A_0 - A_{n-1}, B_0 - B_{n-1}\\)</li> <li>\u7b26\u53f7\u7b97\u672f\uff1a\u52a0/\u51cf/\u81ea\u589e/\u81ea\u51cf</li> <li>\u903b\u8f91\u8fd0\u7b97\uff1a\u4e0e/\u6216/\u975e/\u5f02\u6216</li> <li>\u6a21\u5f0f\u9009\u62e9\uff1a\u7b97\u672f/\u903b\u8f91</li> <li>\u8fd0\u7b97\u9009\u62e9</li> <li>1\u4f4d\u7684\u8fdb\u4f4d\u8f93\u5165\u548c\u8fdb\u4f4d\u8f93\u51fa</li> </ul> <p>\u6846\u56fe\uff1a </p> <p>\u5b9e\u73b0\uff1a + \u4f7f\u7528\u903b\u8f91\u5757\uff0c\u5bf9\u52a0\u6cd5\u5668\u8f93\u5165B\u76844\u79cd\u60c5\u51b5\u4e2d\u8fdb\u884c\u9009\u62e9 + \u6539\u53d8\u751f\u6210\u51fd\u6570\\(G_i\\)\u548c\u4f20\u64ad\u51fd\u6570\\(P_i\\)</p> <p>\u6839\u636e\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5206\u89e3\u540e\u7684\u6846\u56fe\uff1a </p> <p></p> <p>\u51fd\u6570\u8868\u2014\u2014\u5217\u51fa\u6240\u6709\u6709\u7528\u7684\u51fd\u6570 </p>"},{"location":"notebooks/dld/4/","title":"Chap 4 Sequential Circuits","text":":material-circle-edit-outline: \u7ea6 9725 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 32 \u5206\u949f"},{"location":"notebooks/dld/4/#sequential-circuit-definition","title":"Sequential Circuit Definition","text":"<p>\u65f6\u5e8f\u7535\u8def(sequential circuit)\uff1a\u8f93\u51fa\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u5f53\u524d\u7684\u8f93\u5165\uff0c\u4e5f\u53d6\u51b3\u4e8e\u4e4b\u524d\u7684\u8f93\u5165\u7684\u7535\u8def\u3002\u65f6\u5e8f\u7535\u8def\u53ef\u4ee5\u7528\u4e00\u5f20\u72b6\u6001\u56fe(state diagram) \u8868\u793a\uff0c\u5b83\u7531\u5728\u4efb\u610f\u7ed9\u5b9a\u65f6\u95f4\u5185\u7684\u6709\u9650\u6570\u91cf\u7684\u72b6\u6001\u8868\u793a\uff0c\u4e14\u72b6\u6001\u968f\u7740\u5916\u90e8\u8f93\u5165\u7684\u53d8\u5316\u800c\u53d8\u5316</p> <p>\u65f6\u5e8f\u7535\u8def\u5305\u62ec\uff1a + \u5b58\u50a8\u5143\u4ef6(storage elements)\uff1a\u80fd\u591f\u5b58\u50a8\u4e8c\u8fdb\u5236\u4fe1\u606f\u7684\u7535\u8def\uff0c\u800c\u8fd9\u79cd\u5728\u4efb\u610f\u7ed9\u5b9a\u65f6\u95f4\u5185\u5b58\u50a8\u7684\u4e8c\u8fdb\u5236\u4fe1\u606f\u88ab\u79f0\u4e3a\u5728\u90a3\u4e2a\u65f6\u523b\u7684\u72b6\u6001(state)\u3002</p> <p>\u72b6\u6001\u662f\u4e00\u79cd\u5bf9\u7535\u8def\u4e4b\u524d\u7684\u8f93\u5165\u7684\u4e00\u79cd\u62bd\u8c61 + \u7ec4\u5408\u903b\u8f91\uff1a     + \u8f93\u5165         + \u6765\u81ea\u5916\u90e8\u7684\u4fe1\u53f7         + \u6765\u81ea\u5b58\u50a8\u5143\u4ef6\u7684\u4fe1\u53f7\uff0c\u79f0\u4e3a\u72b6\u6001(state)\uff0c\u6216\u5f53\u524d\u72b6\u6001(present state)     + \u8f93\u51fa         + \u6765\u81ea\u5916\u90e8\u7684\u4fe1\u53f7         + \u6765\u81ea\u5b58\u50a8\u5143\u4ef6\u7684\u4fe1\u53f7\uff0c\u79f0\u4e3a\u4e0b\u4e00\u72b6\u6001(next state)</p> <p></p>"},{"location":"notebooks/dld/4/#types-of-sequential-circuits","title":"Types of Sequential Circuits","text":"<p>\u6839\u636e\u5b58\u50a8\u5143\u4ef6\u89c2\u5bdf\u8f93\u5165\u4fe1\u53f7\u7684\u65f6\u95f4\u548c\u5185\u90e8\u72b6\u6001\u6539\u53d8\u7684\u65f6\u95f4\uff0c\u5c06\u65f6\u5e8f\u7535\u8def\u5206\u4e3a\uff1a</p> <ul> <li> <p>\u540c\u6b65(synchronous)\uff1a ^e43b6d</p> <ul> <li>\u8fd9\u79cd\u7535\u8def\u7684\u884c\u4e3a\u53ef\u7531\u5b83\u5728\u79bb\u6563\u65f6\u95f4\u5185\u7684\u4fe1\u53f7\u6765\u5b9a\u4e49</li> <li>\u5b58\u50a8\u5143\u4ef6\u89c2\u5bdf\u8f93\u5165\u4fe1\u53f7\u7684\u65f6\u95f4\uff0c\u5e76\u4e14==\u4ec5==\u968f\u65f6\u95f4\u4fe1\u53f7(\u6765\u81ea\u65f6\u949f\u751f\u6210\u5668(clock generator) \u7684 \u65f6\u949f\u8109\u51b2(clock pulse))\u7684\u53d8\u5316\u800c\u6539\u53d8\u72b6\u6001\u3002\u56e0\u6b64\u5b83\u53c8\u88ab\u79f0\u4e3a\u65f6\u949f\u65f6\u5e8f\u7535\u8def(clocked sequential circuits)\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u7535\u8def\u80fd\u591f\u5728\u4e0d\u540c\u7684\u7535\u8def\u5ef6\u8fdf\u4e0b\u4e5f\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u800c\u4e14\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u5bb9\u6613\u8bbe\u8ba1\u51fa\u6765\u3002 </li> </ul> </li> <li> <p>\u5f02\u6b65(Asynchronous)</p> <ul> <li>\u8fd9\u79cd\u7535\u8def\u7684\u884c\u4e3a\u4f9d\u8d56\u4e8e\u67d0\u4e00\u65f6\u523b\u7684\u8f93\u5165\u4fe1\u53f7\u4ee5\u53ca\u8f93\u5165\u4fe1\u53f7\u5728\u8fde\u7eed\u65f6\u95f4\u5185\u53d8\u5316\u7684\u987a\u5e8f</li> <li>\u5982\u679c\u65f6\u949f\u88ab\u5f53\u505a\u53e6\u4e00\u4e2a\u8f93\u5165\uff0c\u90a3\u4e48\u6240\u6709\u7684\u7535\u8def\u90fd\u662f\u5f02\u6b65\u7684 </li> </ul> </li> </ul>"},{"location":"notebooks/dld/4/#storage-elements","title":"Storage Elements","text":"<p>\u5b58\u50a8\u4fe1\u606f\u7684\u65b9\u5f0f\u591a\u79cd\u591a\u6837\uff0c\u5305\u62ec\u4f7f\u7528\u903b\u8f91\u7535\u8def\uff0c\u6bd4\u5982\u7f13\u51b2\u5668(buffer)\u3002\u5047\u8bbe\u7f13\u51b2\u5668\u5177\u6709\\(t_G\\)\u65f6\u95f4\u7684\u5ef6\u8fdf\uff0c\u90a3\u4e48\u5728\\(t\\)\u65f6\u523b\u8fdb\u884c\u8f93\u5165\uff0c\u5c06\u4f1a\u5728\\(t + t_G\\)\u65f6\u523b\u5f97\u5230\u8f93\u51fa\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4fe1\u606f\u5b58\u50a8\u4e86\\(t_G\\)\u65f6\u95f4\u3002</p> <p>\u4f46\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u4fe1\u606f\u5b58\u50a8\u7684\u65f6\u95f4\u662f\u4e0d\u5b9a\u7684(indefinite)\uff0c\u5e94\u8be5\u6bd4\u4e00\u4e2a\u6216\u591a\u4e2a\u95e8\u7684\u5ef6\u8fdf\u66f4\u957f\u4e00\u4e9b\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5bf9\u7f13\u51b2\u5668\u8fdb\u884c\u6539\u88c5\uff1a\u5c06\u5b83\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u76f8\u8fde\u63a5\u3002\u5047\u5982\u8f93\u5165\u4e3a0\uff0c\u90a3\u4e48\u5728\\(t_G\\)\u65f6\u95f4\u8fc7\u540e\u7f13\u51b2\u5668\u5c06\u4f1a\u8f93\u51fa0\uff1b\u7136\u540e\u8fd9\u4e2a0\u53c8\u56de\u5230\u8f93\u5165\uff0c\u53c8\u8fc7\u4e86\\(t_G\\)\u65f6\u95f4\u540e\u88ab\u8f93\u51fa\u2026\u2026\u5982\u6b64\u5f80\u590d\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e00\u76f4\u4fdd\u5b580\u7684\u529f\u80fd(\u8f93\u5165\u4e3a1\u540c\u7406)\u3002</p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u53ef\u4ee5\u901a\u8fc7\u5c06\u5177\u6709\u5ef6\u8fdf\u7684\u903b\u8f91\u7535\u8def\u6784\u6210\u95ed\u73af(closed loop) \u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u5b58\u50a8\u529f\u80fd\uff0c\u540c\u65f6\u8981\u786e\u4fdd\u56de\u8def\u4e2d\u6ca1\u6709\u9006\u8f6c\u4fe1\u53f7\u3002\u4e00\u4e2a\u7f13\u51b2\u5668\u901a\u5e38\u7531\u4e24\u4e2a\u975e\u95e8\u6784\u6210\u7684\u3002 </p> <p>\u7136\u800c\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u867d\u7136\u5e38\u7528\uff0c\u4f46\u5b83\u5b58\u5728\u4e00\u4e2a\u660e\u663e\u7684\u95ee\u9898\uff1a\u6211\u4eec\u65e0\u6cd5\u6539\u53d8\u7f13\u51b2\u5668\u5b58\u50a8\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u6ca1\u6709\u989d\u5916\u7684\u8f93\u5165\u6765\u63a7\u5236\u3002\u5982\u679c\u6211\u4eec\u7528\u6216\u975e\u95e8\u6216\u8005\u4e0e\u975e\u95e8\uff0c\u5c31\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e00\u73b0\u72b6\uff0c\u540e\u9762\u8bb2\u5230\u7684\u5f02\u6b65\u5b58\u50a8\u7535\u8def\u9501\u5b58\u5668(latches) \u5c31\u662f\u8fd9\u4e48\u6784\u5efa\u7684\u3002</p> <p>\u901a\u5e38\u6765\u8bf4\uff0c\u66f4\u591a\u590d\u6742\u7684\u5f02\u6b65\u65f6\u5e8f\u7535\u8def\u5f88\u96be\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u884c\u4e3a\u9ad8\u5ea6\u4f9d\u8d56\u95e8\u7684\u5ef6\u8fdf\u548c\u6539\u53d8\u8f93\u5165\u7684\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u5927\u591a\u6570\u8bbe\u8ba1\u8005\u4f1a\u9009\u62e9\u540c\u6b65\u65f6\u5e8f\u7535\u8def\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6709\u4e9b\u5f02\u6b65\u65f6\u5e8f\u7535\u8def\u662f\u5fc5\u9700\u7684\uff0c\u4e00\u4e2a\u91cd\u8981\u7684\u4f8b\u5b50\uff1a\u9700\u8981\u7528\u5f02\u6b65\u7684\u9501\u5b58\u5668\u6765\u6784\u5efa\u540c\u6b65\u7535\u8def\u89e6\u53d1\u5668(flip-flops) \u3002</p> <p>\u89e6\u53d1\u5668\u662f\u80fd\u591f\u5b58\u50a8\u4e00\u4f4d\u4fe1\u606f\u7684\u4e8c\u8fdb\u5236\u5b58\u50a8\u5143\u4ef6\uff0c\u5e76\u5177\u6709\u65f6\u95f4\u7279\u5f81(\u5728Flip-Flop Timing\u4e00\u8282\u5b9a\u4e49)\u3002\u5b83\u4ec5\u6839\u636e\u65f6\u949f\u8109\u51b2\u6765\u6539\u53d8\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6ca1\u6709\u65f6\u949f\u8109\u51b2\uff0c\u5373\u4f7f\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u6539\u53d8\u4e86\u7535\u8def\u7684\u8f93\u5165\uff0c\u5b83\u7684\u8f93\u51fa\u4ecd\u7136\u4e0d\u53d8\u3002\u90a3\u4e48\uff0c[[Chap 4 Sequential Circuits#^e43b6d|\u4e0a\u56fe]]\u7ec4\u5408\u903b\u8f91\u7535\u8def\u4e0e\u89e6\u53d1\u5668\u7684\u56de\u8def\u5c31\u76f8\u5f53\u4e8e\u65ad\u5f00\u4e86\u3002\u89e6\u53d1\u5668\u67091\u4e2a\u62162\u4e2a\u8f93\u51fa\uff0c\u4e00\u4e2a\u7528\u4e8e\u8f93\u51fa\u5b58\u50a8\u7684\u6b63\u5e38\u503c\uff0c\u53e6\u4e00\u4e2a\u53ef\u9009\u7684\u8f93\u51fa\u5b58\u50a8\u503c\u7684\u8865\u3002\u6700\u5e38\u7528\u7684\u89e6\u53d1\u5668\u662f \\(D\\)\u89e6\u53d1\u5668\u3002\u5728\u6df1\u5165\u5b66\u4e60\u89e6\u53d1\u5668\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u9501\u5b58\u5668\u7684\u5de5\u4f5c\u539f\u7406\u3002</p>"},{"location":"notebooks/dld/4/#latches","title":"Latches","text":"<p>\u6ce8\uff1a\u9501\u5b58\u5668\u662f==\u5f02\u6b65==\u65f6\u5e8f\u7535\u8def</p>"},{"location":"notebooks/dld/4/#sr-and-overlinesr-latches","title":"\\(SR\\) and \\(\\overline{SR}\\) Latches","text":"<p>\u9501\u5b58\u5668(latches) \u6709\u4ee5\u4e0b\u7279\u5f81\uff1a + \u4e24\u4e2a\u7a33\u5b9a\u7684\u72b6\u6001\uff0c\u5373<code>0</code>\uff0c<code>1</code> + \u53ef\u4ee5\u957f\u671f\u4fdd\u5b58\u7ed9\u5b9a\u7684\u72b6\u6001\u503c + \u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u53ef\u4ee5\u6539\u53d8\u72b6\u6001\uff0c\u6bd4\u5982\u7f6e\u4f4d(set)<code>1</code>\u6216\u590d\u4f4d(reset)<code>0</code></p> <p>\\(SR\\)\u9501\u5b58\u5668\uff1a\u7531\u4e24\u4e2a\u6216\u975e\u95e8\u7684\u4ea4\u53c9\u8026\u5408(cross-coupling) \u6784\u6210\uff0c\u5982\u56fe\u6240\u793a\uff1a </p> <ul> <li>\u5176\u4e2d\uff0c\u8f93\u5165\\(S\\)\u7528\u4e8e\u7f6e\u4f4d(set)\uff0c\\(R\\)\u7528\u4e8e\u590d\u4f4d(reset)</li> <li>\u5f53==\u8f93\u51fa==\\(Q = 1, \\overline{Q} = 0\\)\u65f6\uff0c\u79f0\u4e3a\u7f6e\u4f4d\u72b6\u6001(set state)\uff1b\u5f53\\(Q = 0, \\overline{Q} = 1\\)\u65f6\uff0c\u79f0\u4e3a\u590d\u4f4d\u72b6\u6001(reset state)</li> <li>\u5982\u679c\\(S = R = 1\\)(\u540c\u65f6\u8f93\u51651)\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u672a\u5b9a\u4e49\u7684(undefined) \u7684\u72b6\u6001(\u4e24\u4e2a\u8f93\u51fa\u5747\u4e3a0\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u4e24\u4e2a\u8f93\u51fa\u662f\u4e92\u8865\u7684)</li> <li>\u5982\u679c\\(S = R = 0\\)\u65f6\uff0c\u9501\u5b58\u5668\u5904\u4e8e\u7f6e\u4f4d\u6216\u590d\u4f4d\u72b6\u6001\uff0c\u53d6\u51b3\u4e8e\u6700\u8fd1\u7684\u4e00\u6b21\u8f93\u5165</li> </ul> <p>\\(SR\\)\u9501\u5b58\u5668\u7684\u884c\u4e3a\u53ef\u4ee5\u7531\u4e0b\u9762\u7684\u4eff\u771f\u6ce2\u5f62\u56fe\u8868\u8ff0\uff1a </p> <p>\\(\\overline{SR}\\) \u9501\u5b58\u5668\uff1a\u7531\u4e24\u4e2a\u4e0e\u975e\u95e8\u7684\u4ea4\u53c9\u8026\u5408\u6784\u6210\uff0c\u5982\u56fe\u6240\u793a\uff1a </p> <p>\u6ce8\u610f\uff1a\u8fd9\u79cd\u9501\u5b58\u5668\u7684\u8f93\u5165\u4fe1\u53f7\u8981\u53d6\u8865</p> <p>[!summary]  + \\(SR\\)\u9501\u5b58\u5668\u7531\u6216\u975e\u95e8\u6784\u6210 \\(\\rightarrow\\) \u5bf9<code>0</code>\u654f\u611f \\(\\rightarrow\\) \u540c\u65f6\u4e3a<code>0</code>\u662f\u4fdd\u6301\u72b6\u6001 + \\(\\overline{SR}\\)\u9501\u5b58\u5668\u7531\u4e0e\u975e\u95e8\u6784\u6210 \\(\\rightarrow\\) \u5bf9<code>1</code>\u654f\u611f \\(\\rightarrow\\) \u540c\u65f6\u4e3a<code>1</code>\u662f\u4fdd\u6301\u72b6\u6001</p> <p>\u4e0d\u7a33\u5b9a\u7684\u9501\u5b58\u5668\u884c\u4e3a\uff1a</p> <p>\u6ce8\uff1a\u8fd9\u5757\u5185\u5bb9\u5c5e\u4e8e\u8865\u5145\u77e5\u8bc6\uff0c\u8003\u8bd5\u5e94\u8be5\u4e0d\u505a\u8981\u6c42</p> <ul> <li> <p>\u632f\u8361(oscillation) \\(\\overline{S} = \\overline{R} = 0\\)\u4e0d\u80fd\u4f5c\u4e3a\u8f93\u5165\uff0c\u56e0\u4e3a\uff1a</p> <ul> <li>\u5982\u679c\u4e24\u4e2a\u95e8\u5177\u6709==\u76f8\u540c\u7684\u5ef6\u8fdf==\uff0c\u90a3\u4e48\u5b83\u4eec\u5c06\u4f1a\u540c\u65f6\u8f93\u51fa0\u3002\u5c060\u53cd\u9988\u81f3\u8f93\u5165\u7aef\u5c31\u4f1a\u540c\u65f6\u8f93\u51fa1\uff0c\u7136\u540e\u53c8\u540c\u65f6\u8f93\u51fa0\uff0c\u5982\u6b64\u5f80\u590d\u3002\u8fd9\u79cd\u632f\u8361\u884c\u4e3a\u79f0\u4e3acritical race\uff0c\u5b83\u5c06\u4f1a\u6c38\u8fdc\u6301\u7eed\u4e0b\u53bb</li> <li>\u5982\u679c\u4e24\u4e2a\u95e8\u5177\u6709==\u4e0d\u540c\u7684\u5ef6\u8fdf==\uff0c\u90a3\u4e48\u9501\u5b58\u5668\u5c31\u4f1a\u6539\u53d8\u72b6\u6001\u3002\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u6e05\u695a\u9501\u5b58\u5668\u4f1a\u8fdb\u5165\u4ec0\u4e48\u72b6\u6001\uff0c\u56e0\u6b64\u9501\u5b58\u5668\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u662f\u672a\u5b9a\u4e49\u7684</li> </ul> </li> <li> <p>\u4e9a\u7a33\u6001(metastable state) \\(\\overline{S} = \\overline{R} = 1\\)\uff0c\\(\\overline{S}-\\overline{R}\\)\u9501\u5b58\u5668\u7b49\u4ef7\u4e8e\u8fd9\u79cd\u7535\u8def\u56fe\uff1a          \u8003\u8651\u4e24\u4e2a\u975e\u95e8\u7684\u4f20\u8f93\u7279\u5f81\uff1a          \u4e2d\u95f4\u7684\u70b9\u4ee3\u8868\u4e9a\u7a33\u6001\u3002\u4efb\u4f55\u4fe1\u53f7\u7684\u5fae\u5c0f\u53d8\u5316\u90fd\u4f1a\u5f97\u5230\u52a0\u5f3a\uff0c\u4e14\u7535\u8def\u4f1a\u79bb\u5f00\u4e9a\u7a33\u6001</p> </li> </ul> <p>\u5982\u4f55\u907f\u514d\u8fd9\u4e9b\u4e0d\u7a33\u5b9a\u72b6\u6001\u5462\uff1f + \u4e0d\u8981\u540c\u65f6\u5c06\\(R, S\\)\u4ece0\u6539\u53d8\u81f31\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u632f\u8361\u884c\u4e3a\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u4e0d\u80fd\u8ba9\u5b83\u4eec\u540c\u65f6\u4e3a0 + \u4e00\u65e6\u6539\u53d8\u4e00\u4e2a\u8f93\u5165\u540e\uff0c\u5c31\u4e0d\u8981\u518d\u6539\u53d8\u5b83\uff0c\u76f4\u5230\u7535\u8def\u5b8c\u6210\u4fe1\u53f7\u4f20\u8f93\u5e76\u8fbe\u5230\u7a33\u5b9a\u72b6\u6001\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4e9a\u7a33\u6001\u884c\u4e3a\u3002</p> <p>\u65f6\u949f\\(SR\\)\u9501\u5b58\u5668(clocked \\(SR\\) latches)\uff1a\u5728\u539f\u5148\\(\\overline{SR}\\)\u9501\u5b58\u5668\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e24\u4e2a\u4e0e\u975e\u95e8\u548c\u4e00\u4e2a\u63a7\u5236\u8f93\u5165(control input)\\(C\\)\u5f97\u5230\u7684\uff0c\u8fd9\u4e2a\u8f93\u5165\u4f5c\u4e3a\u53e6\u5916\u4e24\u4e2a\u8f93\u5165\u7684\u4f7f\u80fd\u4fe1\u53f7</p> <p></p> <ul> <li>\u5b83\u4e0e\u57fa\u672c\u7684\\(SR\\)\u9501\u5b58\u5668\u5177\u6709\u76f8\u540c\u7684\u65f6\u5e8f\u884c\u4e3a\uff0c\u9664\u4e86\u5b83\u53ea\u5728\\(C\\)\u4e3a\u9ad8\u7535\u5e73\u65f6\u6b63\u5e38\u8fd0\u884c</li> <li>\u57fa\u672c\u7684\\(\\overline{SR}\\)\u9501\u5b58\u5668\u662f\u5f02\u6b65\u65f6\u5e8f\u7535\u8def\uff0c\u800c\u65f6\u949f\\(SR\\)\u9501\u5b58\u5668\u662f\u540c\u6b65\u65f6\u5e8f\u7535\u8def</li> <li>\u8fd9\u79cd\u5e26\u63a7\u5236\u8f93\u5165\u7684\\(SR\\)\u9501\u5b58\u5668\u662f\u6784\u5efa\u5176\u4ed6\u7c7b\u578b\u7684\u9501\u5b58\u5668\u548c\u89e6\u53d1\u5668\u7684\u57fa\u7840</li> </ul>"},{"location":"notebooks/dld/4/#d-latch","title":"\\(D\\) Latch","text":"<p>\u5982\u4e0a\u6240\u8ff0\uff0c\u5f53\\(S = R = C = 1\\)\u65f6\uff0c\u9501\u5b58\u5668\u7684\u72b6\u6001\u662f\u672a\u5b9a\u4e49\u7684\u3002\u4e3a\u4e86\u6d88\u9664\u8fd9\u79cd\u60c5\u51b5(\u5373\\(S, R\\)\u4e0d\u540c\u65f6\u4e3a1)\uff0c\u6211\u4eec\u91c7\u7528\\(D\\)\u89e6\u53d1\u5668\uff0c\u5982\u56fe\u6240\u793a\u3002</p> <p>\u8fd9\u79cd\u89e6\u53d1\u5668\u53ea\u6709\u4e24\u4e2a\u8f93\u5165\uff1a\\(D\\)(data)\u548c\\(C\\)(control)\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\\(D\\)\u5145\u5f53\u539f\u6765\\(\\overline{R}\\)\u7684\u5730\u4f4d\uff0c\u800c\u5b83\u7684\u8865\\(\\overline{D}\\)\u5219\u5145\u5f53\u539f\u6765\\(\\overline{S}\\)\u7684\u5730\u4f4d\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u540c\u65f6\u4e3a1\u7684\u60c5\u51b5\u3002</p> <p>\u4f46\u8fd9\u6837\u4e5f\u6d88\u9664\u4e86\u540c\u65f6\u4e3a0\u7684\u60c5\u51b5\uff0c\u800c\u8fd9\u79cd\u60c5\u51b5\u672c\u6765\u8868\u793a\u4fdd\u6301\u72b6\u6001\u4e0d\u53d8\u3002\u5f53\\(C = 0\\)\u65f6(\u7981\u7528)\uff0c\u4f9d\u7136\u80fd\u591f\u5b9e\u73b0\u4fdd\u6301\u72b6\u6001\uff1b\u53ea\u6709\u5f53\\(C = 1\\)\u65f6\uff0c\u6570\u636e\u8f93\u5165\\(D\\)\u624d\u80fd\u8d77\u4f5c\u7528\u3002</p> <p></p>"},{"location":"notebooks/dld/4/#flip-flops","title":"Flip-Flops","text":"<p>\u6ce8\uff1a\u89e6\u53d1\u5668\u662f==\u540c\u6b65==\u65f6\u5e8f\u7535\u8def</p> <p>[!warning]  \u9501\u5b58\u5668\u7684\u95ee\u9898\uff1a\u7a7a\u7ffb</p> <p>\u89e6\u53d1(trigger)\uff1a\u63a7\u5236\u8f93\u5165\u7684\u503c\u7684\u6539\u53d8\u4f7f\u5f97\u89e6\u53d1\u5668\u5185\u7684\u9501\u5b58\u5668\u7684\u72b6\u6001\u4e5f\u53d1\u751f\u6539\u53d8</p> <p>\u6709\u65f6\u949f\u8109\u51b2\u7684\\(D\\)\u9501\u5b58\u5668\uff0c\u5728\u8109\u51b2\u8fbe\u5230\u9ad8\u7535\u5e73(logic-1 level) \u65f6\u4f1a\u88ab\u89e6\u53d1\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9501\u5b58\u5668\u662f\u900f\u660e\u7684(transparent)\uff0c\u56e0\u4e3a\u5f53\u63a7\u5236\u8f93\u5165\u4e3a1\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5b83\u7684\u8f93\u51fa\u4e2d\u201c\u770b\u5230\u201d\u5b83\u7684\u8f93\u5165\u3002</p> <p>\u5982[[Chap 4 Sequential Circuits#^e43b6d|\u4e0a\u56fe]]\u6240\u8ff0\uff0c\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u4e0e\u7ec4\u5408\u7535\u8def\u4e4b\u95f4\u6709\u4e00\u4e2a\u53cd\u9988\u56de\u8def\u3002\u56e0\u6b64\uff0c\u89e6\u53d1\u5668\u7684\u6570\u636e\u8f93\u5165\u90e8\u5206\u6765\u81ea\u5b83\u81ea\u8eab\u6216\u8005\u5176\u4ed6\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u3002\u5f53\u6211\u4eec\u7528\u9501\u5b58\u5668\u6784\u5efa\u89e6\u53d1\u5668\u65f6\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u7531\u4e8e\u9501\u5b58\u5668\u95f4\u7684\u76f8\u4e92\u8fde\u63a5(\u67d0\u4e2a\u9501\u5b58\u5668\u7684\u8f93\u51fa\\(\\overline{Q}\\)\u53ef\u80fd\u662f\u53e6\u4e00\u4e2a\u9501\u5b58\u5668\u7684\u8f93\u5165\\(D\\))\uff0c\u5f53\u63a7\u5236\u8f93\u5165\\(C = 1\\)\u65f6\uff0c\u5c31\u4f1a\u53d1\u73b0\u9501\u5b58\u5668\u7684\u72b6\u6001\u5c06\u4f1a==\u4e0d\u65ad\u6539\u53d8==\uff0c\u800c\u4e0d\u662f\u53ea\u6539\u53d81\u6b21\uff0c\u76f4\u5230\\(C = 0\\)\u65f6\u624d\u505c\u6b62\u53d8\u5316\u3002\u6240\u4ee5\uff0c\u5f53\u6240\u6709\u9501\u5b58\u5668\u7531\u4e00\u4e2a\u5171\u540c\u7684\u65f6\u949f\u4fe1\u53f7\u89e6\u53d1\u65f6\uff0c\u4e0d\u80fd\u5c06\u5b83\u4eec\u76f4\u63a5\u76f8\u4e92\u8fde\u63a5\u3002\u4e4b\u6240\u4ee5\u4f1a\u53d1\u751f\u8fd9\u4e2a\u95ee\u9898\uff0c\u6b63\u662f\u56e0\u4e3a\u9501\u5b58\u5668\u900f\u660e\u7684\u6027\u8d28\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u963b\u6b62\u900f\u660e\u5e26\u6765\u7684\u95ee\u9898\uff1a\u5728\u89e6\u53d1\u5668\u5185\uff0c\u5728\u4e00\u4e2a\u8f93\u51fa\u6539\u53d8\u4e4b\u524d\uff0c\u8f93\u5165\u4e0e\u8f93\u51fa\u95f4\u7684\u901a\u8def\u5e94\u5f53\u65ad\u5f00\u3002\u67092\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a</p> <ul> <li>\u8109\u51b2\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668(pulse-triggered flip-flop)\uff1a<ul> <li>\u5f53\u6709\u65f6\u949f\u8109\u51b2\u65f6\uff0c\u89e6\u53d1\u5668\u7684\u8f93\u5165\u53ef\u4ee5\u63a7\u5236\u5b83\u7684\u72b6\u6001(\u4fee\u6539\u7b2c1\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u4fdd\u6301\u7b2c2\u4e2a\u9501\u5b58\u5668\u7684\u503c)</li> <li>\u5f53\u6ca1\u6709\u65f6\u949f\u8109\u51b2\u65f6\uff0c\u89e6\u53d1\u5668\u4fdd\u6301\u72b6\u6001(\u6539\u53d8\u7b2c2\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u4fdd\u6301\u7b2c1\u4e2a\u9501\u5b58\u5668\u7684\u503c)</li> </ul> </li> <li>\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668(edge-triggered flip-flop)\uff1a<ul> <li>\u53ea\u6709\u5f53\u65f6\u949f\u8109\u51b2\u53d1\u751f0-1\u6216\u80051-0\u7684\u8f6c\u53d8\u65f6\uff0c\u89e6\u53d1\u5668\u88ab\u89e6\u53d1</li> <li>\u5728\u5176\u4ed6\u4efb\u4f55\u65f6\u95f4\u5185\uff0c\u89e6\u53d1\u5668\u7684\u72b6\u6001\u5c06\u4fdd\u6301\u4e0d\u53d8(\u65e0\u8bba\u662f\u5426\u6709\u8109\u51b2)\u3002 <p>\u663e\u7136\uff0c\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668\u901f\u5ea6\u66f4\u5feb\uff0c\u800c\u4e14\u5b83\u7684\u8bbe\u8ba1\u9650\u5236\u66f4\u5c11\uff0c\u56e0\u6b64\u5c31\u66f4\u5e38\u7528</p> </li> </ul> </li> </ul>"},{"location":"notebooks/dld/4/#pulse-triggered-flip-flop","title":"Pulse-Triggered Flip-Flop","text":"<p>\\(SR\\)\u4e3b\u4ece\u89e6\u53d1\u5668(\\(S-R\\) Master-Slave Flip-Flop)\uff1a\u5c06\u4e24\u4e2a\\(SR\\)\u9501\u5b58\u5668\u6784\u6210</p> <p>\u6ce8\u610f\u4e24\u4e2a\u9501\u5b58\u5668\u7684\u63a7\u5236\u8f93\u5165\u662f\u4e92\u8865\u7684\u5173\u7cfb</p> <p></p> <ul> <li>\u5f53\\(C = 1\\)\u65f6\uff0c\u89e6\u53d1\u5668\u4e2d\u7b2c\u4e00\u4e2a\u9501\u5b58\u5668\uff0c\u5373\u4e3b(master)\u9501\u5b58\u5668\u7684\u503c\u53ef\u4ee5\u6539\u53d8\uff0c\u4f46==\u65e0\u6cd5\u6539\u53d8\u7b2c\u4e8c\u4e2a\u9501\u5b58\u5668\u7684\u72b6\u6001==</li> <li>\u5f53\\(C = 0\\)\u65f6\uff0c\u89e6\u53d1\u5668\u4e2d\u7b2c\u4e8c\u4e2a\u9501\u5b58\u5668\uff0c\u5373\u4ece(slave)\u9501\u5b58\u5668\u5c06\u4e3b\u9501\u5b58\u5668\u7684\u8f93\u51fa\u4f5c\u4e3a\u8f93\u5165\uff0c\u4ea7\u751f\u76f8\u5e94\u7684\u8f93\u51fa\uff0c\u6b64\u65f6==\u4e3b\u9501\u5b58\u5668\u7684\u72b6\u6001\u4fdd\u6301\u4e0d\u53d8==</li> <li>\u56e0\u6b64\uff0c\u539f\u6765\u9501\u5b58\u5668\u4e2d\u8f93\u5165\u5230\u8f93\u51fa\u4e4b\u95f4\u7684\u6301\u7eed\u8fde\u63a5\uff0c\u88ab\u89e6\u53d1\u5668\u4e2d\u4ea4\u66ff\u7684\u65f6\u949f\u503c\u6253\u7834</li> </ul> <p>\u65f6\u5e8f\u56fe\uff1a </p> <ul> <li>\u53ef\u4ee5\u770b\u51fa\uff0c\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u53d8\u5316\u56e0\u4e3a\u8109\u51b2\u5bbd\u5ea6\u800c\u53d8\u6162\u3002</li> <li>\u5f53\u65f6\u949f\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\\(R\\)\u6216\\(S\\)\u76840-1-0 glitch(\u77ed\u6682\u8df3\u53d8\u52301)\u4f1a\u88ab\u4e3b\u9501\u5b58\u5668\u53d1\u73b0\uff0c\u56e0\u6b64\u4e3b\u9501\u5b58\u5668\u7684\u503c\u53d1\u751f\u610f\u5916\u7684\u6539\u53d8\uff0c\u800c\u8fd9\u4e2a\u5f02\u5e38\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5230\u4ece\u9501\u5b58\u5668\u4e2d\uff0c\u8fd9\u79cd\u884c\u4e3a\u88ab\u79f0\u4e3a 1\u2018s catching</li> </ul> <p>\u6709\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff1a + \u51cf\u5c11\u8f93\u5165\uff1a\\(D\\)\u4e3b\u4ece\u89e6\u53d1\u5668(D master-slave FF) + \u51cf\u5c11\u62bd\u6837\u7a97\u53e3\uff1a\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668(edge-triggered FF)</p>"},{"location":"notebooks/dld/4/#edge-triggered-flip-flop","title":"Edge-Triggered Flip-Flop","text":"<p>\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668(edge-triggered flip-flop) \u5ffd\u89c6\u5904\u5728\u7a33\u5b9a\u7535\u5e73\u7684\u65f6\u949f\u8109\u51b2\uff0c\u4ec5\u5f53\u65f6\u949f\u4fe1\u53f7\u53d1\u751f\u8f6c\u53d8\u65f6\u800c\u88ab\u89e6\u53d1\u3002</p> <p>\\(D\\)\u4e3b\u4ece\u89e6\u53d1\u5668(\\(D\\) Master-Slave Flip-flop)</p> <p></p> <p>\u6ce8\uff1a\u5c06\u4e3b\u9501\u5b58\u5668\u6362\u6210\u4e86D\u9501\u5b58\u5668\uff0c\u5176\u4f59\u90e8\u5206\u4e0d\u53d8</p> <p>\\(D\\)\u4e3b\u4ece\u89e6\u53d1\u5668\u53ef\u4ee5\u907f\u514d\u4e0a\u8ff01s-catching\u884c\u4e3a\u3002\u5b83\u8f93\u51fa\u7684\u6539\u53d8\u4e0e\u8109\u51b2\u7ed3\u675f\u65f6\u7684\u4e0b\u964d\u6cbf(negative edge) \u6709\u5173\uff0c\u56e0\u6b64\u5b83\u53c8\u88ab\u79f0\u4e3a\u4e0b\u964d\u6cbf\u89e6\u53d1\u7684\u89e6\u53d1\u5668(negative-level triggered flip-flop)\uff0c\u53731-0\u7684\u8f6c\u53d8\u4f1a\u89e6\u53d1\u89e6\u53d1\u5668</p> <p>\u4e0a\u5347\u6cbf\u89e6\u53d1\u7684\\(D\\)\u89e6\u53d1\u5668(Positive-Edge-Triggered \\(D\\) Flip-flop)</p> <p></p> <p>\u8fd9\u79cd\u89e6\u53d1\u5668\u57280-1\u7684\u8f6c\u53d8\uff0c\u5373\u4e0a\u5347\u6cbf(positive edge) \u5904\u4f1a\u89e6\u53d1\u89e6\u53d1\u5668\u3002\u5b83\u4e5f\u662f\u4e00\u79cd\u4e3b\u4ece\u89e6\u53d1\u5668\u3002\u4e0e\u4e0a\u9762\u7684\u89e6\u53d1\u5668\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u7684\u65f6\u949f\u8f93\u5165\u4e0a\u591a\u4e86\u4e2a\u975e\u95e8\uff0c\u56e0\u6b64\uff1a + \u5f53\u65f6\u949f\u8f93\u5165\\(C = 0\\)\u65f6\uff0c\u4e3b\u9501\u5b58\u5668\u5904\u4e8e\u4f7f\u80fd\u72b6\u6001\u5e76\u4e14\u662f\u900f\u660e\u7684\uff0c\u56e0\u6b64\u80fd\u591f\u63a5\u53d7\\(D\\)\u7684\u8f93\u5165\uff1b\u800c\u4ece\u9501\u5b58\u5668\u5c31\u88ab\u7981\u7528\u4e86\uff0c\u5e76\u4fdd\u6301\u4e4b\u524d\u7684\u72b6\u6001 + \u5f53==\u4e0a\u5347\u6cbf==\u51fa\u73b0\u65f6\uff0c\\(C\\)\u5f00\u59cb\u53d8\u62101\uff0c\u8fd9\u65f6\u4e3b\u9501\u5b58\u5668\u88ab\u7981\u7528\u4e86\uff0c\u5b83\u7684\u503c\u88ab\u56fa\u5b9a\u4e86\uff1b\u800c\u4ece\u9501\u5b58\u5668\u5c31\u62f7\u8d1d\u4e86\u4e3b\u9501\u5b58\u5668\u7684\u72b6\u6001 + \u5f53\u4fdd\u6301\\(C = 1\\)\u65f6\uff0c\u7531\u4e8e\u4e3b\u9501\u5b58\u5668\u88ab\u7981\u7528\uff0c\u56e0\u6b64\u4e24\u4e2a\u9501\u5b58\u5668\u7684\u72b6\u6001\u5747\u4fdd\u6301\u4e0d\u53d8 + \u5f53==\u4e0b\u964d\u6cbf==\u5904\u663e\u793a\uff0c\\(C\\)\u5f00\u59cb\u53d8\u62100\uff0c\u4e3b\u9501\u5b58\u5668\u6062\u590d\u4f7f\u80fd\uff0c\u800c\u4ece\u9501\u5b58\u5668\u88ab\u7981\u7528\u4e86\uff0c\u56e0\u6b64\u4ece\u9501\u5b58\u5668\u4ecd\u7136\u4fdd\u5b58\u4e4b\u524d\u7684\u72b6\u6001 \u6240\u4ee5\u8bf4\u8fd9\u4e2a\u89e6\u53d1\u5668\u662f\u7531\u4e0a\u5347\u6cbf\u89e6\u53d1\u7684</p> <p>\u4e0b\u56fe\u662f\u8be5\u89e6\u53d1\u5668\u95e8\u7ea7\u7535\u8def\u7ed3\u6784\u56fe </p> <p>\u901a\u5e38\uff0c\u7535\u8def\u4e2d\u6240\u6709\u7684\u89e6\u53d1\u5668\u90fd\u4f1a\u91c7\u7528\u540c\u4e00\u79cd\u7c7b\u578b\u7684\u3002\u5982\u679c\u91c7\u7528\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5c31\u8981\u8003\u8651\u91c7\u7528\u4e0d\u540c\u7684\u65f6\u949f\u8109\u51b2\uff0c\u786e\u4fdd\u6240\u6709\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u80fd\u591f\u540c\u65f6\u6539\u53d8\uff0c\u4ece\u800c\u6b63\u5e38\u8fd0\u884c\u3002\u540e\u9762\u7684\u7ae0\u8282\u82e5\u4e0d\u505a\u7279\u6b8a\u8bf4\u660e\uff0c\u5747\u91c7\u7528\u540c\u4e00\u7c7b\u578b\u7684\u89e6\u53d1\u5668</p> <p>\u6ce8\u610f\u5230\\(D\\)\u89e6\u53d1\u5668==\u6ca1\u6709\u4fdd\u6301\u72b6\u6001==\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\uff1a + \u65f6\u949f\u95e8\u63a7(clock gating)\uff1a\u7981\u7528\u8f93\u5165\\(C\\)\u7684\u65f6\u949f\u8109\u51b2\u3002\u867d\u7136\u8282\u7701\u6210\u672c\uff0c\u4f46\u4f1a\u5ef6\u8fdf\u65f6\u949f\u8109\u51b2\u3002\u8fd9\u79cd\u5ef6\u8fdf\u88ab\u79f0\u4e3a\u65f6\u949f\u504f\u5dee(clock skew)\u3002\u56e0\u6b64\u907f\u514d\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5 + \u4fdd\u6301\u65f6\u949f\u8109\u51b2\u4e0d\u53d7\u5e72\u6270\uff0c\u5e76\u4f7f\u7528\u591a\u8def\u9009\u62e9\u5668\uff0c\u5c06\u8f93\u51fa\u8fde\u63a5\u5230\u8f93\u5165\\(D\\)</p>"},{"location":"notebooks/dld/4/#standard-graphics-symbols","title":"Standard Graphics Symbols","text":"<p>\u6ce8\uff1a + \u8f93\u5165\u6216\u8f93\u51fa\u5f15\u811a\u5904\u7684\u5708\u8868\u793a\u53d6\u8865 + \u7b2c\u4e8c\u884c\u4e2d\uff0c\u7b2c1\u30013\u4e2a\u89e6\u53d1\u5668\u540d\u79f0\u5de6\u8fb9\u7684\u8bb0\u53f7\u8868\u793a\u6b63\u8109\u51b2\uff0c\u7b2c2\u30014\u4e2a\u89e6\u53d1\u5668\u7684\u8bb0\u53f7\u8868\u793a\u8d1f\u8109\u51b2 + \u7b2c\u4e09\u884c\u4e2d\uff0c\u7b2c1\u4e2a\u89e6\u53d1\u5668\u540d\u79f0\u5de6\u8fb9\u7684\u8bb0\u53f7\u8868\u793a\u4e0a\u5347\u6cbf\uff0c\u7b2c2\u4e2a\u89e6\u53d1\u5668\u7684\u8bb0\u53f7\u8868\u793a\u4e0b\u964d\u6cbf + \u7b2c\u4e8c\u884c\u7684\u8f93\u51fa\u5f15\u811a\u65c1\u8fb9\u6709\\(\\daleth\\)\u8bb0\u53f7\uff0c\u5b83\u662f\u5ef6\u8fdf\u8f93\u51fa\u6807\u8bc6\u7b26(postponed output indicator)\uff0c\u8868\u793a\u8f93\u51fa\u5c06\u4f1a\u5728\u8109\u51b2\u7ed3\u675f\u540e\u6539\u53d8 + \u7b2c\u4e09\u884c\u7684\u8f93\u51fa\u5f15\u811a\u65c1\u8fb9\u6709\\(\\vartriangleright\\)\u8bb0\u53f7\uff0c\u5b83\u662f\u52a8\u6001(\u8f93\u5165)\u6807\u8bc6\u7b26(dynamic input)\uff0c\u8868\u793a\u89e6\u53d1\u5668\u54cd\u5e94\u7684\u662f\u65f6\u949f\u8109\u51b2\u7684\u8f6c\u53d8</p>"},{"location":"notebooks/dld/4/#direct-inputs","title":"Direct Inputs","text":"<p>\u89e6\u53d1\u5668\u901a\u5e38\u63d0\u4f9b\u7279\u6b8a\u7684\u8f93\u5165\uff0c\u7528\u4e8e\u5f02\u6b65\u7684\u7f6e\u4f4d\u548c\u590d\u4f4d(\u522b\u5fd8\u8bb0==\u89e6\u53d1\u5668\u662f\u540c\u6b65\u65f6\u5e8f\u7535\u8def==) + \u76f4\u63a5\u8f93\u5165/\u9884\u7f6e(direct input/preset)\uff1a\u7528\u4e8e\u5f02\u6b65\u7f6e\u4f4dS\u7684\u8f93\u5165 + \u76f4\u63a5\u590d\u4f4d/\u6e05\u7a7a(direct output/clear)\uff1a\u7528\u4e8e\u5f02\u6b65\u590d\u4f4dR\u7684\u8f93\u5165 \u5982\u679c\u6ca1\u6709\u8fd9\u4e9b\u8f93\u5165\uff0c\u89e6\u53d1\u5668\u5728\u521a\u901a\u7535\u65f6\u7684\u72b6\u6001\u662f\u4efb\u610f\u7684\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u8fd9\u4e9b\u76f4\u63a5\u8f93\u5165\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u524d==\u521d\u59cb\u5316==\u89e6\u53d1\u5668\u7684\u72b6\u6001\uff0c\u4ece\u800c\u4f7f\u89e6\u53d1\u5668\u5728\u901a\u7535\u540e\u80fd\u591f\u6b63\u5e38\u8fd0\u884c</p> <p></p> <p>\u6ce8\uff1a + \u63a7\u5236\u8f93\u5165\u88ab\u6807\u8bb0\u4e3a\\(Cn\\)\uff0c\u8868\u793a\u5b83\u53ef\u4ee5\u63a7\u5236\u6807\u8bb0\u4e3a\\(nD\\)\u7684\u6570\u636e\u8f93\u5165 + \u6ca1\u6709\u6807\u4e0a\u6570\u5b57\u7684\\(S, R\\)\u8868\u660e\u5b83\u4eec\u4e0d\u53d7\u63a7\u5236\u8f93\u5165\u63a7\u5236\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u4eec\u662f\u4f4e\u7535\u5e73\u6d3b\u8dc3\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u884c\u4e3a\u7c7b\u4f3c \\(\\overline{SR}\\)\u9501\u5b58\u5668(\u5f02\u6b65\u65f6\u5e8f\u7535\u8def) + \u51fd\u6570\u8868\u4e2d\u7684\\(\\uparrow\\)\u8868\u793a\\(C\\)\u5904\u4e8e\u4e0a\u5347\u6cbf</p>"},{"location":"notebooks/dld/4/#flip-flop-timing","title":"Flip-Flop Timing","text":"<ul> <li>\u5efa\u7acb\u65f6\u95f4(setup time)\\(t_s\\)\uff1a\u5728\u65f6\u949f\u8f6c\u53d8\u53d1\u751f\u524d\uff0c\u8f93\u5165\\(S, R\\)\u6216\\(D\\)\u5fc5\u987b\u4fdd\u6301\u7a33\u5b9a\u72b6\u6001\u7684\u6700\u5c0f\u65f6\u95f4\uff0c\u8fd9\u6837\u6570\u636e\u624d\u80fd\u6210\u529f\u88ab\u5b58\u5165\u89e6\u53d1\u5668\u5185<ul> <li>\u8109\u51b2\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668\uff1a\u7b49\u4e8e\u65f6\u949f\u8109\u51b2\u5bbd\u5ea6</li> <li>\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668\uff1a\u901a\u5e38\u6bd4\u65f6\u949f\u8109\u51b2\u5bbd\u5ea6\u5c0f\u5f97\u591a\uff0c\u56e0\u6b64\u5b83\u7684\u901f\u5ea6\u66f4\u5feb</li> </ul> </li> <li>\u4fdd\u6301\u65f6\u95f4(hold time)\\(t_h\\)\uff1a\u5728\u65f6\u949f\u8f6c\u53d8\u53d1\u751f\u540e\uff0c\u8f93\u5165\\(S, R\\)\u6216\\(D\\)\u5fc5\u987b\u4fdd\u6301\u7a33\u5b9a\u72b6\u6001\u7684\u6700\u5c0f\u65f6\u95f4\uff0c\u8fd9\u6837\u6570\u636e\u624d\u80fd\u53ef\u9760\u5730\u88ab\u65f6\u949f\u91c7\u6837</li> </ul> <p>\u6ce8\uff1a\u56e0\u6b64\u5728\\(t_s\\)\u548c\\(t_w\\)\u7684\u65f6\u95f4\u6bb5\u5185\uff0c\u6211\u4eec\u4e0d\u80fd\u6539\u53d8\u89e6\u53d1\u5668\u7684\u8f93\u5165\uff01</p> <ul> <li>\u65f6\u949f\u8109\u51b2\u5bbd\u5ea6(clock pulse width)\\(t_w\\)\uff1a\u786e\u4fdd\u4e3b\u9501\u5b58\u5668\u80fd\u591f\u6709\u8db3\u591f\u65f6\u95f4\u6b63\u786e\u83b7\u53d6\u8f93\u5165</li> <li>\u4f20\u64ad\u5ef6\u8fdf(propogation delay)\\(t_{p-}\\)\uff1a\u4e0e\u95e8\u7535\u8def\u4e2d\u7684\u540c\u540d\u53c2\u6570\u7c7b\u4f3c\uff0c\u4f46\u5b83\u6d4b\u91cf\u4ece\u89e6\u53d1\u65f6\u949f\u8fb9\u6cbf\u5230\u8f93\u51fa\u7a33\u5b9a\u4e4b\u95f4\u7684\u65f6\u95f4\u3002\u56e0\u4e3a\u89e6\u53d1\u5668\u8f93\u51fa\u7684\u6539\u53d8\u5c06\u4f1a\u88ab\u89e6\u53d1\u5668\u8f93\u5165\u7684\u63a7\u5236\u5206\u5f00\uff0c\u56e0\u6b64==\u6700\u5c0f\u4f20\u64ad\u5ef6\u8fdf\u5e94\u5f53\u957f\u4e8e\u4fdd\u6301\u65f6\u95f4==<ul> <li>\\(t_{PHL}\\)\uff1a\u9ad8\u7535\u5e73\\(\\rightarrow\\)\u4f4e\u7535\u5e73</li> <li>\\(t_{PLH}\\)\uff1a\u4f4e\u7535\u5e73\\(\\rightarrow\\)\u9ad8\u7535\u5e73</li> <li>\\(t_{pd} = \\max(t_{PHL}, t_{PLH})\\)</li> </ul> </li> </ul> <p></p> <p>\u6ce8\uff1a\u9634\u5f71\u90e8\u5206\u8868\u793a\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u6570\u636e\u7684\u65f6\u95f4\u6bb5</p> <p>\u5efa\u7acb-\u4fdd\u6301 \u7a97\u53e3(setup-hold-window)\uff1a\u5efa\u7acb\u65f6\u95f4\u548c\u4fdd\u6301\u65f6\u95f4\u7684\u7edf\u79f0\uff0c\u6570\u636e\u5728\u8fd9\u5757\u533a\u57df\u8981\u4fdd\u6301\u7a33\u5b9a</p> <ul> <li>\u65e0\u5efa\u7acb\u65f6\u95f4\u51b2\u7a81(no setup time violation)\uff1a\u5728\u65f6\u949f\u7684\u4e0a\u5347\u6cbf\u4e4b\u524d\uff0c\u8f93\u5165\u6570\u636e\u65e9\u4e8e\u5efa\u7acb\u65f6\u95f4\u62b5\u8fbe\uff0c\u5982\u5de6\u56fe\u6240\u793a</li> <li>\u5efa\u7acb\u65f6\u95f4\u51b2\u7a81(setup time violation)\uff1a\u8f93\u5165\u6570\u636e\u5728\u5efa\u7acb\u65f6\u95f4\u7a97\u53e3\u671f\u95f4\u62b5\u8fbe\uff0c\u6b64\u65f6\u8f93\u51fa\u6570\u636e\u5c06\u4f1a\u5728\u4e00\u6bb5\u968f\u673a\u7684\u65f6\u95f4\u5185\u5904\u4e8e\u672a\u5b9a\u4e49\u7684\u72b6\u6001(0, 1\u6216\u4e4b\u95f4\u7684\u4efb\u4f55\u6570)\uff0c\u76f4\u5230\u786e\u5b9a\u4e3a0\u62161\uff0c\u5982\u53f3\u56fe\u6240\u793a </li> </ul> <p>\u603b\u7ed3\uff1a </p>"},{"location":"notebooks/dld/4/#sequential-circuits-analysis","title":"Sequential Circuits Analysis","text":"<p>\u901a\u7528\u6a21\u578b\uff1a + time(t)\u65f6\u523b\u7684\u5f53\u524d\u72b6\u6001\u88ab\u5b58\u50a8\u5728\u4e00\u7ec4\u89e6\u53d1\u5668\u4e2d + time(t)\u65f6\u523b\u7684\u4e0b\u4e00\u72b6\u6001\u7684\u8f93\u5165\uff0c\u662f\u5173\u4e8e\u5f53\u524d\u72b6\u6001(t)\u548c(\u6709\u65f6)\u8f93\u5165(t)\u7684\u5e03\u5c14\u51fd\u6570 + time(t+1)\u65f6\u523b\u7684\u4e0b\u4e00\u72b6\u6001\u662f\u4e0b\u4e00\u72b6\u6001\u8f93\u5165(t)\u7684\u5e03\u5c14\u51fd\u6570 + time(t)\u65f6\u523b\u7684\u8f93\u51fa\uff0c\u4e5f\u662f\u5173\u4e8e\u5f53\u524d\u72b6\u6001(t)\u548c(\u6709\u65f6)\u8f93\u5165(t)\u7684\u5e03\u5c14\u51fd\u6570 </p> <p>\u65f6\u5e8f\u7535\u8def\u7684\u5206\u6790\u662f\u6307\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u65f6\u5e8f\u7535\u8def\uff0c\u8bf4\u660e\u5bf9\u5e94\u7684\u903b\u8f91\u56fe\u7684\u8fc7\u7a0b\u3002\u5b83\u5305\u62ec\uff1a + \u4ece\u72b6\u6001\u8868(state table)\u3001\u72b6\u6001\u56fe(state diagram) \u548c\u8f93\u5165\u3001\u8f93\u51fa\u5e03\u5c14\u65b9\u7a0b\u4e2d\u5f97\u5230\u65f6\u5e8f\u7535\u8def\u7684\u529f\u80fd + \u627e\u5230\u65f6\u95f4\u9650\u5236\uff0c\u4f7f\u5f97\u65f6\u5e8f\u7535\u8def\u80fd\u591f\u907f\u514d\u4e9a\u7a33\u6001\uff0c\u4ece\u800c\u4f7f\u7535\u8def\u8fd0\u884c\u65e0\u8bef</p> <p>\u6b65\u9aa4\uff1a 1. \u5f97\u5230\u8f93\u5165\u3001\u4e0b\u4e00\u72b6\u6001\u4ee5\u53ca\u8f93\u51fa\u7684==\u65b9\u7a0b== 2. \u5f97\u5230\u72b6\u6001\u8868\uff08\u5e26\u6709\u72b6\u6001\u7684\u771f\u503c\u8868\uff09\uff1a     + \u8f93\u5165\uff1a\u7535\u8def\u8f93\u5165\uff0c\u89e6\u53d1\u5668\u7684\u5f53\u524d\u72b6\u6001     + \u8f93\u51fa\uff1a\u7535\u8def\u8f93\u51fa\uff0c\u89e6\u53d1\u5668\u7684\u4e0b\u4e00\u72b6\u6001 3. \u5217\u51fa\u65f6\u5e8f\u7535\u8def\u7684\u4e0b\u4e00\u72b6\u6001 4. \u5f97\u5230\u72b6\u6001\u56fe 5. \u5206\u6790\u7535\u8def\u6027\u80fd 6. \u9a8c\u8bc1\u7535\u8def\u6b63\u786e\u6027\uff0c\u68c0\u67e5\u81ea\u6211\u6062\u590d\u80fd\u529b(self-recovery capability)\uff0c\u753b\u51fa\u65f6\u95f4\u53c2\u6570</p> <p>\ud83c\udf30\uff1b </p>"},{"location":"notebooks/dld/4/#input-equations","title":"Input Equations","text":"<p>\u89e6\u53d1\u5668\u7684\u8f93\u5165\u65b9\u7a0b\uff1a\u7528D\u8868\u793a\u89e6\u53d1\u5668\u7684\u8f93\u5165\uff0c\u7528\u4e0b\u6807\u8868\u793a\u7279\u5b9a\u7684\u89e6\u53d1\u5668\u7684\u8f93\u51fa</p>"},{"location":"notebooks/dld/4/#state-tables","title":"State Tables","text":"<p>\u72b6\u6001\u8868(state table) \u662f\u4e00\u4e2a\u5305\u542b\u591a\u53d8\u91cf\u7684\u8868\u683c\uff0c\u5206\u4e3a\u4ee5\u4e0b4\u4e2a\u90e8\u5206\uff1a + \u8f93\u5165\uff1at\u65f6\u523b\u7684\u8f93\u5165\u7ec4\u5408 + \u5f53\u524d\u72b6\u6001\uff1at\u65f6\u523b\u7684\u72b6\u6001\u503c + \u4e0b\u4e00\u72b6\u6001\uff1at+1\u65f6\u523b(\u5373\u4e0b\u4e00\u65f6\u523b)\u7684\u72b6\u6001\u503c(\u57fa\u4e8e\u5f53\u524d\u72b6\u6001\u548c\u8f93\u5165) + \u8f93\u51fa\uff1at\u65f6\u523b\u7684\u8f93\u51fa\u503c\uff0c\u5373\u5173\u4e8e\u5f53\u524d\u72b6\u6001\u548c(\u6709\u65f6)\u8f93\u5165\u7684\u51fd\u6570</p> <p>\u6ce8\uff1a\u4ece\u771f\u503c\u8868\u7684\u89d2\u5ea6\u770b\uff0c==\u8f93\u5165==\u4e3a\u8f93\u5165\u548c\u5f53\u524d\u72b6\u6001\uff0c==\u8f93\u51fa==\u4e3a\u8f93\u51fa\u548c\u4e0b\u4e00\u72b6\u6001</p> <p>\ud83c\udf30(\u63a5\u7740\u4e0a\u9762\u7684\u4f8b\u5b50) \u6211\u4eec\u4ece\u8f93\u5165\u3001\u4e0b\u4e00\u72b6\u6001\u3001\u8f93\u51fa\u65b9\u7a0b\u4e2d\u5f97\u5230\u4ee5\u4e0b\u72b6\u6001\u8868\uff1b </p> <p>\u6ce8\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u5177\u6709m\u4e2a\u89e6\u53d1\u5668\u548cn\u4e2a\u8f93\u5165\u7684\u65f6\u5e8f\u7535\u8def\uff0c\u5b83\u7684\u72b6\u6001\u8868\u4e00\u5171\u6709\\(2^{m+n}\\)\u884c\u3002\u4e0b\u4e00\u72b6\u6001\u5171\u6709m\u5217</p> <p>\u72b6\u6001\u8868\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\u2014\u2014\u4e8c\u7ef4\u8868\u3002\u5b83\u80fd\u591f\u8f83\u597d\u5730\u5339\u914dK-map\uff0c\u53ef\u4ee5\u770b\u5230\u8868\u683c\u4e2d\u7684\u5f53\u524d\u72b6\u6001\u662f\u6309\u7167\u683c\u96f7\u7801\u987a\u5e8f\u6392\u5217\u7684\uff1a </p>"},{"location":"notebooks/dld/4/#state-diagrams","title":"State Diagrams","text":"<p>\u65f6\u5e8f\u7535\u8def\u7684\u529f\u80fd\u8fd8\u53ef\u4ee5\u7528\u72b6\u6001\u56fe(state diagram) \u8868\u793a\uff0c\u5b83\u5305\u542b\uff1a + \u7528\u5706\u5708\u8868\u793a==\u72b6\u6001==\uff0c\u5706\u5708\u5185\u90e8\u5199\u6709\u5f53\u524d\u72b6\u6001\u7684\u540d\u79f0 + \u7528\u6709\u5411\u8fb9\u8868\u793a\u4ece\u5f53\u524d\u72b6\u6001\u5230\u4e0b\u4e00\u72b6\u6001\u7684==\u72b6\u6001\u8fc7\u6e21(state transition)== + \u6709\u5411\u8fb9\u4e0a\u7684\u6807\u7b7e\u8868\u793a\u5bfc\u81f4\u67d0\u79cd\u72b6\u6001\u8fc7\u6e21==\u8f93\u5165== + \u5bf9\u4e8e\u8f93\u51fa\u7684\u6807\u7b7e     + \u7c73\u91cc\u578b(Mealy type)\uff1a\u5f53\u8f93\u51fa\u4f9d\u8d56\u4e8e\u72b6\u6001\u548c\u8f93\u5165\u65f6\uff0c\u8f93\u51fa\u5199\u5728\u6709\u5411\u8fb9\u4e0a\uff08\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6807\u7b7e\u7528\u659c\u6760(/)\u533a\u5206\uff09     + \u6469\u5c14\u578b(Moore type)\uff1a\u5f53\u8f93\u51fa\u4ec5\u4f9d\u8d56\u4e8e\u72b6\u6001\u65f6\uff0c\u8f93\u51fa\u5199\u5728\u5708\u5185 </p> <p>\ud83c\udf30(\u8fd8\u662f\u63a5\u7740\u4e4b\u524d\u7684\u4f8b\u5b50) \u4ece\u4e8c\u7ef4\u7684\u72b6\u6001\u8868\u4e2d\u5f97\u5230\u72b6\u6001\u56fe\uff1a </p> <p>[!note] \u6bd4\u8f83\u72b6\u6001\u8868\u548c\u72b6\u6001\u56fe\uff1a + \u72b6\u6001\u8868\uff1a\u66f4\u5bb9\u6613\u4ece\u903b\u8f91\u56fe\u548c\u8f93\u5165\u65b9\u7a0b\u4e2d\u5f97\u5230 + \u72b6\u6001\u56fe\uff1a\u66f4\u5f62\u8c61\u5730\u5c55\u73b0\u72b6\u6001\u8fc7\u6e21\u7684\u8fc7\u7a0b\uff0c\u65b9\u4fbf\u4eba\u4eec\u7406\u89e3\u7535\u8def\u7684\u8fd0\u4f5c\u65b9\u5f0f</p>"},{"location":"notebooks/dld/4/#equivalent-states","title":"Equivalent States","text":"<p>\u5982\u679c\u67d0\u4e24\u4e2a\u72b6\u6001\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u80fd\u7684\u8f93\u5165\uff0c\u90fd\u5f97\u5230\u76f8\u540c\u7684\u8f93\u51fa(\u5305\u62ec\u4e0b\u4e00\u72b6\u6001)\uff0c\u5219\u79f0\u8fd9\u4e24\u4e2a\u72b6\u6001\u662f\u7b49\u4ef7\u7684(equivalent)\u3002\u7b49\u4ef7\u7684\u4e24\u4e2a\u72b6\u6001\u53ef\u4ee5\u8fdb\u884c\u5408\u5e76\uff0c\u8fbe\u5230\u5316\u7b80\u7684\u76ee\u7684\u3002</p> <p>\u6ce8\uff1a\u72b6\u6001\u7684\u51cf\u5c11\u4e0d\u4e00\u5b9a\u51cf\u5c11\u6210\u672c\uff0c\u56e0\u4e3a\u95e8\u6210\u672c\u53d6\u51b3\u4e8e\u7ec4\u5408\u903b\u8f91\u7535\u8def\u548c\u89e6\u53d1\u5668\u7684\u603b\u6210\u672c\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5408\u5e76\u7b49\u4ef7\u7684\u72b6\u6001\u4e3a\u8bbe\u8ba1\u3001\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u5e26\u6765\u5185\u5728\u7684\u597d\u5904</p> <p>\ud83c\udf30(\u63a5\u7740\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5708\u5185\u7684\u6570\u5b57\u7528\u5b57\u6bcd\u7f16\u53f7\u8868\u793a)  \u89c2\u5bdfS2\u548cS3\uff0c\u5f53\u5b83\u4eec\u7684\u8f93\u5165\u76f8\u540c\u65f6\uff0c\u4e0b\u4e00\u72b6\u6001\u548c\u8f93\u51fa\u5747\u76f8\u540c + \u8f93\u51650\uff0c\u4e0b\u4e00\u72b6\u6001\u4e3aS0\uff0c\u8f93\u51fa\u4e3a1 + \u8f93\u51651\uff0c\u4e0b\u4e00\u72b6\u6001\u4e3aS2\uff0c\u8f93\u51fa\u4e3a0 \u6240\u4ee5\uff0cS2\u548cS3\u662f\u7b49\u4ef7\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u72b6\u6001\u56fe\u8fdb\u884c\u5316\u7b80\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a  \u5bf9\u4e8e\u8fd9\u5f20\u65b0\u7684\u72b6\u6001\u56fe\uff0c\u6211\u4eec\u89c2\u5bdfS1\u548cS2\uff0c\u53d1\u73b0\u5b83\u4eec\u4e5f\u662f\u7b49\u4ef7\u7684\uff0c\u56e0\u4e3a\uff1a + \u8f93\u51650\uff0c\u4e0b\u4e00\u72b6\u6001\u4e3aS0\uff0c\u8f93\u51fa\u4e3a1 + \u8f93\u51651\uff0c\u4e0b\u4e00\u72b6\u6001\u4e3aS2\uff0c\u8f93\u51fa\u4e3a0 \u6240\u4ee5\u6211\u4eec\u53c8\u53ef\u4ee5\u5bf9\u72b6\u6001\u56fe\u5316\u7b80\uff0c\u5f97\u5230\uff1a </p> <p>\u7b49\u4ef7\u72b6\u6001\u7684\u7c7b\u578b(\u524d\u63d0\uff1a\u5bf9\u4e8e\u6240\u6709\u8f93\u5165\uff0c\u8f93\u51fa\u90fd\u662f\u4e00\u6837\u7684)\uff1a + ==\u76f8\u540c==\u7684\u4e0b\u4e00\u72b6\u6001 + ==\u4ea4\u9519(interleaved)==\u7684\u4e0b\u4e00\u72b6\u6001 + ==\u5faa\u73af(circular)==\u7684\u4e0b\u4e00\u72b6\u6001</p> <p>\ud83c\udf30\uff1a 1. \u76f8\u540c\u7684\u4e0b\u4e00\u72b6\u6001 2. \u76f8\u540c\u6216\u4ea4\u9519\u7684\u4e0b\u4e00\u72b6\u6001 3. \u4ea4\u9519\u6216\u7b49\u4ef7(\\(S_k\\)\u548c\\(S_l\\)\u7b49\u4ef7)\u7684\u4e0b\u4e00\u72b6\u6001 4. \u4ea4\u9519\u3001\u7b49\u4ef7\u6216\u5faa\u73af\u7684\u4e0b\u4e00\u72b6\u6001</p>"},{"location":"notebooks/dld/4/#moore-and-mealy-models","title":"Moore and Mealy Models","text":"<ul> <li>\u6469\u5c14\u578b(Moore model)\uff1a\u8f93\u51fa\u662f\u4ec5\u5173\u4e8e\u72b6\u6001\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u5728\u72b6\u6001\u56fe\u4e2d\u4e0e\u72b6\u6001\u4e00\u8d77\u5199\u5728\u5708\u5185     </li> <li>\u7c73\u91cc\u578b(Mealy model)\uff1a\u8f93\u662f\u5173\u4e8e\u8f93\u5165\u548c\u72b6\u6001\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u5728\u72b6\u6001\u56fe\u4e2d\u4f4d\u4e8e\u72b6\u6001\u8fc7\u6e21\u7684\u5f27\u4e0a     </li> </ul>"},{"location":"notebooks/dld/4/#sequential-circuit-simulation","title":"Sequential Circuit Simulation","text":"<p>\u65f6\u5e8f\u7535\u8def\u7684\u4eff\u771f(\u6a21\u62df)\u9700\u8981\u8003\u8651\uff1a + \u8f93\u5165\u5e8f\u5217\u4e2d\u5fc5\u987b\u51fa\u73b0\u4e00\u7ec4\u7279\u5b9a\u7684\u6a21\u5f0f(pattern)\uff0c\u5305\u62ec\u968f\u65f6\u95f4\u5e94\u7528\u7684\u8f93\u5165\u6a21\u5f0f\u548c\u65f6\u949f\u8109\u51b2 + \u5f00\u59cb\u4eff\u771f\u524d\uff0c\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e2a\u786e\u5b9a\u7684\u72b6\u6001\uff0c\u5373\u590d\u4f4d\u4fe1\u53f7(reset signal) + \u901a\u8fc7\u89c2\u6d4b\u72b6\u6001\uff0c\u9a8c\u8bc1\u6b63\u786e\u6027\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u662f\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u72b6\u6001\u4fe1\u53f7\u6dfb\u52a0\u4e00\u4e2a\u8f93\u51fa(\u5c31\u50cf\u8c03\u8bd5C\u4ee3\u7801\u65f6\u6dfb\u52a0\u4e00\u4e9b<code>printf()</code>\u8bed\u53e5) + \u968f\u65f6\u95f4\u5e94\u7528\u7684\u8f93\u5165\u548c\u5bf9\u8f93\u51fa\u7684\u89c2\u5bdf\u4e0e\u6b63\u65f6\u949f\u8fb9\u6cbf\u6709\u5173     + \u529f\u80fd\u4eff\u771f(functional simulation)\uff1a\u9a8c\u8bc1\u7535\u8def\u7684\u529f\u80fd\uff0c\u5047\u8bbe\u7535\u8def\u5143\u4ef6\u6ca1\u6709\u5ef6\u8fdf\u6216\u5ef6\u8fdf\u5f88\u5c0f\u3002\u6709\u7684\u4eff\u771f\u5668\u4f7f\u7528\u4e00\u4e2a\u5f88\u5c0f\u7684\u5ef6\u8fdf\uff0c\u4ee5\u4fbf\u4e8e\u89c2\u6d4b\u4fe1\u53f7\u6539\u53d8\u7684\u987a\u5e8f\uff0c\u4f46\u5982\u679c\u8fd9\u4e2a\u5ef6\u8fdf\u4e0d\u591f\u5c0f\uff0c\u5c31\u4f1a\u5bfc\u81f4\u95ee\u9898     + \u65f6\u95f4\u4eff\u771f(timing simulation)\uff1a\u9a8c\u8bc1\u7535\u8def\u662f\u5426\u6b63\u5e38\u8fd0\u4f5c(\u8003\u8651\u65f6\u95f4)\uff0c\u6b64\u65f6\u8003\u8651\u7535\u8def\u5143\u4ef6\u7684\u5b9e\u9645\u5ef6\u8fdf</p> <p></p>"},{"location":"notebooks/dld/4/#timing-analysis-of-sequential-circuits","title":"Timing Analysis of Sequential Circuits","text":"<p>\u65f6\u5e8f\u7535\u8def\u7684\u65f6\u95f4\u5206\u6790\u7684\ud83c\udfaf\uff1a\u627e\u5230\u7535\u8def\u7684\u6700==\u5927==\u5ef6\u8fdf \\(\\rightarrow\\) \u6700==\u5927==\u65f6\u949f\u9891\u7387\\(f_{\\max}\\)(\u6216\u8005\u6700==\u5c0f==\u65f6\u949f\u5468\u671f\\(t_p\\))</p> <p>Why? \u5982\u679c\u65f6\u949f\u5468\u671f\u8fc7\u77ed\uff0c\u5728\u5efa\u7acb\u65f6\u95f4\u5f00\u59cb\u524d\uff0c\u4ece\u7535\u8def\u4f20\u5230\u89e6\u53d1\u5668\u7684\u6570\u636e\u53ef\u80fd\u6765\u4e0d\u53ca\u6539\u53d8</p> <p>\u65f6\u95f4\u9650\u5236\u7684\u7ec4\u6210\u90e8\u5206\uff1a + \\(t_p\\)\uff1a\u65f6\u949f\u5468\u671f\u2014\u20142\u6b21\u65f6\u949f\u8fb9\u6cbf\u53d1\u751f\u4e4b\u95f4\u7684\u95f4\u9694 + \\(t_{pd, FF}\\)\uff1a\u89e6\u53d1\u5668\u7684\u4f20\u64ad\u5ef6\u8fdf\u2014\u2014\u4ece\u5230\u8fbe\u65f6\u949f\u8fb9\u6cbf\uff0c\u5230\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u5f00\u59cb\u7a33\u5b9a\u4e4b\u95f4\u7684\u65f6\u95f4 + \\(t_{pd, COMB}\\)\uff1a\u7ec4\u5408\u903b\u8f91\u7684\u5ef6\u8fdf\u2014\u2014\u4ece\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u5230\u89e6\u53d1\u5668\u7684\u8f93\u5165\u4e4b\u95f4\u7684\u901a\u8def\u4e0a\uff0c\u7ec4\u5408\u903b\u8f91\u7684\u603b\u5ef6\u8fdf + \\(t_s\\)\uff1a\u89e6\u53d1\u5668\u7684\u5efa\u7acb\u65f6\u95f4\u2014\u2014\u5728\u65f6\u949f\u4e8b\u4ef6\u53d1\u751f\u524d\uff0c\u6570\u636e\u8f93\u5165\u5e94\u8be5\u4fdd\u6301\u7a33\u5b9a\u7684\u65f6\u95f4 + \\(t_{slack}\\)\uff0c\u65f6\u949f\u5468\u671f\u4e2d\u989d\u5916\u7684\u65f6\u95f4</p> <p>\u6ce8\uff1a + \u5176\u4e2d\uff0c\u4e2d\u95f43\u4e2a\u7684\u5ef6\u8fdf\u6765\u81ea\u7535\u8def\u901a\u8def + \u6ce8\u610f\u5230\u89e6\u53d1\u5668\u7684\u4fdd\u6301\u65f6\u95f4\\(t_h\\)\u5e76\u4e0d\u5728\u8ba8\u8bba\u8303\u56f4\u5185\uff0c\u4f46\u5b83\u548c\u5176\u4ed6\u60c5\u51b5\u7684\u65f6\u95f4\u9650\u5236\u65b9\u7a0b\u6709\u5173\uff1a   + \u8f93\u51fa\u6539\u53d8 \u5230\u8fbe \u4e00\u4e2a\u6216\u591a\u4e2a\u89e6\u53d1\u5668\u7684\u8f93\u5165\u7684\u901f\u5ea6 \u592a\u5feb   + \u5230\u8fbe\u4e00\u4e2a\u6216\u591a\u4e2a\u89e6\u53d1\u5668\u7684\u65f6\u949f\u4fe1\u53f7\u6709\u5ef6\u8fdf\uff0c\u79f0\u4e3a\u65f6\u949f\u504f\u5dee(clock skew)\uff0c\u8fd9\u4f1a\u5f71\u54cd\\(f_{\\max}\\)</p> <p>\u65f6\u5e8f\u7535\u8def\u7684\u65f6\u95f4\u901a\u8def(timing paths)\uff1a </p> <p>\u4e0b\u9762\u7684\u65f6\u5e8f\u56fe\u5c55\u793a\u4e86\u4ece\u89e6\u53d1\u5668\u5230\u89e6\u53d1\u5668\u4e4b\u95f4\u7684\u65f6\u95f4\u53c2\u6570\uff1a </p> <p>\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u65f6\u95f4\u65b9\u7a0b\uff1a $$ t_{pi} \\ge t_{slack} + (t_{pd, FF} + t_{pd, COMB} + t_s) $$ \u82e5\\(t_{slack} \\ge 0\\)\uff0c\u5219 $$ t_p \\ge \\max(t_{pd, FF} + t_{pd, COMB} + t_s) = t_{p, \\min} $$ \u8fd9\u5bf9\u4ece\u89e6\u53d1\u5668\u8f93\u51fa\u5230\u89e6\u53d1\u5668\u8f93\u5165\u95f4\u7684\u6240\u6709\u901a\u8def\u90fd\u662f\u9002\u7528\u7684</p> <p>\u6ce8\uff1a\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u7528\\(t_{PHL}\\)\u548c\\(t_{PLH}\\)\u6765\u4ee3\u66ff\\(t_{pd}\\)\uff0c\u4f7f\u65f6\u95f4\u5206\u6790\u66f4\u52a0\u51c6\u786e\uff0c\u4f46\u8fd9\u6837\u5c31\u9700\u8981\u989d\u5916\u8003\u8651\u901a\u8def\u7684\u9006\u5411\u3002\u56e0\u6b64\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u7edf\u4e00\u91c7\u7528\\(t_{pd}\\)</p> <p>\ud83c\udf30 1. \u5bf9\u4e0b\u5217\u7535\u8def\u8fdb\u884c\u65f6\u95f4\u5206\u6790\uff1a  \u5176\u4e2d\uff1a + \\(t_{pd, NOT} = 0.5ns\\) + \\(t_{pd, FF} = 2.0ns\\) + \\(t_{pd, XOR} = 2.0ns\\) + \\(t_s = 1.0ns\\) + \\(t_{pd, AND} = 1.0ns\\) + \\(t_h = 0.25ns\\)</p> <ol> <li>\u5916\u90e8\u8f93\u5165 \\(\\rightarrow\\) \u8f93\u51fa\u4e4b\u95f4\u7684\u6700\u5927\u5ef6\u8fdf\uff1a\\(t_{pd, XOR} + t_{pd, XOR} = 4.0ns\\)</li> <li>\u5916\u90e8\u8f93\u5165 \\(\\rightarrow\\) \u6b63\u8fb9\u6cbf\uff1a\\(t_{pd, XOR} + t_{pd, NOT} + t_s = 3.5ns\\)</li> <li>\u6b63\u8fb9\u6cbf \\(\\rightarrow\\) \u8f93\u51fa\uff1a\\(t_{pd, FF} + t_{pd, AND} + t_{pd, XOR} + t_{pd, XOR} = 7ns\\)</li> <li>\u6b63\u8fb9\u6cbf \\(\\rightarrow\\) \u6b63\u8fb9\u6cbf\uff1a\\(t_{pd, FF} + t_{pd, AND} + t_{pd, XOR} + t_{pd, NOT} + t_s = 6.5ns\\)</li> </ol> <p>\u6240\u4ee5\u6700\u5927\u5ef6\u8fdf\u4e3a6.5ns\uff0c\u6700\u5927\u9891\u7387\u4e3a\\(f_{max} = \\frac{1}{6.5 \\times 10^{-9}} \\approx 154MHz\\)</p> <ol> <li>\u76f8\u4f3c\u7684\u4f8b\u5b50\uff0c\u6765\u81ea\u6559\u6750\u4e60\u9898 \u7b54\u6848\uff1a</li> </ol>"},{"location":"notebooks/dld/4/#sequential-circuit-design","title":"Sequential Circuit Design","text":"<p>\u5728\u65f6\u5e8f\u7535\u8def\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a </p> <p>\u800c\u5728\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a </p> <p>\u4e3a\u4e86\u786e\u5b9a\u7535\u8def\u7684\u521d\u59cb\u72b6\u6001(\u5373\u590d\u4f4d\u72b6\u6001)\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u590d\u4f4d\u4fe1\u53f7\uff0c\u6709\u5f02\u6b65\u548c\u540c\u6b65\u4e4b\u5206\uff1a</p> <p>\u6ce8\uff1a\u5982\u679c\u7528\u7684\u662f\u5f02\u6b65\u590d\u4f4d(\u76f4\u63a5\u8f93\u5165)\uff0c\u8fd9\u8fdd\u53cd\u4e86\u89e6\u53d1\u5668\u7684\u540c\u6b65\u6027\u8d28 </p> <p>\ud83c\udf30\uff1a\u5e8f\u5217\u8bc6\u522b\u5668\uff0c\u8bc6\u522b\u5e8f\u52171101</p> <ul> <li>\u8f93\u5165\uff1a\\(x(t) \\in \\{0, 1\\}\\)</li> <li>\u8f93\u51fa\uff1a\\(z(t) \\in \\{0, 1\\}\\)</li> <li>\u51fd\u6570\uff1a\\(z(t) = \\begin{cases}1 &amp; \\text{if } x(t-3, t) = 1101 \\\\ 0 &amp; \\text{otherwise}\\end{cases}\\)</li> </ul> <p>\u4f8b\u5b50\uff1a  \u7279\u6b8a\u60c5\u51b5\uff1a1101101\uff0c\u53ef\u4ee5\u53d1\u73b0\u5e8f\u5217\u7684\u9996\u5c3e\u5747\u51fa\u73b0\u4e861101\uff0c\u800c\u4e14\u5b83\u4eec\u662f\u91cd\u53e0\u7684\uff0c\u53731101101\u548c1101101</p> <p>\u6d41\u7a0b\uff1a + \u5bf9\u4e8e\u6b63\u786e\u7684\u5e8f\u5217\uff1a     + \u5f00\u59cb\u4e8e\u521d\u59cb\u72b6\u6001(\u5373\u590d\u4f4d\u72b6\u6001)     + \u6dfb\u52a0\u4e00\u4e2a\u72b6\u6001\uff0c\u8868\u660e\u8bc6\u522b\u5230\u6240\u8981\u8bc6\u522b\u5e8f\u5217\u4e2d\u7684\u7b2c1\u4e2a\u7b26\u53f7     + \u5f53\u8fde\u7eed\u8bc6\u522b\u5230\u6b63\u786e\u7684\u7b26\u53f7\u65f6\uff0c\u5c31\u8fde\u7eed\u6dfb\u52a0\u72b6\u6001 + \u5bf9\u4e8e\u9519\u8bef\u7684\u5e8f\u5217\uff1a     + \u6700\u7ec8\u72b6\u6001\u4ee3\u8868\u8f93\u5165\u5e8f\u5217(\u53ef\u80fd\u5c0f\u4e8e\u6700\u7ec8\u8f93\u5165\u503c)\u7684\u51fa\u73b0     + \u6dfb\u52a0\u72b6\u6001\u8fc7\u6e21\u5f27\uff0c\u8868\u660e\u5f53\u524d\u7b26\u53f7\u4e0d\u5728\u6240\u8981\u8bc6\u522b\u5e8f\u5217\u65f6\u53d1\u751f\u7684\u60c5\u51b5     + \u5bf9\u4e8e\u6240\u6709\u975e\u8bc6\u522b\u5e8f\u5217\u8f93\u5165\uff0c\u6dfb\u52a0\u5176\u4ed6\u7684\u5f27\uff0c\u8868\u660e\u4ee3\u8868\u90a3\u79cd\u9519\u8bef\u5e8f\u5217\u51fa\u73b0\u65f6\u7684\u72b6\u6001\u8fc7\u6e21</p> <p>\u6839\u636e\u8fd9\u4e2a\u6d41\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u753b\u72b6\u6001\u56fe\uff1a  \u8fd9\u91cc\uff0c\u6211\u4eec\u5148\u627e\u5230\u6b63\u786e\u5e8f\u5217\u60c5\u51b5\u4e0b\u7684\u72b6\u6001\u56fe(\u8f83\u4e3a\u5bb9\u6613)\uff0c\u53ef\u4ee5\u53d1\u73b0\uff1a + \u8fd9\u91cc\u6211\u4eec\u7528\u5230\u7684\u662f\u7c73\u91cc\u578b\u72b6\u6001\u56fe + \u6211\u4eec\u627e\u5230\u4e86\u6240\u6709\u76844\u4e2a\u72b6\u6001</p> <p>\u5f53\u5904\u4e8eD\u72b6\u6001\u65f6\uff0c\u5982\u679c\u6211\u4eec\u8f93\u51651\uff0c\u5e94\u8be5\u56de\u5230\u54ea\u4e2a\u72b6\u6001\uff1f(\u6700\u53f3\u8fb9\u7684\u7bad\u5934\u8be5\u6307\u5411\u54ea\uff1f)</p> <p>\u8fd8\u662f\u4e3e\u8fd9\u4e2a\u4f8b\u5b50\uff1a1101101\uff0c\u53ef\u4ee5\u53d1\u73b0\u7b2c1\u4e2a1101\u4e2d\u6700\u540e\u4e00\u4e2a1\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u7b2c2\u4e2a1101\u4e2d\u7b2c\u4e00\u4e2a1\uff0c\u56e0\u6b64D \\(\\rightarrow\\) B\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u91cd\u65b0\u5229\u7528\u4e86\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u800c\u4e0d\u662f\u76f2\u76ee\u5730\u6dfb\u52a0\u65b0\u72b6\u6001</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5f97\u8003\u8651\u9519\u8bef\u5e8f\u5217\u7684\u60c5\u51b5\uff1a </p> <p>\u65b9\u6cd5\uff1a\u4e3e\ud83c\udf30</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u5b8c\u6574\u7684\u72b6\u6001\u56fe</p> <p>\u4ece\u72b6\u6001\u56fe\u4e2d\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5730\u5f97\u5230\u72b6\u6001\u8868 </p> <p>\u95ee\u9898\uff1a\u5982\u4f55\u7528\u6469\u5c14\u578b\u72b6\u6001\u56fe\u6765\u63cf\u8ff0\u8fd9\u4e2a\u5e8f\u5217\u8bc6\u522b\u5668\uff1f</p> <ul> <li>\u5728\u6469\u5c14\u578b\u4e2d\uff0c\u8f93\u51fa\u4e0e\u72b6\u6001\u76f8\u5173</li> <li>\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u989d\u5916\u7684\u72b6\u6001E\uff0c\u5b83\u5bf9\u5e94\u7684\u8f93\u51fa\u4e3a1 <p>E\u867d\u7136\u4e0eB\u5f88\u76f8\u4f3c\uff0c\u4f46\u5b83\u7684\u8f93\u51fa\u4e3a1\uff0c\u56e0\u6b64\u4e0eB\u4e0d\u540c</p> </li> <li>\u56e0\u6b64\uff0c\u6469\u5c14\u578b\u76f8\u6bd4\u7c73\u91cc\u578b\u6709\u66f4\u591a\u7684\u72b6\u6001 <p>\u201cMoore is More\u201d</p> </li> </ul> <p>\u72b6\u6001\u56fe\uff1a  \u72b6\u6001\u8868\uff1a </p> <p>\u7136\u800c\uff0c\u867d\u7136\u524d\u9762\u8bf4\u8fc7B\u548cE\u201c\u4e0d\u4e00\u6837\u201d\uff0c\u4f46\u5982\u679c\u6211\u4eec\u5728\u5c06\u5e26\u6709E\u7684\u72b6\u6001\u56fe\u8f6c\u53d8\u56de\u7c73\u91cc\u578b\uff1a  \u518d\u753b\u51fa\u5bf9\u5e94\u7684\u72b6\u6001\u8868\uff1a  \u4e0d\u96be\u53d1\u73b0\uff0cB\u548cE\u7adf\u7136\u53d8\u6210==\u7b49\u4ef7==\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5316\u7b80\uff1a </p> <p>\u4e00\u5207\u56de\u5230\u4e86\u539f\u70b9\ud83d\ude02</p>"},{"location":"notebooks/dld/4/#the-design-procedure","title":"The Design Procedure","text":"<ul> <li>\u89c4\u8303(specification)</li> <li>\u6784\u601d(formulation)\uff1a\u5f97\u5230\u72b6\u6001\u56fe\u6216\u72b6\u6001\u8868</li> <li>\u72b6\u6001\u6700\u5c11\u5316(state minimization)\uff1a\u6700\u5c0f\u5316\u72b6\u6001\u7684\u6570\u91cf</li> <li>\u72b6\u6001\u5206\u914d(state assignment)\uff1a\u4e3a\u72b6\u6001\u5206\u914d\u4e8c\u8fdb\u5236\u7801</li> <li>\ud83c\udf1f \u627e\u5230\u89e6\u53d1\u5668\u7684\u8f93\u5165\u65b9\u7a0b(flip-flop input equation determination)\uff1a\u9009\u62e9\u89e6\u53d1\u5668\u7684\u7c7b\u578b\uff0c\u4ece\u8868\u4e2d\u7684\u201c\u4e0b\u4e00\u72b6\u6001\u201d\u4e00\u9879\u4e2d\u5f97\u5230\u89e6\u53d1\u5668\u7684\u65b9\u7a0b</li> <li>\ud83c\udf1f\u627e\u5230\u8f93\u51fa\u65b9\u7a0b(output equation determination)\uff1a\u4ece\u8868\u4e2d\u7684\u201c\u8f93\u51fa\u201d\u4e00\u9879\u4e2d\u5f97\u5230\u8f93\u51fa\u65b9\u7a0b</li> <li>\u4f18\u5316(optimization)</li> <li>\u5de5\u827a\u6620\u5c04(technology mapping)\uff1a\u4ece\u65b9\u7a0b\u4e2d\u5f97\u5230\u7535\u8def\uff0c\u5e76\u6620\u5c04\u5230\u6307\u5b9a\u7684\u89e6\u53d1\u5668\u548c\u95e8</li> <li>\u9a8c\u8bc1(verification)\uff1a\u9a8c\u8bc1\u6700\u7ec8\u8bbe\u8ba1\u7684\u6b63\u786e\u6027</li> </ul>"},{"location":"notebooks/dld/4/#specification","title":"Specification","text":"<p>\u8bf4\u660e\u5f62\u5f0f\uff1a + \u4e66\u9762\u63cf\u8ff0 + \u6570\u5b66\u63cf\u8ff0 + HDL\u2b50 + \u8868\u683c\u63cf\u8ff0\u2b50 + \u65b9\u7a0b\u63cf\u8ff0\u2b50 + \u63cf\u8ff0\u8fd0\u7b97\u7684\u56fe(\u4e0d\u53ea\u662f\u7ed3\u6784)\u2b50</p>"},{"location":"notebooks/dld/4/#formulation","title":"Formulation","text":"<p>\ud83c\udfaf\uff1a\u627e\u5230\u72b6\u6001\u56fe</p> <p>\u5728\u7535\u8def\u8bf4\u660e\u65f6\uff0c\u6211\u4eec\u7528\u72b6\u6001\u6765\u8bb0\u4f4f\u5173\u4e8e\u8fc7\u53bb\u7684\u8f93\u5165\u5e8f\u5217\u7684\u6709\u610f\u4e49\u7684\u6027\u8d28\uff0c\u8fd9\u5bf9\u4e8e\u9884\u6d4b\u672a\u6765\u7684\u8f93\u51fa\u503c\u81f3\u5173\u91cd\u8981</p> <p>\u5e8f\u5217\u8bc6\u522b\u5668(sequence recognizer) \u662f\u4e00\u79cd\u65f6\u5e8f\u7535\u8def\uff0c\u5b83\u6839\u636e\u5728\u5e8f\u5217\u4e2d\u51fa\u73b0\u7684\u6307\u5b9a\u8f93\u5165\u6a21\u5f0f\u6765\u4ea7\u751f\u4e0d\u540c\u7684\u8f93\u51fa\u503c ^decedf</p>"},{"location":"notebooks/dld/4/#state-minimizationreduction","title":"State Minimization(Reduction)","text":"<p>\u901a\u8fc7\u51cf\u5c11\u6216\u6700\u5c0f\u5316\u72b6\u6001\u7684\u603b\u6570\uff0c\u6240\u9700\u7684\u89e6\u53d1\u5668\u6570\u91cf\u4e5f\u968f\u4e4b\u51cf\u5c11\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6d88\u9664\u7b49\u4ef7\u72b6\u6001(equivalent states) \u6765\u51cf\u5c11\u72b6\u6001\u603b\u6570\u3002</p> <p>\u7b49\u4ef7\u5b9a\u7406(equivalence theorem)\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001\u8868\uff0c\u5b58\u5728\u4e00\u4e2a\u552f\u4e00\u7684\u7b49\u4ef7\u8868\uff0c\u4f7f\u5f97\u72b6\u6001\u7684\u6570\u91cf\u6700\u5c0f</p> <p>\u5982\u4f55\u505a? + \u624b\u5de5\uff1a\u89c2\u5bdf\u3001implication chart + \u7b97\u6cd5\uff1aHopcroft, Moore, Brzozowski</p> <p>\ud83c\udf30\uff1a </p> <p>\u6ce8\uff1a\u53ef\u4ee5\u501f\u9274dm\u7684[[Chap 9 Relations#^be8aaf|\u7b49\u4ef7\u7c7b]]\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u5f97\u5230\u4e863\u4e2a\u7b49\u4ef7\u7c7b\uff1a{A}, {B}, {C, D}\uff0c\u5206\u522b\u8bb0\u4f5cA', B', C'</p> <p>[!info] \u8865\u5145\uff1aImplication Chart \u6309\u987a\u5e8f\u6bd4\u8f83\u4e24\u4e2a\u7b49\u4ef7\u72b6\u6001 + \u5982\u679c\u53d1\u73b0\u7b49\u4ef7\u72b6\u6001\uff0c\u5728\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u6253\\(\\surd\\) + \u5982\u679c\u72b6\u6001\u4e0d\u76f8\u7b49\uff0c\u6253\\(\\times\\) + \u5982\u679c\u9700\u8981\u8fdb\u4e00\u6b65\u6bd4\u8f83\uff0c\u5217\u51fa\u4e0b\u4e00\u72b6\u6001\u7684\u5bf9</p> <p>\ud83c\udf30\uff1a + \u5728\u8fdb\u4e00\u6b65\u7684\u6bd4\u8f83\u4e2d\uff0c\u53d1\u73b0CD\uff0cDE\u4e0d\u662f\u7b49\u4ef7\u7684\uff0c\u56e0\u6b64DG\u4e0d\u662f\u7b49\u4ef7\u7684 + \u8fd9\u6837\uff0c\u6211\u4eec\u5f97\u5230\uff1a + \u627e\u5230\u6700\u5927\u7684\u7b49\u4ef7\u7c7b\uff1a(A, B, E), (C, F), (D), (G)\uff0c\u6807\u8bb0\u8fd94\u4e2a\u72b6\u6001\u4f4da, b, c, d</p>"},{"location":"notebooks/dld/4/#state-assignment","title":"State Assignment","text":"<p>\u6211\u4eec\u9700\u8981\u5c06\u6240\u6709\\(m\\)\u4e2a\u72b6\u6001\u8d4b\u4e0a\u4e00\u4e2a\u552f\u4e00\u7684\u7f16\u7801\uff0c\u7f16\u7801\u7684\u957f\u5ea6\\(n \\ge \\lceil \\log_2 m \\rceil\\)\u3002\u8fd9\u6837\u4f1a\u4ea7\u751f\\(2^n - m\\)\u4e2a\u65e0\u7528\u7684\u72b6\u6001</p> <p>\u65b9\u6cd5\uff1a\u8ba1\u6570\u987a\u5e8f\u5206\u914d\u3001==\u683c\u96f7\u7801==\u5206\u914d\u3001==\u72ec\u70ed\u7801==\u5206\u914d </p> <p>\ud83c\udf30\uff1a\u5bf9\u4e8e\u524d\u9762\u76841101\u5e8f\u5217\u8bc6\u522b\u5668\uff0c\u6211\u4eec\u91c7\u7528\u4e0a\u8ff03\u79cd\u65b9\u6cd5\u8fdb\u884c\u72b6\u6001\u5206\u914d\uff0c\u5f97\u5230\u4ee5\u4e0b\u72b6\u6001\u8868\uff1a 1. \u8ba1\u6570\u987a\u5e8f\u5206\u914d\uff1a 2. \u683c\u96f7\u7801\u5206\u914d\uff1a 3. \u72ec\u70ed\u7801\u5206\u914d\uff1a</p> <p>\u6ce8\uff1a\u72ec\u70ed\u7801\u7684\u4f18\u52a3\uff1a + \u4f18\uff1a\u5f97\u5230\u66f4\u7b80\u5355\u3001\u66f4\u5feb\u901f\u7684\u903b\u8f91\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u548c\u5206\u6790 + \u52a3\uff1a\u89e6\u53d1\u5668\u7684\u6210\u672c\u4f1a\u63d0\u9ad8(m\u4e2a\u72b6\u6001\u9700\u8981m\u4f4d\u72ec\u70ed\u7801\uff0c\u4e5f\u5c31\u9700\u8981m\u4e2a\u89e6\u53d1\u5668)\uff0c\u8fd9\u6837\u5c31\u4ea7\u751f\\(2^m - m\\)\u4e2a\u6ca1\u6709\u7528\u5230\u8fc7\u7684\u7f16\u7801</p> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u4e0d\u540c\u7684\u5206\u914d\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u8f93\u5165\u3001\u8f93\u51fa\u51fd\u6570\uff0c\u4e5f\u4f1a\u5f71\u54cd\u7535\u8def\u7684\u590d\u6742\u5ea6\u3002\u72b6\u6001\u5206\u914d\u7684\u76ee\u6807\u662f\uff1a + \u51b3\u5b9a\u7f16\u7801\u7684\u957f\u5ea6 + \u627e\u5230\u6700\u4f73\u6216\u8fd1\u4f3c\u6700\u4f73\u7684\u72b6\u6001\u5206\u914d \u5f53N\u5f88\u5927\u65f6\uff0c\u627e\u5230\u6700\u4f73\u5206\u914d\u662f\u4ef6\u5f88\u56f0\u96be\u7684\u4e8b\uff1b\u800c\u4e14\u72b6\u6001\u5206\u914d\u7684\u6027\u80fd\u4e5f\u53d6\u51b3\u4e8e\u89e6\u53d1\u7c7b\u578b\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u91c7\u7528\u5de5\u7a0b\u65b9\u6cd5\u8fdb\u884c\u72b6\u6001\u5206\u914d\uff0c\u8fd9\u662f\u9700\u8981\u7528\u5230\u542f\u53d1\u6027\u7684\u89c4\u5219(heuristic rules)</p>"},{"location":"notebooks/dld/4/#flip-flop-input-and-output-equation-determination","title":"Flip-Flop Input and Output Equation Determination","text":"<p>\ud83c\udf30(\u63a5\u7740\u524d\u9762\u7684\u4f8b\u5b50\uff0c3\u79cd\u65b9\u6cd5)\uff1a 1. \u8ba1\u6570\u987a\u5e8f\u5206\u914d     \u7531\u5361\u8bfa\u56fe\uff0c\u6211\u4eec\u5f97\u5230\uff1a$$     D_2 = Y_2\\overline{Y_1} + X\\overline{Y_2}Y_1 \\quad D_1 = \\overline{X}Y_2\\overline{Y_1} + X\\overline{Y_2Y_1} + XY_2Y_1 \\quad Z = XY_2Y_1     $$     \u95e8\u8f93\u5165\u6210\u672c = 22</p> <ol> <li> <p>\u683c\u96f7\u7801\u5206\u914d     \u7531\u5361\u8bfa\u56fe\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a$$     D_2 = Y_2Y_1 + XY_1 \\quad D_1 = X \\quad Z = XY_2\\overline{Y_1}     $$     \u95e8\u8f93\u5165\u6210\u672c = 9</p> <p>\u7535\u8def\u56fe\uff1a</p> </li> <li> <p>\u72ec\u70ed\u7801\u5206\u914d(\u56fe\u7565\uff0c\u6ca1\u6709\u5361\u8bfa\u56fe\uff0c\u6ce8\u610f\u67094\u4e2a\u8f93\u5165\u65b9\u7a0b)     $$     D_4 = \\overline{X}Y_3 \\quad D_3 = X(Y_2 + Y_3) \\quad D_2 = X(Y_1 + Y_4) \\quad D_1 = \\overline{X}(Y_1 + Y_2 + Y_4) \\quad Z = XY_4     $$     \u95e8\u8f93\u5165\u6210\u672c = 17</p> <p>\u7535\u8def\u56fe\uff1a</p> </li> </ol>"},{"location":"notebooks/dld/4/#technology-mapping","title":"Technology Mapping","text":"<p>\ud83c\udf30(\u63a5\u7740\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u9009\u53d6\u6700\u4f18\u7684\u683c\u96f7\u7801\u5206\u914d)\uff1a \u7531\u8f93\u5165\u3001\u8f93\u51fa\u65b9\u7a0b\uff0c\u6211\u4eec\u5f97\u5230\u4ee5\u4e0b\u7535\u8def\u56fe\uff1a </p> <p>\u4f46\u5047\u8bbe\u6211\u4eec\u7684\u5e93\u4e2d\u53ea\u6709D\u89e6\u53d1\u5668\u548c\u4e0e\u975e\u95e8(\u5305\u62ec\u975e\u95e8\uff0c\u81f3\u591a4\u8f93\u5165)\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u6280\u672f\u6620\u5c04\uff1a </p>"},{"location":"notebooks/dld/4/#designing-with-unused-states","title":"Designing with Unused States","text":"<p>\u5bf9\u4e8e\u6ca1\u6709\u7528\u5230\u7684\u72b6\u6001\uff0c\u6211\u4eec\u628a\u5b83\u5f53\u4f5c\u4e0d\u5173\u5fc3\u7684\u60c5\u51b5(don't-care conditions)\uff0c\u7136\u540e\u5c31\u5728k-map\u7684\u76f8\u5e94\u4f4d\u7f6e\u4e0a\u6253\u4e0a'\\(\\times\\)'\uff0c\u5229\u7528\u8fd9\u4e9b'\\(\\times\\)'\u8fdb\u884c\u5316\u7b80</p> <p>[!example] </p> <p>\u5728\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u5982\u4f55\u5e94\u5bf9\u672a\u4f7f\u7528\u7684\u72b6\u6001\uff1f + \u5bf9\u4e8e\u672a\u4f7f\u7528\u7684\u72b6\u6001\uff0c\u9700\u8981\u8bf4\u660e\u5b83\u5bf9\u5e94\u7684\u8f93\u51fa\uff0c\u8fd9\u6837\uff0c\u6765\u81ea\u672a\u4f7f\u7528\u7684\u72b6\u6001\u53ca\u5176\u72b6\u6001\u8fc7\u6e21\u7684\u884c\u4e3a\u5c31\u4e0d\u4f1a\u662f\u6709\u5bb3\u7684 + \u4e3a\u672a\u4f7f\u7528\u7684\u72b6\u6001\u6dfb\u52a0\u989d\u5916\u7684\u8f93\u51fa\uff0c\u8868\u660e\u7535\u8def\u8fdb\u5165\u4e0d\u6b63\u786e\u7684\u72b6\u6001 + \u5bf9\u4e8e\u672a\u4f7f\u7528\u72b6\u6001\u4e0b\u7684\u4e0b\u4e00\u72b6\u6001\u884c\u4e3a\u9700\u8981\u6307\u5b9a\uff0c\u4ee5\u786e\u4fdd\u7535\u8def\u80fd\u5728\u4e0d\u4f7f\u7528\u590d\u4f4d\u7684\u60c5\u51b5\u4e0b\u56de\u5230\u6b63\u5e38\u7684\u8fd0\u884c</p>"},{"location":"notebooks/dld/4/#verification","title":"Verification","text":"<ul> <li>\u624b\u5de5\u6a21\u62df(manual verification)\uff1a\u624b\u5de5\u5730\u5c06\u6240\u6709\u7684\u8f93\u5165\u7ec4\u5408\u90fd\u8bd5\u4e00\u904d\uff0c\u770b\u7ed3\u679c\u662f\u5426\u7b26\u5408\u9884\u671f</li> <li>\u4eff\u771f\u9a8c\u8bc1(verification with simulation)\uff1a\u53ea\u8981\u51c6\u5907\u597d\u8f93\u5165\u7ec4\u5408\u7684\u5e8f\u5217\u548c\u65f6\u949f\uff0c\u5269\u4e0b\u7684\u8fc7\u7a0b\u4ea4\u7ed9\u8ba1\u7b97\u673a\u81ea\u52a8\u5904\u7406\uff0c\u7ed3\u679c\u4ee5\u65f6\u5e8f\u56fe(\u6ce2\u5f62\u56fe)\u7684\u5f62\u5f0f\u5448\u73b0</li> </ul> <p>\ud83c\udf30\uff1a\u9a8c\u8bc1\u201c1101\u201d\u5e8f\u5217\u8bc6\u522b\u5668\u7684\u6b63\u786e\u6027\uff1a 1. \u624b\u5de5\u6a21\u62df 2. \u4eff\u771f\u9a8c\u8bc1</p>"},{"location":"notebooks/dld/4/#an-example","title":"An Example","text":"<p>\ud83c\udf30\uff1a\u8bbe\u8ba11\u4e2a2\u4f4d\u6a213\u7d2f\u52a0\u5668</p> <p>\u5b9a\u4e49\uff1a + \u6a21n\u52a0\u6cd5\u5668(modulo n adder)\uff1a\u8fd4\u56de \u52a0\u6cd5\u548c \u6a21\u9664 n\u7684\u7ed3\u679c + \u7d2f\u52a0\u5668(accumulator)\uff1a\u968f\u65f6\u95f4\u53d8\u5316\u7d2f\u52a0\u8f93\u5165\u4e4b\u548c\u7684\u7535\u8def\uff0c\u521d\u59cb\u4e3a0</p> <p>\u89c4\u8303\uff1a + \u8f93\u5165\uff1a\\((X_1, X_0)\\) + \u88ab\u5b58\u50a8\u7684\u548c\uff1a\\((Y_1, Y_0)\\) + \u8f93\u51fa\uff1a\\((Z_1, Z_0)\\)</p> <p>\u72b6\u6001\u56fe(\u6469\u5c14\u578b)\uff1a</p> <p>\u72b6\u6001\u8868\uff1a</p> <p>\u6ce8\uff1a\u53ef\u4ee5\u770b\u5230\uff0c\u8868\u4e2d\u7684\u7f16\u7801\u6309\u683c\u96f7\u7801\u987a\u5e8f\u6392\u5217\uff0c\u65b9\u4fbf\u540e\u9762\u7528K-map\u5316\u7b80</p> <p>\u72b6\u6001\u5206\u914d\uff1a\\((Y_1, Y_0) = (Z_1, Z_0)\\)</p> <p>\u5229\u7528K-map\u627e\u5230D\u89e6\u53d1\u5668\u6700\u4f18\u7684\u8f93\u5165\u65b9\u7a0b\uff1a \u8f93\u5165\u65b9\u7a0b\uff1a$$ \\begin{align} D_1 &amp; = Y_1\\overline{X_1X_0} + Y_0X_0 + \\overline{Y_1Y_0}X_1 \\  D_0 &amp; = Y_0\\overline{X_1X_0} + Y_1X_1 + \\overline{Y_1Y_0}X_0 \\end{align} $$ \u7535\u8def\u5b9e\u73b0\uff1a</p>"},{"location":"notebooks/dld/4/#state-machine-design","title":"State Machine Design","text":"<p>\u8fd9\u4e00\u8282\u5185\u5bb9\u5728\u8bfe\u4ef6\u91cc\u6ca1\u6709\u8be6\u7ec6\u8bb2\u8ff0\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u7a0d\u5fae\u63d0\u4e00\u4e0b(\u5199\u7684\u5f88\u6c34)\uff0c\u5177\u4f53\u5185\u5bb9\u89c1\u4fee\u4f6c\u7684\u7b14\u8bb0</p> <ul> <li>\u4f20\u7edf\u7684\u72b6\u6001\u56fe(traditional state diagram) \u7684\u5c40\u9650\uff0c\u5bfc\u81f4\u5176\u4e0d\u9002\u7528\u4e8e\u5927\u578b\u7535\u8def\uff1a<ul> <li>\u5bf9\u4e8en\u4e2a\u8f93\u5165\u53d8\u91cf\uff0c\u5fc5\u987b\u6307\u5b9a\\(2^n\\)\u4e2a\u8f93\u5165\u7ec4\u5408\uff0c\u5373\u4f7f\u4e0b\u4e00\u72b6\u6001\u6216\u8f93\u51fa\u4ec5\u53d6\u51b3\u4e8e\u90e8\u5206\u8f93\u5165</li> <li>\u5bf9\u4e8em\u4e2a\u8f93\u5165\u53d8\u91cf\uff0c\u5fc5\u987b\u6307\u5b9a\\(2^m\\)\u4e2a\u8f93\u5165\u7ec4\u5408\uff0c\u5373\u4f7f\u4ec5\u6709\u90e8\u5206\u7684\u8f93\u51fa\u53d7\u72b6\u6001\u548c\u8f93\u5165\u7684\u5f71\u54cd</li> </ul> </li> <li>\u72b6\u6001\u673a(state-machine diagram)<ul> <li>\u4f7f\u7528\u6469\u5c14\u578b\u6765\u6307\u5b9a\u8f93\u51fa</li> <li>\u901a\u8fc7\u5e03\u5c14\u8868\u8fbe\u5f0f\u548c\u65b9\u7a0b\u6765\u66ff\u4ee3\u8f93\u5165\u3001\u8f93\u51fa\u7ec4\u5408\u7684\u679a\u4e3e</li> </ul> </li> </ul> <p>\u901a\u7528\u72b6\u6001\u673a\u6a21\u7248\uff1a \u72b6\u6001\u673a\u6a21\u578b\u4e3b\u8981\u5206\u4e3a3\u90e8\u5206\uff1a\u8f93\u5165\u6761\u4ef6\u3001\u8fc7\u6e21\u3001\u8f93\u51fa\u884c\u4e3a</p> <ul> <li>\u8f93\u5165\u6761\u4ef6(input condition)\uff1a\u8868\u8ff0\u4e3a\u5173\u4e8e\u8f93\u5165\u53d8\u91cf\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u6216\u65b9\u7a0b</li> <li>\u8fc7\u6e21\u6761\u4ef6(transition condition, TC)\uff1a\u5728\u8fc7\u6e21\u5f27\u4e0a\u7684\u8f93\u5165\u6761\u4ef6</li> <li>\u8f93\u51fa\u6761\u4ef6(output condition, OC)\uff1a\u5f53\u503c\u4e3a1\u65f6\uff0c\u5bfc\u81f4\u8f93\u51fa\u884c\u4e3a\u4ea7\u751f\u7684\u8f93\u5165\u6761\u4ef6</li> <li> <p>\u65e0\u6761\u4ef6\u8fc7\u6e21(unconditional transition)\uff1a\u65e0\u89c6\u8f93\u5165\u503c\uff0c\u603b\u662f\u53d1\u751f\u4e8e\u4e0b\u4e00\u4e2a\u65f6\u949f\u7684\u8fc7\u6e21(\u5185\u5728\u4f20\u8f93\u6761\u4ef6 = 1)</p> </li> <li> <p>\u6469\u5c14\u8f93\u51fa\u884c\u4e3a(Moore output actions)\uff1a\u4ec5\u53d6\u51b3\u4e8e\u72b6\u6001\uff0c\u5373\u65e0\u6761\u4ef6\u7684</p> </li> <li>\u8fc7\u6e21\u6761\u4ef6\u72ec\u7acb\u7684\u7c73\u91cc\u8f93\u51fa\u884c\u4e3a(transition-condition independent(TCI) Mealy output action)</li> <li>\u8fc7\u6e21\u6761\u4ef6\u4f9d\u8d56\u7684\u7c73\u91cc\u8f93\u51fa\u884c\u4e3a(transition-condition dependent(TCI) Mealy output action)</li> <li>\u8fc7\u6e21\u548c\u8f93\u51fa\u6761\u4ef6\u4f9d\u8d56\u7684\u7c73\u91cc\u8f93\u51fa\u884c\u4e3a(transition and output-condition dependent(TOCD) Mealy output action)\uff1a\u53d6\u51b3\u4e8e\u72b6\u6001\u3001\u8fc7\u6e21\u6761\u4ef6\u548c\u8f93\u51fa\u6761\u4ef6</li> </ul> <p>\ud83c\udf30\uff1a + \u4f20\u7edf\u72b6\u6001\u56fe     + \u8f93\u5165\uff1a\\(\\overline{AB} + \\overline{A}B = \\overline{A}\\)     + \u8f93\u51fa\uff1a\\(Z = \\overline{AB}\\) + \u72b6\u6001\u673a     + \u8f93\u5165\uff1a\\(A\\overline{B} + AB = A\\)     + \u8f93\u51fa\uff1a\\(Y = A\\overline{B}\\)</p> <p>\u4e0d\u6b63\u786e\u7684\u72b6\u6001\u56fe\uff1a</p> <p>\u7528Verilog\u5b9e\u73b0\u72b6\u6001\u673a(\u7565)</p>"},{"location":"notebooks/dld/4/#limitations-of-finite-state-machines","title":"Limitations of Finite State Machines","text":"<ul> <li>\u5728\u65e0\u9650\u5e8f\u5217\uff0c\u6bd4\u5982\\([0]^*[1]^+\\)\u4e4b\u7c7b\u7684\u5e8f\u5217\u91cc\uff0c\u53ea\u80fd\u4f7f\u7528\u6709\u9650\u7684\u72b6\u6001\u6765\u8bc6\u522b\u7279\u5b9a\u7684\u5e8f\u5217\u6a21\u5f0f <p>[!example] </p> </li> <li>\u6709\u9650\u72b6\u6001\u673a\u53ea\u80fd\u8bc6\u522b\u6709\u89c4\u5f8b\u7684\u8bed\u8a00\uff0c\u7136\u800c\u73b0\u5b9e\u4e2d\u6709\u8bb8\u591a\u4f8b\u5b50\u662f\u65e0\u89c4\u5f8b\u7684</li> </ul>"},{"location":"notebooks/dld/4/#other-flip-flop-types","title":"Other Flip-Flop Types","text":""},{"location":"notebooks/dld/4/#j-k-flip-flop","title":"J-K Flip-Flop","text":"<ul> <li>\u7b26\u53f7\uff1a</li> <li>\u7c7b\u4f3cS-R\u89e6\u53d1\u5668\uff0cJ\u7c7b\u4f3cS\uff0cK\u7c7b\u4f3cR\uff0c\u9664\u4e86\u8be5\u89e6\u53d1\u5668\u5141\u8bb8J = K = 1\u65f6\u7684\u60c5\u51b5</li> <li>J = K = 1\u65f6\uff0c\u89e6\u53d1\u5668\u8fdb\u5165\u76f8\u53cd\u72b6\u6001(opposite state)</li> <li>\u4f5c\u4e3a\u4e3b\u4ece\u89e6\u53d1\u5668\uff0cJ-K\u89e6\u53d1\u5668\u4e5f\u6709\u548cS-R\u89e6\u53d1\u5668\u4e00\u6837\u7684\u95ee\u9898\uff1a1's catching\uff0c\u5373\uff1a\u5982\u679c\u4e3b\u9501\u5b58\u5668\u8fdb\u5165\u9519\u8bef\u72b6\u6001\uff0c\u8be5\u9519\u8bef\u72b6\u6001\u4f1a\u4f20\u5230\u4ece\u9501\u5b58\u5668\u5185</li> <li>\u4e3a\u4e86\u907f\u514d\u8fd9\u4e00\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u8fb9\u6cbfD\u89e6\u53d1\u5668\u4f5c\u4e3a\u89e6\u53d1\u5668\u7684\u6838\u5fc3\u90e8\u5206\uff1a</li> </ul>"},{"location":"notebooks/dld/4/#ttoggle-flip-flop","title":"T(Toggle) Flip-Flop","text":"<ul> <li>\u7b26\u53f7\uff1a</li> <li>\u53ea\u6709\u5355\u4e2a\u8f93\u5165T\uff1aT = 0\u65f6\u4e0d\u6539\u53d8\u72b6\u6001\uff1bT = 1\u65f6\u5207\u6362\u81f3\u76f8\u53cd\u72b6\u6001</li> <li>\u5f53J-K\u89e6\u53d1\u5668\u7684\u8f93\u5165J = K = T\u65f6\uff0c\u5b83\u4e0eT\u89e6\u53d1\u5668\u7684\u529f\u80fd\u76f8\u540c</li> <li>\u4e0d\u80fd\u7528\u8f93\u5165T\u521d\u59cb\u5316\u89e6\u53d1\u5668\u81f3\u786e\u5b9a\u72b6\u6001</li> <li>\u4f5c\u4e3a\u4e3b\u4ece\u89e6\u53d1\u5668\uff0c\u4e5f\u67091's catching \u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6cd5\u540c\u4e0a\uff1a</li> </ul>"},{"location":"notebooks/dld/4/#basic-flip-flop-descriptors","title":"Basic Flip-Flop Descriptors","text":"<ul> <li>\u7528\u4e8e\u5206\u6790\uff1a<ul> <li>\u7279\u5f81\u8868\uff1a\u5b9a\u4e49\u5173\u4e8e\u8f93\u5165\u548c\u5f53\u524d\u72b6\u6001\u7684\u4e0b\u4e00\u72b6\u6001</li> <li>\u7279\u5f81\u65b9\u7a0b(\u4e0b\u4e00\u72b6\u6001\u65b9\u7a0b)\uff1a\u5b9a\u4e49\u4e0b\u4e00\u72b6\u6001\u4e3a\u8f93\u5165\u548c\u5f53\u524d\u72b6\u6001\u7684\u51fd\u6570</li> </ul> </li> <li> <p>\u7528\u4e8e\u8bbe\u8ba1\uff1a</p> <ul> <li>\u6fc0\u52b1\u8868\uff1a\u5b9a\u4e49\u5173\u4e8e\u5f53\u524d\u72b6\u6001\u548c\u4e0b\u4e00\u72b6\u6001\u7684\u8f93\u5165</li> <li>\u6fc0\u52b1\u65b9\u7a0b\uff1a\u5b9a\u4e49\u8f93\u5165\u4e3a\u5f53\u524d\u72b6\u6001\u548c\u4e0b\u4e00\u72b6\u6001\u7684\u51fd\u6570</li> </ul> </li> <li> <p>D\u89e6\u53d1\u5668</p> </li> <li>T\u89e6\u53d1\u5668</li> <li>S-R\u89e6\u53d1\u5668</li> <li>J-K\u89e6\u53d1\u5668 \u6ce2\u5f62\u56fe\uff1a</li> <li>D\u89e6\u53d1\u5668 &amp; T\u89e6\u53d1\u5668</li> <li>S-R\u89e6\u53d1\u5668 &amp; J-K\u89e6\u53d1\u5668</li> </ul>"},{"location":"notebooks/dld/4/#flip-flop-conversion","title":"Flip-Flop Conversion","text":"<p>\ud83c\udf30\uff1aD\u89e6\u53d1\u5668 \\(\\rightarrow\\) J-K\u89e6\u53d1\u5668 \u6b65\u9aa4\uff1a + \u753b\u51fa\u60f3\u8981\u5f97\u5230\u7684\u89e6\u53d1\u5668\u7684\u7279\u5f81\u8868 + \u753b\u51fa\u7ed9\u5b9a\u7684\u89e6\u53d1\u5668\u7684\u6fc0\u52b1\u8868 + \u5408\u5e76\u4e24\u8868\u4e3a\u8f6c\u6362\u8868 + \u627e\u51fa\u7ed9\u5b9a\u89e6\u53d1\u5668\u7684\u8f93\u5165\u65b9\u7a0b </p>"},{"location":"notebooks/dld/4/#appendix","title":"Appendix","text":""},{"location":"notebooks/dld/4/#other-implementation-of-latches-and-flip-flops","title":"Other Implementation of Latches and Flip-Flops","text":""},{"location":"notebooks/dld/4/#d-latch-with-transmission-gates","title":"D Latch with Transmission Gates","text":""},{"location":"notebooks/dld/4/#d-latch-with-mux","title":"D Latch with MUX","text":""},{"location":"notebooks/dld/4/#d-flip-flip-with-muxs","title":"D Flip-Flip with MUXs","text":""},{"location":"notebooks/dld/5/","title":"Chap 5 Digital HardWare Implementation","text":":material-circle-edit-outline: \u7ea6 2272 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f"},{"location":"notebooks/dld/5/#design-space","title":"Design Space","text":"<p>\u6ce8\uff1a\u5927\u90e8\u5206\u5185\u5bb9\u89c1[[Chap 3 Combinational Logical Design#Design Space|\u7b2c3\u7ae0]]\uff0c\u8fd9\u91cc\u7a0d\u5fae\u8c08\u4e00\u4e0bCMOS\u7535\u8def\uff0c\u5177\u4f53\u89c1\u4fee\u4f6c\u7684\u7b14\u8bb0\u548cwiki</p>"},{"location":"notebooks/dld/5/#cmos-circuit-technology","title":"CMOS Circuit Technology","text":"<p>CMOS\u5168\u79f0\uff1a\u4e92\u8865\u5f0f\u91d1\u5c5e\u6c27\u5316\u7269\u534a\u5bfc\u4f53(complementary metal-oxide semiconductor)</p> <p>CMOS\u6676\u4f53\u7ba1\u7684\u51e0\u4f55\u56fe\u5f62\uff1a </p> <p>n-channel CMOS \u548c p-channel CMOS\uff1a </p> <p>\u4f7f\u7528CMOS\u6676\u4f53\u7ba1\u6784\u5efa\u5f00\u5173\u7535\u8def\u7684\u6a21\u578b\uff1a </p> <p>\u6ce8\uff1a\u5de6\u8fb9\u8868\u793a\\(XY\\)\uff0c\u53f3\u8fb9\u8868\u793a\\(X + Y\\)</p> <p>CMOS\u7684\u901a\u7528\u7ed3\u6784\u53ca\u5176\u5e38\u89c1\u5e94\u7528 </p>"},{"location":"notebooks/dld/5/#programmable-implementation-technologies","title":"Programmable Implementation Technologies","text":""},{"location":"notebooks/dld/5/#why-programmable-logic","title":"Why Programmable Logic?","text":"<p>\u73b0\u5b9e\uff1a + \u5927\u89c4\u6a21\u751f\u4ea7\u96c6\u6210\u7535\u8def(IC) \u66f4\u52a0\u7ecf\u6d4e + \u4f46\u8bb8\u591a\u8bbe\u8ba1\u53ea\u8981\u6c42\u5c0f\u89c4\u6a21\u7684IC \u56e0\u6b64\u6211\u4eec\u9700\u8981\u80fd\u591f\u88ab\u5927\u89c4\u6a21\u751f\u4ea7\uff0c\u4e14\u80fd\u591f\u5b9e\u73b0\u5f88\u591a\u53ea\u8981\u6c42\u5c0f\u89c4\u6a21\u8bbe\u8ba1\u7684IC\u3002\u800c\u53ef\u7f16\u7a0b\u903b\u8f91(programmable logic) \u80fd\u591f\u5b9e\u73b0\u8fd9\u4e9b\u76ee\u6807\u3002</p> <p>\u5176\u4ed6\u597d\u5904\uff1a + \u5f88\u591a\u53ef\u7f16\u7a0b\u903b\u8f91\u8bbe\u5907\u662f\u73b0\u573a\u53ef\u7f16\u7a0b\u7684(field-programmable)\uff0c\u5373\u80fd\u591f\u5728\u751f\u4ea7\u73af\u5883\u4e4b\u5916\u7684\u5730\u65b9\u8fdb\u884c\u7f16\u7a0b + \u5927\u591a\u6570\u53ef\u7f16\u7a0b\u903b\u8f91\u8bbe\u5907\u662f\u53ef\u5220\u9664\u7684(erasable)\uff0c\u5e76\u4e14\u662f\u53ef\u91cd\u65b0\u7f16\u7a0b\u7684(reprogrammable)     + \u5141\u8bb8\u66f4\u65b0\u8bbe\u5907\u6216\u7ea0\u6b63\u9519\u8bef     + \u5141\u8bb8\u5c06\u8bbe\u5907\u91cd\u7528\u4e8e\u4e0d\u540c\u7684\u8bbe\u8ba1\u4e2d     + \u8bfe\u7a0b\u5b9e\u9a8c\u7684\u7406\u60f3\u9009\u62e9 + \u53ef\u7f16\u7a0b\u903b\u8f91\u8bbe\u5907\u88ab\u7528\u4e8e\u539f\u578b\u8bbe\u8ba1\uff0c\u5b9e\u73b0\u5728\u5e38\u89c4IC\u7684\u9500\u552e</p>"},{"location":"notebooks/dld/5/#programmable-logic-technologies","title":"Programmable Logic Technologies","text":"<ul> <li>\u8fde\u63a5\u63a7\u5236(control connections)<ul> <li>mask programming </li> <li>\u4fdd\u9669\u4e1d(fuse)\uff1a\u5207\u65ad\u4e0d\u60f3\u8981\u7684\u8fde\u63a5 </li> <li>antifuse(\u5177\u4f53\u89c1wiki)\uff1a\u751f\u6210\u8fde\u63a5 </li> </ul> </li> <li> <p>\u6676\u4f53\u7ba1\u5f00\u5173\u63a7\u5236(control transistor switching)</p> <ul> <li>\u5355\u4f4d\u5b58\u50a8\u5143\u7d20(single-bit storage element)</li> <li>\u5728\u6d6e\u6805(floating gate) \u4e0a\u5b58\u50a8\u7535\u8377      <ul> <li>\u53ef\u5220\u9664</li> <li>\u7535\u5b50\u53ef\u5220\u9664</li> <li>\u8fc5\u901f\uff08\u5728\u95ea\u5b58\u5185\uff09  <p>\u6ce8\uff1a\u6d6e\u6805</p> </li> </ul> </li> </ul> </li> <li> <p>\u67e5\u627e\u8868\u7684\u6784\u5efa(build lookup tables(LUT))</p> <ul> <li>\u5b58\u50a8\u51fd\u6570\u7684\u5143\u7d20 \ud83c\udf30\uff1a3\u4eba\u6295\u7968\u5668</li> </ul> </li> </ul>"},{"location":"notebooks/dld/5/#programmable-logic-device","title":"Programmable Logic Device","text":"<ul> <li>\u53ea\u8bfb\u5b58\u50a8\u5668(read only memory, ROM)\uff1a\u4e0e\u95e8\u7684\u56fa\u5b9a\u9635\u5217\u7684\u548c\u6216\u95e8\u7684\u53ef\u7f16\u7a0b\u9635\u5217</li> <li>\u53ef\u7f16\u7a0b\u9635\u5217\u903b\u8f91(programmable array logic, PAL\u00ae)\uff1a\u4e0e\u95e8\u7684\u53ef\u7f16\u7a0b\u9635\u5217\uff0c\u4ee5\u53ca\u6216\u95e8\u7684\u56fa\u5b9a\u9635\u5217 </li> <li>\u53ef\u7f16\u7a0b\u903b\u8f91\u9635\u5217(programmable logic array, PLA)\uff1a\u4e0e\u95e8\u7684\u53ef\u7f16\u7a0b\u9635\u5217\uff0c\u4ee5\u53ca\u6216\u95e8\u7684\u53ef\u7f16\u7a0b\u9635\u5217</li> <li>\u590d\u6742\u53ef\u7f16\u7a0b\u903b\u8f91\u5668\u4ef6(complex programmable logic device, CPLD)/\u73b0\u573a\u53ef\u7f16\u7a0b\u903b\u8f91\u95e8\u9635\u5217(field-programmable gate array, FPGA)\uff1a\u7531\u4e8e\u5b83\u76f8\u5f53\u590d\u6742\uff0c\u56e0\u6b64\u88ab\u79f0\u4e3a\u201c\u5efa\u7b51(architecture)\u201d\uff0c\u6b64\u5757\u5185\u5bb9\u7565\u8fc7</li> </ul>"},{"location":"notebooks/dld/5/#configurations","title":"Configurations","text":""},{"location":"notebooks/dld/5/#logical-symbols","title":"Logical Symbols","text":"<p>\u4e0b\u9762\u8fd9\u4e9b\u7b26\u53f7\u5728\u672c\u7ae0\u540e\u7eed\u90e8\u5206\u5c06\u4f1a\u7ecf\u5e38\u7528\u5230\uff0c\u8bf7\u52a1\u5fc5\u5f04\u6e05\u695a\u5b83\u4eec\u7684\u542b\u4e49\uff01 </p> <p></p>"},{"location":"notebooks/dld/5/#read-only-memory","title":"Read Only Memory","text":"<p>\u53ea\u8bfb\u5b58\u50a8\u5668(read only memories)/\u53ef\u7f16\u7a0b\u53ea\u8bfb\u5b58\u50a8\u5668(programmable read only memories) \u62e5\u6709\uff1a + \\(N\\)\u4e2a\u8f93\u5165 + \\(M\\)\u4e2a\u8f93\u51fa + \\(2^N\\)\u4e2a\u8bd1\u7801\u540e\u7684\u6700\u5c0f\u9879</p> <p>\u4e2a\u4eba\u7406\u89e3\uff1a\u8f93\u51fa\u9879\u4e3aSOM(\u53ef\u4e0ePAL\u7684\u8f93\u51fa\u5bf9\u7167)</p> <ul> <li>\u7528\u5e26\u6709\\(2^N\\)\u4e2a\u8f93\u51fa\u7684\u56fa\u5b9a(fixed) \u4e0e\u95e8\u9635\u5217\uff0c\u5b9e\u73b0\u6240\u6709\\(N\\)\u4e2a\u6700\u5c0f\u9879</li> <li>\u901a\u8fc7\u5e26\u6709\\(M\\)\u4e2a\u8f93\u51fa\u7684\u53ef\u7f16\u7a0b(programmable) \u6216\u95e8\u9635\u5217\uff0c\u6784\u6210\\(M\\)\u4e2a\u6700\u5c0f\u9879\u4e4b\u548c\u7684\u8868\u8fbe\u5f0f</li> </ul> <p>\u5173\u4e8eROM\u548cPROM\u7684\u7a0b\u5e8f\u53ea\u662f\u4e00\u4e2a\u591a\u8f93\u51fa\u7684\u771f\u503c\u8868\uff1a + \u5982\u679c\u662f1\uff0c\u5219\u8868\u660e\u76f8\u5e94\u7684\u6700\u5c0f\u9879\u4e0e\u5176\u5bf9\u5e94\u7684\u8f93\u51fa\u4e4b\u95f4\u5efa\u7acb\u4e86\u8fde\u63a5 + \u5982\u679c\u662f0\uff0c\u5219\u8868\u660e\u6ca1\u6709\u8fde\u63a5</p> <p>\u53ea\u8bfb\u5b58\u50a8\u5668\u53ef\u88ab\u89c6\u4e3a\u5185\u5b58(memory)\uff0c\u800c\u5b83\u7684\u8f93\u5165\u88ab\u89c6\u4e3a\u6570\u636e(\u5373\u8f93\u51fa)\u5730\u5740(addresses)</p> <p>ROM\u7684\u89c4\u6a21 = \u5730\u5740\u5bbd\u5ea6 \\(\\times\\) \u5355\u8bcd\u5bbd\u5ea6 </p> <p>\ud83c\udf30  1. \\(8 \\times 4 \\text{ ROM }\\) (\\(N = 3 \\text{ input lines, } M = 4 \\text{ output lines}\\)) </p> <p>\u8bf4\u660e\uff1a + \u56fa\u5b9a\u4e0e\u95e8\u9635\u5217\u662f\u4e00\u4e2a3-8\u8bd1\u7801\u5668\uff0c\u7528\u6765\u5b9e\u73b0\u6700\u5c0f\u9879 + \u53ef\u7f16\u7a0b\u6216\u95e8\u9635\u5217\u4f7f\u7528\u5355\u7ebf\uff0c\u8868\u793a\u5bf9\u6216\u95e8\u7684\u6240\u6709\u8f93\u5165 + \u9635\u5217\u4e2d\u7684\"\\(\\times\\)\"\u8868\u793a\u6700\u5c0f\u9879\u4e0e\u6216\u95e8\u7684\u8fde\u63a5 + \ud83c\udf30\uff1a\u5982\u679c\u8f93\u5165\u4e3a\\((A_2, A_1, A_0) = 001\\)\uff0c\u90a3\u4e48\u8f93\u51fa\u4f4d\\((F_3, F_2, F_1, F_0) = 0011\\)</p> <ol> <li>3\u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u5e73\u65b9</li> </ol> <p>\u5206\u6790\uff1a </p> <p>\u6ce8\uff1a\\(B[5: 0] = A[2: 0] \\times A[2: 0]\\)</p> <p>\u56e0\u6b64\uff0c\u9009\u62e9\\(2^3 \\times 4\\) ROM\uff0c\u6846\u56fe\u5982\u4e0b\uff1a </p> <p>\u771f\u503c\u8868\uff1a </p> <p>\u7535\u8def\u5b9e\u73b0\uff1a </p> <p>\u6ce8\uff1aB0\u548cB1\u5e76\u4e0d\u5728\u53ef\u7f16\u7a0b\u9635\u5217\u4e2d(\u539f\u56e0\u89c1\u524d\u9762\u7684\u5206\u6790)</p>"},{"location":"notebooks/dld/5/#programmable-array-logicpal","title":"Programmable Array Logic(PAL)","text":"<p>\u6784\u6210\uff1a\u53ef\u7f16\u7a0b\u4e0e\u95e8\u9635\u5217 + \u56fa\u5b9a\u6216\u95e8\u9635\u5217(\u4e0eROM\u6b63\u597d\u76f8\u53cd) </p> <p>\u6ce8\uff1a\u770b\u5230\u4e0e\u95e8\u548c\u6216\u95e8\u7684\u4ea4\u70b9\u5e76\u4e0d\u662f\u7528\\(\\times\\)\u8868\u793a\u7684\uff0c\u8bf4\u660e\u6216\u95e8\u9635\u5217\u662f\u56fa\u5b9a\u7684\uff0c\u5373\u5bf9\u5e94\u5e03\u5c14\u65b9\u7a0b\u7684==\u4e58\u79ef\u9879\u6570\u91cf\u662f\u56fa\u5b9a\u7684==</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u4e0d\u63d0\u4f9b\u6240\u6709\u7684\u6700\u5c0f\u9879\uff0c\u800c\u662f\u4ea7\u751f\u4e58\u79ef\u9879\uff0c\u7136\u540e\u7531\u6216\u95e8\u9009\u62e9\u8fd9\u4e9b\u4e58\u79ef\u9879\uff0c\u56e0\u6b64\u5b83\u7684\u8f93\u51fa\u662fSOP</p> <p>\u5f0a\uff1a + ROM\u4fdd\u8bc1\u5b9e\u73b0\u4efb\u610f\u6709\\(N\\)\u4e2a\u8f93\u5165\u7684\\(M\\)\u4e2a\u51fd\u6570\uff0c\u4f46PAL\u7684\u6216\u95e8\u8f93\u5165\u6709\u9650 \u5229\uff1a + \u5bf9\u4e8e\u7279\u5b9a\u7684\u5185\u90e8\u590d\u6742\u5ea6\uff0cPAL\u62e5\u6709\u8f83\u5927\u7684\\(N\\)\u548c\\(M\\) + \u4e00\u4e9bPAL\u7684\u8f93\u51fa\u80fd\u88ab\u53d6\u8865(complement) * (\u5b9e\u73b0POS\u51fd\u6570) + ROM\u65e0\u6cd5\u5b9e\u73b0\u591a\u7ea7\u7535\u8def(multi-level circuits) (\u8f93\u5165\u8f93\u51fa\u95f4\u6ca1\u6709\u5916\u90e8\u8fde\u63a5)\uff1b\u800cPAL\u7531\u4e8e\u5176\u81ea\u8eab\u7ed3\u6784\u7279\u5f81\uff0c\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u591a\u7ea7\u7535\u8def</p> <p>[!note] \u56e0\u4e3a\u6bcf\u4e2a\u6216\u95e8\u5bf9\u5e94\u7684\u4e0e\u95e8\u6570\u91cf(\u6216\u95e8\u7684\u8f93\u5165)\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5f97\u9884\u5148\u505a\u597d\u51fd\u6570\u7684\u4f18\u5316\uff0c\u6709\u65f6\u53ef\u80fd\u9700\u8981\u56e0\u5f0f\u5206\u89e3</p> <p>\ud83c\udf30\uff1a\u5bf9\u4e8e\u4e0b\u5217\u7ed9\u5b9a\u7684\u5e03\u5c14\u65b9\u7a0b\uff0c\u7528PAL\u5b9e\u73b0\u5176\u529f\u80fd </p> <p>\u7535\u8def\u5b9e\u73b0\uff1a </p> <p>\u5316\u7b80\u540e\u7684\u5e03\u5c14\u65b9\u7a0b\uff1a $$ \\begin{align} W &amp; = AB\\overline{C} + \\overline{AB}C\\overline{D} \\ X &amp; = A + BCD \\ Y &amp; = \\overline{A}B + CD + \\overline{BD} \\ Z &amp; = AB\\overline{C} + \\overline{AB}C\\overline{D} + A\\overline{CD} + \\overline{ABC}D \\ &amp; = W + A\\overline{CD} + \\overline{ABC}D \\end{align} $$</p>"},{"location":"notebooks/dld/5/#programmable-logic-arraypla","title":"Programmable Logic Array(PLA)","text":"<p>\u76f8\u8f83\u4e8e\u524d\u4e24\u8005\u800c\u8a00\uff0cPLA\u66f4\u52a0\u7075\u6d3b\uff0c\u56e0\u4e3a\u5b83\u7684\u4e0e\u95e8\u548c\u6216\u95e8\u9635\u5217\u90fd\u662f\u53ef\u7f16\u7a0b\u7684 </p> <p>\u5229\uff1a + PLA\u62e5\u6709\u8f83\u5927\u7684\\(N\\)\u548c\\(M\\)\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5728ROM\u65e0\u6cd5\u5b8c\u6210\u7684\u65b9\u7a0b(\u56e0\u4e3aROM\u7684\u8f93\u5165\u56fa\u5b9a\u4e3aN) + PLA\u7684\u6240\u6709\u4e58\u79ef\u9879\u5747\u80fd\u4e0e\u6216\u95e8(\u8f93\u51fa)\u76f8\u8fde\u63a5\uff0c\u514b\u670d\u4e86PAL\u6216\u95e8\u6709\u9650\u4e2a\u8f93\u5165\u7684\u95ee\u9898 + \u6709\u4e9bPLA\u7684\u8f93\u51fa\u80fd\u53d6\u8865(complement)\uff08\u5b9e\u73b0POS\u51fd\u6570\uff09 \u5f0a\uff1a + \u2b50\u4e58\u79ef\u9879\u7684\u6570\u91cf\u9650\u5236\u4e86PLA\u7684\u5e94\u7528\uff1a\u4ece\u540e\u9762\u7684\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u53d1\u73b0\u2014\u2014\u6240\u6709\u7684\u8f93\u51fa\u201c\u5171\u4eab\u201d\u6240\u6709\u7684\u4e58\u79ef\u9879\u3002\u56e0\u6b64\u5f88\u5bb9\u6613\u51fa\u73b0\u4e58\u79ef\u9879\u592a\u591a\u65e0\u6cd5\u8868\u793a\u51fa\u6765\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u9700\u8981\u901a\u8fc7\u4f18\u5316\uff0c\u4f7f\u4e00\u4e9b\u8f93\u51fa\u4f7f\u7528\u76f8\u540c\u7684\u4e58\u79ef\u9879\uff0c\u6765\u8282\u7701\u4e58\u79ef\u9879\u7684\u4e2a\u6570 + PAL\u7684\u591a\u7ea7\u7535\u8def\u80fd\u529b\u5728PLA\u4e0a\u884c\u4e0d\u901a\u3002\u56e0\u6b64PLA\u9700\u8981\u5916\u90e8\u8fde\u63a5\u6765\u5b9e\u73b0\u591a\u7ea7\u7535\u8def</p> <p>\ud83c\udf30 1. 3\u8f93\u5165-2\u8f93\u51faPLA(\u67094\u4e2a\u4e58\u79ef\u9879) </p> <p>\u5e03\u5c14\u65b9\u7a0b\uff1a $$ \\begin{align} F_1 &amp; = 0 \\oplus (AB + BC + AC) = AB + BC + AC\\ F_2 &amp; = 1 \\oplus (AB + \\overline{AB}) = \\overline{A}B + A\\overline{B} \\end{align} $$ \u53ef\u4ee5\u770b\u5230\u5f02\u6216\u95e8\u7684\u4f5c\u7528\uff1a\u51b3\u5b9a\u662f\u5426\u53d6\u8f93\u51fa\u7684\u8865</p> <ol> <li>\u8003\u8651\u4e58\u79ef\u9879\u7684\u201c\u5171\u4eab\u201d\u95ee\u9898 \u7ed9\u5b9a\u5e03\u5c14\u65b9\u7a0b\u4e3a\uff1a $$ \\begin{align} F_1 &amp; = \\overline{AB}C + \\overline{A}B\\overline{C} + A\\overline{BC} \\ F_2 &amp; = AC + AB + BC \\end{align} $$ \u53ef\u4ee5\u53d1\u73b0\u5b83\u4eec\u7684\u4e58\u79ef\u9879\u4e2a\u6570\u4e3a6\u3002\u5982\u679c\u6211\u4eec\u518d\u7528\u4e0a\u9762\u90a3\u4e2aPLA(4\u4e2a\u4e58\u79ef\u9879)\uff0c\u770b\u8d77\u6765\u65e0\u6cd5\u5b9e\u73b0\u8fd92\u4e2a\u51fd\u6570\u3002\u7136\u800c\uff0c\u901a\u8fc7\u5bf9\\(F_1\\)\u53d6\u8865\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u7ebf\u751f\u673a\uff1a $$ \\overline{F_1} = AB + AC + BC + \\overline{ABC} $$ \u73b0\u5728\uff0c\\(\\overline{F_1}\\)\u4e0e\\(F_2\\)\u67093\u4e2a\u76f8\u540c\u7684\u4e58\u79ef\u9879\uff0c\u56e0\u6b64\u603b\u4e58\u79ef\u9879\u4e2a\u6570\u964d\u81f34\u4e2a\uff0c\u53ef\u4ee5\u7528\u524d\u9762\u7684PLA\u5b9e\u73b0\u4e86\uff01</li> </ol> <p>\u7535\u8def\u5b9e\u73b0\uff1a </p>"},{"location":"notebooks/dld/5/#lookup-tables","title":"Lookup Tables","text":"<p>\u6ce8\uff1a\u8c8c\u4f3c\u8003\u8bd5\u4e0d\u8003</p> <ul> <li>\u5185\u5b58(\u901a\u5e38\u662f\u9759\u6001\u968f\u673a\u5b58\u50a8\u5668(static random-acess memory, SRAM))\u80fd\u591f\u5b9e\u73b0\u7ec4\u5408\u903b\u8f91\u3002\u5728FPGA\u4e2d\uff0c\u8fd9\u6837\u7684\u5185\u5b58\u79f0\u4e3a\u67e5\u627e\u8868(lookup tables, LUTs) \ud83c\udf30\uff1a\u901a\u8fc74-1MUX\u5b9e\u73b0\u76842\u8f93\u5165\u67e5\u627e\u8868 </li> <li>\u66f4\u5927\u7684MUX\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u4e00\u7ec4\u66f4\u5c0f\u7684MUX\u642d\u5efa\u6811\u72b6\u7ed3\u6784\u6765\u5b9e\u73b0 \ud83c\udf30\uff1a</li> <li>\u5bf9\u4e0a\u4f8b\u7684\u6539\u8fdb </li> <li>\u75287\u4e2a2-1MUX\u5f62\u6210\u6811\u72b6\u7ed3\u6784\uff0c\u5b9e\u73b03\u8f93\u5165LUT </li> </ul> <p>\u6ce8\uff1a + \u67e5\u627e\u8868\u901a\u5e38\u6bd4\u8f83\u5c0f\uff1a\u8f93\u5165\u4e3a4\u62166\u4e2a\uff0c1\u4e2a\u8f93\u51fa\uff0c\u5305\u62ec16\u621664\u4e2a\u9879 + \u56e0\u4e3a\u67e5\u627e\u8868\u5b58\u50a8\u4e86\u771f\u503c\u8868\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u5b9e\u73b0\u4efb\u4f554\u62166\u8f93\u5165\u7684\u51fd\u6570 + \u56e0\u6b64\uff0c\u8bbe\u8ba1\u95ee\u9898\u8f6c\u4e3a\uff1a\u5982\u4f55\u5c06\u4e00\u7ec4\u7ed9\u5b9a\u7684\u51fd\u6570\u5206\u89e3\u4e3a\u4e00\u7ec44\u8f93\u5165\u62166\u8f93\u5165\u7684\u4e24\u7ea7\u51fd\u6570</p>"},{"location":"notebooks/dld/5/#fpga","title":"FPGA","text":"<p> FPGA\u7684\u5185\u90e8\u7ed3\u6784\u5206\u62103\u90e8\u5206\uff1a + \u53ef\u7f16\u7a0b\u903b\u8f91\u5757(programmable/configurable logic block, CLB)\uff0c\u5b83\u662fFPGA\u7684\u57fa\u672c\u903b\u8f91\u5355\u5143     + \u5728LUTs\u4e2d\u7684\u5b58\u50a8\u5355\u5143\u662f\u6613\u53d8\u7684(\u65ad\u7535\u540e\u4e0d\u4fdd\u5b58\u6570\u636e)     + \u4f7f\u7528PROM(\u53ef\u7f16\u7a0bROM)\u6c38\u4e45\u4fdd\u5b58\u6570\u636e     + \u5f53\u82af\u7247\u521d\u59cb\u5316\u5f00\u5173\u7bb1/\u77e9\u9635\u65f6\uff0c\u5b58\u50a8\u5355\u5143\u4ecePROM\u4e2d\u52a0\u8f7d </p> <ul> <li> <p>\u53ef\u7f16\u7a0b\u5f00\u5173\u7bb1/\u77e9\u9635(programmable switch box/matrix, SM)\uff0c\u5b83\u5141\u8bb8CLB\u7684\u8f93\u5165\u548c\u8f93\u51fa\u901a\u8fc7\u4e0d\u540c\u7684\u7ebf\u8def\u76f8\u4e92\u8fde\u63a5</p> <ul> <li>\u7075\u6d3b(flexibility)\uff1a\u5355\u6839\u7ebf\u53ef\u4ee5\u8fde\u63a5\u591a\u5c11\u6761\u7ebf\u8def</li> <li>\u62d3\u6251(topology)\uff1a\u54ea\u4e9b\u7ebf\u8def\u53ef\u4ee5\u88ab\u8fde\u63a5</li> <li>\u53ef\u8def\u7531(routability)\uff1a\u591a\u5c11\u7535\u8def\u80fd\u591f\u88ab\u8def\u7531\u5230 </li> </ul> </li> <li> <p>\u53ef\u7f16\u7a0b\u8f93\u5165\u8f93\u51fa\u6a21\u5757(programmable input outout module, IOB)\uff0c\u5b83\u662f\u5728\u8bbe\u5907\u5916\u56f4\u7684\u7279\u6b8a\u903b\u8f91\u5757\uff0c\u7528\u4e8e\u5916\u90e8\u8fde\u63a5 </p> </li> </ul> <p>\ud83c\udf30\uff1a \u7528FPGA\u5b9e\u73b03\u53d8\u91cf\u51fd\u6570\\(f = x_1x_2 + \\overline{x_2}x_3\\)\uff0c\u4f7f\u75283\u4e2aCLB(\u8fd9\u91cc\u7528\u5230\u7684\u662f4-1 MUX) </p> <p>FPGA\u4f7f\u7528\u5305\u542bbit\u7684\u4f4d\u6587\u4ef6(bitfile) \u8fdb\u884c\u7f16\u7a0b </p>"},{"location":"notebooks/dld/5/#programmable-logic-functions-implementation","title":"Programmable Logic Functions Implementation","text":"<p>\u76ee\u524d\u5df2\u77e5\u7684\u5b9e\u73b0\u6280\u827a(Implementation techniques)\uff1a + \u8bd1\u7801\u5668 + \u6216\u95e8 + \u591a\u8def\u590d\u7528\u5668 \uff08+ \u975e\u95e8\uff09 + ROM + PLA + PAL + \u67e5\u627e\u8868(Lookup tables) \u5b83\u4eec\u88ab\u89c6\u4e3a\u7ed3\u6784\u5316\u5b9e\u73b0\u65b9\u6cd5(structrued implementation methods)\uff0c\u56e0\u4e3a\u5728\u5404\u79cd\u60c5\u51b5\u4e2d\uff0c\u5b83\u4eec\u6f5c\u5728\u7684\u7ed3\u6784\u5df2\u7ecf\u505a\u4e86\u9884\u8bbe\uff08\u5373\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9btechniques\uff0c\u800c\u4e0d\u53bb\u5173\u6ce8\u5b83\u7684\u7ec6\u8282\uff09</p>"},{"location":"notebooks/dld/6/","title":"Chap 6 Registers and Register Transfers","text":":material-circle-edit-outline: \u7ea6 6969 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 23 \u5206\u949f"},{"location":"notebooks/dld/6/#registers-and-load-enable","title":"Registers and Load Enable","text":"<p>\u5f53n\u5f88\u5927\u65f6\uff0c\u72b6\u6001\u548c\u8f93\u5165\u7ec4\u5408\u7684\u6570\u91cf\u5c06\u968f\u4e4b\u53d8\u5927\uff0c\u6b64\u65f6\u7528\u72b6\u6001\u56fe/\u72b6\u6001\u8868\u6a21\u578b\u7684\u8868\u793a\u5c31\u4e0d\u592a\u73b0\u5b9e\u4e86\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u7528\u5bc4\u5b58\u5668\u4f20\u8f93\u5c42\u7ea7(Register Transfer Level, RTL) \u8bbe\u8ba1\u6a21\u578b\u6765\u63cf\u8ff0\u590d\u6742\u7535\u8def\u7684\u5927\u91cf\u72b6\u6001\u3002\u5728RTL\u8bbe\u8ba1\u65b9\u6cd5\u4e2d\uff0c\u901a\u8fc7\u4e0d\u540c\u7c7b\u578b\u7684\u5bc4\u5b58\u5668\u548c\u7ec4\u5408\u7535\u8def\u6765\u6784\u5efa\u57fa\u672c\u5757\uff0c\u5b9e\u73b0\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u7684\u8bbe\u8ba1\u3002</p> <p>\u5927\u578b\u6570\u5b57\u7cfb\u7edf\u7684\u8bbe\u8ba1\u5f80\u5f80\u91c7\u7528\u6a21\u5757\u5316(modular)\u3001\u5206\u5c42(hierarchical) \u7684\u65b9\u6cd5\uff0c\u5c06\u7cfb\u7edf\u5212\u5206\u4e3a\u4e00\u4e9b\u5b50\u7cfb\u7edf\u6216\u6a21\u5757\uff0c\u5305\u62ec\u5bc4\u5b58\u5668\u3001\u8ba1\u6570\u5668\u3001\u8bd1\u7801\u5668\u3001\u591a\u8def\u590d\u7528\u5668\u3001\u603b\u7ebf\u3001\u7b97\u672f\u5143\u4ef6\u3001\u89e6\u53d1\u5668\u548c\u57fa\u672c\u95e8\u7b49\u3002</p> <p>n\u4f4d\u5bc4\u5b58\u5668(register) \u7531\u4e00\u7ec4\u89e6\u53d1\u5668\u548c\u7ec4\u5408\u903b\u8f91\u95e8\u6784\u6210\uff0c\u51b3\u5b9a\u65b0\u7684\u6216\u6539\u53d8\u8fc7\u7684\u6570\u636e\u662f\u5426\u8981\u4f20\u8f93\u81f3\u89e6\u53d1\u5668 + n\u4f4d\u89e6\u53d1\u5668\u4fdd\u6301\u6570\u636e\uff0c\u6216\u8005\u5b58\u50a8\u4e8c\u8fdb\u5236\u5411\u91cf\u503c + \u7ec4\u5408\u903b\u8f91\u95e8\u6267\u884c\u6570\u636e\u52a0\u5de5\u4efb\u52a1  \u8ba1\u6570\u5668(counter)\uff1a\u4e00\u79cd\u5728\u5e94\u7528\u65f6\u949f\u8109\u51b2\u7684\u60c5\u51b5\u4e0b\uff0c\u626b\u63cf\u5305\u542b\u72b6\u6001\u7684\u5e8f\u5217\u7684\u5bc4\u5b58\u5668(?\u7ffb\u8bd1\u7684\u4e0d\u592a\u597d)</p> <p>\u5bc4\u5b58\u5668\u548c\u8ba1\u6570\u5668\u90fd\u662f\u65f6\u5e8f\u51fd\u6570\u5757(sequential functional blocks) + \u5bc4\u5b58\u5668\u4e3b\u8981\u7528\u4e8e\u5b58\u50a8\u548c\u64cd\u7eb5\u4fe1\u606f + \u8ba1\u6570\u5668\u4e3b\u8981\u7528\u4e8e\u5e8f\u5217\u548c\u63a7\u5236\u64cd\u4f5c</p> <p>\ud83c\udf30\uff1a 1. \u7b80\u5355\u76842\u4f4d\u5bc4\u5b58\u5668 2. 4\u4f4d\u5bc4\u5b58\u5668</p> <p>\u6ce8\uff1a\u8fd9\u91cc\u591a\u4e86\u4e00\u4e2a\u6e05\u9664\u8f93\u5165\\(\\overline{Clear}\\)\uff0c\u7528\u4e8e\u5728\u6b63\u5f0f\u8fd0\u884c\u524d\u7684\u521d\u59cb\u5316(\u5bc4\u5b58\u5668\u7684\u6240\u6709\u503c\u5747\u7f6e0)\uff0c\u5f53\\(\\overline{Clear} = 0\\)\u65f6\uff0c\u5bf9\u89e6\u53d1\u5668\u8fdb\u884c\u5f02\u6b65\u7684\u590d\u4f4d\u3002\u5728\u6b63\u5e38\u8fd0\u884c\u65f6\uff0c\\(\\overline{Clear}\\)\u5e94\u4fdd\u63011\uff0c\u9664\u975e\u9700\u8981\u590d\u4f4d\u3002\u8fd9\u4e2a\u8f93\u5165\u662f\u53ef\u9009\u7684</p> <p>\u73b0\u5b9e\u60c5\u51b5\uff1aD\u89e6\u53d1\u5668\u5bc4\u5b58\u5668\u80fd\u5728\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u91cc\u52a0\u8f7d(loading) \u4fe1\u606f</p> <p>\u52a0\u8f7d(loading)\uff1a\u5c06\u65b0\u7684\u4fe1\u606f\u4f20\u8f93\u81f3\u5bc4\u5b58\u5668\u5185\u3002\u5982\u679c\u5bc4\u5b58\u5668\u7684\u6240\u6709\u4f4d\u540c\u65f6\u52a0\u8f7d\uff0c\u79f0\u52a0\u8f7d\u662f\u5e76\u884c\u5b8c\u6210\u7684</p> <p>\u5bc4\u5b58\u5668\u7684\u7b26\u53f7\uff1a</p> <p>\u6ce8\uff1a\u7531\u4e8eClear\u5199\u5728\u65b9\u6846\u5185\u90e8\uff0c\u4e14\u5916\u90e8\u6709\u4e2a\u5706\u5708\uff0c\u56e0\u6b64Clear\u6ca1\u6709\u53d6\u53cd\uff1b\u4f46\u5982\u679cClear\u5199\u5728\u5916\u9762\uff0c\u5c31\u9700\u8981\u5199\u6210\\(\\overline{Clear}\\)</p> <p>\u89c2\u5bdf\uff1a + \u5bc4\u5b58\u5668\u80fd\u5b58\u50a8\u591a\u65f6\u949f\u5468\u671f\u7684\u4fe1\u606f + \u4e3a\u4e86\u201c\u5b58\u50a8\u201d\u6216\u201d\u52a0\u8f7d\u201c\u4fe1\u606f\uff0c\u5bc4\u5b58\u5668\u9700\u8981\u88ab\u63a7\u5236\u4fe1\u53f7\u63a7\u5236 </p> <p>\u5b9e\u73b0\u65b9\u6cd5\uff1a + \u7528\u4e00\u4e2a\u4fe1\u53f7\u6765\u963b\u6b62\u5bc4\u5b58\u5668\u7684\u65f6\u949f\u8f93\u5165 \ud83d\udc49[[Chap 6 Registers and  Register Transfers#Registers with Clock Gating|\u4f20\u9001\u95e8]] + \u7528\u4e00\u4e2a\u4fe1\u53f7\uff0c\u5c06\u5bc4\u5b58\u5668\u7684\u8f93\u51fa\u53cd\u9988\u81f3\u5b83\u7684\u8f93\u5165\ud83d\udc49[[Chap 6 Registers and  Register Transfers#Registers with Load-Controlled Feedback|\u4f20\u9001\u95e8]]</p> <p>\u8d1f\u8f7d(load)\uff1a\u63a7\u5236\u5bc4\u5b58\u5668\u7684\u5b58\u50a8\u548c\u52a0\u8f7d\u7684\u4fe1\u53f7\uff1a + load = 1\uff1a\u52a0\u8f7d\u6570\u636e\u8f93\u5165\u7684\u503c + load = 0\uff1a\u5c06\u503c\u5b58\u50a8\u81f3\u5bc4\u5b58\u5668\u5185</p>"},{"location":"notebooks/dld/6/#registers-with-clock-gating","title":"Registers with Clock Gating","text":"<p>\u4e3b\u65f6\u949f\u751f\u6210\u5668(master clock generator)\uff1a\u63d0\u4f9b\u4e00\u7cfb\u5217\u7684\u65f6\u949f\u8109\u51b2\uff0c\u5e94\u7528\u4e8e\u6240\u6709\u89e6\u53d1\u5668\u548c\u5bc4\u5b58\u5668</p> <p>\u5f15\u5165\u52a0\u8f7d(Load) \u4fe1\u53f7\u5bf9\u65f6\u949f\u4fe1\u53f7\u8fdb\u884c\u4f7f\u80fd\u64cd\u4f5c\uff1a + \\(Load = 0\\)\uff1a\u5141\u8bb8\u65f6\u949f\u4fe1\u53f7 + \\(Load = 1\\)\uff1a\u963b\u6b62\u65f6\u949f\u4fe1\u53f7 </p> <p>\u95e8\u63a7\u65f6\u949f(clock gating)\uff1a\u901a\u8fc7\u903b\u8f91\u95e8\uff0c\u5bf9\u5bc4\u5b58\u5668\u7684\u65f6\u949f\u8fdb\u884c\u5f00\u5173\u64cd\u4f5c</p> <p>\u6ce8\uff1a + \u5bf9\u4e8e\u516c\u5f0f\\(C = Clock + \\overline{Load}\\)   + \u5f53\\(Load = 0\\)\u65f6\uff0c\\(C = 1\\)\uff0c\u65f6\u949f\u4fe1\u53f7\u5c31\u5931\u53bb\u63a7\u5236\u4f5c\u7528\u4e86   + \u5f53\\(Load = 1\\)\u65f6\uff0c\\(C = Clock\\)\uff0c\u65f6\u949f\u4fe1\u53f7\u53d1\u6325\u4f5c\u7528 + \u53ef\u80fd\u7684\u95ee\u9898\uff1a\u95e8\u7684\u4f7f\u7528\u4ea7\u751f\u4e0d\u540c\u7684\u4f20\u64ad\u5ef6\u8fdf\uff0c\u4ece\u800c\u5bfc\u81f4\u65f6\u949f\u504f\u5dee(time skew) \u7684\u4ea7\u751f\u2014\u2014\u5728\u540c\u6b65\u65f6\u5e8f\u7535\u8def\u4e2d\uff0c\u76f8\u540c\u7684\u6e90\u65f6\u949f\u4fe1\u53f7\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u91cc\u5230\u8fbe\u4e0d\u540c\u7684\u5143\u4ef6\u4e2d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u91c7\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\ud83d\udc47</p>"},{"location":"notebooks/dld/6/#registers-with-load-controlled-feedback","title":"Registers with Load-Controlled Feedback","text":"<p>\u89e3\u51b3\u65b9\u6848\uff1a + \u4fdd\u6301\u65f6\u949f\u7684\u8fde\u7eed\u8fd0\u884c + \u9009\u62e9\u6027\u5730\u4f7f\u7528\u52a0\u8f7d\u63a7\u5236\uff0c\u6765\u6539\u53d8\u5bc4\u5b58\u5668\u5185\u7684\u503c \u7535\u8def\u5b9e\u73b0\uff1a</p> <p>\u95ee\uff1a\u4e3a\u4ec0\u4e48\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u5230\u8f93\u5165\u95f4\u6709\u4e00\u6761\u53cd\u9988\u7ebf\u8def\uff1f \u7b54\uff1aD\u89e6\u53d1\u5668\u6ca1\u6709\u4fdd\u6301\u8f93\u51fa\u4e0d\u53d8\u7684\u8f93\u5165\u6761\u4ef6\u3002\u4e3a\u4e86\u5b9e\u73b0\u4fdd\u6301\uff0c\u9700\u8981\u8ba9\u8f93\u5165\u503c\u7b49\u4e8e\u5f53\u524d\u7684\u8f93\u51fa\u503c\uff0c\u56e0\u6b64\u4fbf\u6709\u4e86\u4e0a\u9762\u7684\u7535\u8def\uff0c\u79f0\u4e3a\u5e26\u4f7f\u80fd\u7684D\u89e6\u53d1\u5668(D flip-flop with enable)\u3002\u8fd9\u79cd\u65b9\u6cd5\u907f\u514d\u4e86\u65f6\u949f\u504f\u5dee\uff0c\u6240\u4ee5\u66f4\u63a8\u8350\u8fd9\u4e2a\u65b9\u6848\u3002</p> <p>\ud83c\udf30\uff1a\u5e26\u6709\u5e76\u884c\u52a0\u8f7d\u76844\u4f4d\u5bc4\u5b58\u5668 + \\(Load = 0\\)\uff0c\u4fdd\u6301\u5f53\u524d\u7684\u503c + \\(Load = 1\\)\uff0c\u52a0\u8f7d\u65b0\u7684\u503c</p> <p>\u6ce8\uff1a\u786c\u4ef6\u5f80\u5f80\u6bd4\u95e8\u63a7\u65f6\u949f\u66f4\u590d\u6742\uff0c\u3002\u3002</p>"},{"location":"notebooks/dld/6/#datapath-and-control-signals","title":"Datapath and Control Signals","text":"<ul> <li>\u6570\u636e\u901a\u8def(datapath) \u662f\u6267\u884c\u6570\u636e\u52a0\u5de5\u64cd\u4f5c(\u5bc4\u5b58\u5668\u4f20\u8f93\u548c\u5fae\u64cd\u4f5c)\u7684\u4e00\u7ec4\u51fd\u6570\u5355\u5143(\u6bd4\u5982ALU, MUX)\uff0c\u5bc4\u5b58\u5668\u548c\u603b\u7ebf</li> <li>\u63a7\u5236\u5355\u5143(control unit) \u4ea7\u751f\u63a7\u5236\u4fe1\u53f7\uff0c\u544a\u8bc9\u6570\u636e\u901a\u8def\u8981\u505a\u4ec0\u4e48(\u51b3\u5b9a\u64cd\u4f5c\u5e8f\u5217)</li> </ul> <p>[!note] + \u63a7\u5236\u4fe1\u53f7(control signal)\uff1a\u7528\u6765\u6fc0\u6d3b\u5404\u79cd\u6570\u636e\u52a0\u5de5\u64cd\u4f5c\u7684\u4fe1\u53f7 + \u6570\u636e\u901a\u8def\u548c\u63a7\u5236\u5355\u5143\u4e5f\u548c\u6570\u5b57\u7cfb\u7edf\u7684\u5176\u4ed6\u90e8\u5206\u76f8\u4e92\u8fde\u63a5\uff0c\u6bd4\u5982\u5185\u5b58\u548cI/O\uff08\u56fe\u4e2d\u5df2\u6807\u51fa\uff09</p>"},{"location":"notebooks/dld/6/#register-transfer-operations","title":"Register Transfer Operations","text":"<p>\u5bc4\u5b58\u5668\u4f20\u8f93\u64cd\u4f5c(register transfer operations)\uff1a\u5bf9\u5b58\u50a8\u4e8e\u5bc4\u5b58\u5668\u5185\u7684\u6570\u636e\u8fdb\u884c\u79fb\u52a8\u548c\u52a0\u5de5\u64cd\u4f5c\uff0c\u5b83\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a + \u4e00\u7ec4\u5bc4\u5b58\u5668 + \u5bf9\u4e8e\u5b58\u50a8\u4e8e\u5bc4\u5b58\u5668\u7684\u6570\u636e\u8fdb\u884c\u57fa\u672c\u64cd\u4f5c(operations)\u2014\u2014\u5fae\u64cd\u4f5c(microoperations)\uff1a\u52a0\u8f7d(load)\u3001\u8ba1\u6570(count)\u3001\u79fb\u4f4d(shift)\u3001\u52a0(add)\u3001\u6309\u4f4d\u6216(bitwise OR)\u2026\u2026 + \u63a7\u5236\u64cd\u4f5c\uff0c\u76d1\u7763\u7cfb\u7edf\u7684\u64cd\u4f5c\u5e8f\u5217</p> <p>\u5fae\u64cd\u4f5c(microoperation)\uff1a\u901a\u5e38\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u5904\u7406\u4f4d\u5411\u91cf(\u6570\u7ec4)\u3002\u5fae\u64cd\u4f5c\u7684\u7ed3\u679c\u8981\u4e48\u7528\u6765\u6539\u53d8\u5bc4\u5b58\u5668\u5185\u539f\u6765\u7684\u503c\uff1b\u8981\u4e48\u88ab\u4f20\u5230\u53e6\u4e00\u4e2a\u5bc4\u5b58\u5668\uff0c\u800c\u4e0d\u4f1a\u6539\u53d8\u539f\u5148\u7684\u6570\u636e</p> <p>\u5bc4\u5b58\u5668\u4f20\u8f93\u8bed\u8a00(register transfer language, RTL)</p> <p></p> <p>\u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u57fa\u672c\u7b26\u53f7\uff1a</p> <p>[!note] + \u7279\u6b8a\u610f\u4e49\u7684\u5b57\u6bcd\uff1a   + AR\uff1a\u5730\u5740\u5bc4\u5b58\u5668(address register)   + PC\uff1a\u7a0b\u5e8f\u8ba1\u6570\u5668(program counter)   + IR\uff1a\u547d\u4ee4\u5bc4\u5b58\u5668(instruction register) + n\u4f4d\u5bc4\u5b58\u5668\uff0c\u6807\u53f7\u4e3a0~n-1\uff0c\u9ed8\u8ba40\u6807\u5728\u6700\u53f3\u8fb9\uff0c\u4ece\u53f3\u5f80\u5de6\u6807\u53f7\uff0c\u8fd9\u79cd\u987a\u5e8f\u79f0\u4e3a\u5c0f\u7aef\u5e8f(little-endian)\uff0c\u76f8\u53cd\u7684\u987a\u5e8f(\u53730\u5728\u6700\u5de6\u8fb9\uff0c\u4ece\u5de6\u5f80\u53f3\u6807\u53f7)\u79f0\u4e3a\u5927\u7aef\u5e8f(big-endian) + \u770b\u5230\u4e0a\u65b9\u56fe(d)\uff1a\u6211\u4eec\u7528L\u8868\u793a\u4f4e\u9636\u5b57\u82820<sub>7\uff0c\u7528H\u8868\u793a\u9ad8\u9636\u5b57\u82828</sub>15\u3002PC(L)\u53ef\u4ee5\u5199\u6210PC(7:0)\uff0cPC(H)\u53ef\u4ee5\u5199\u6210PC(15:8) + R1 \\(\\leftarrow\\) R2\u8868\u793a\u5c06R2\u7684\u526f\u672c\u503c\u4f20\u8f93\u7ed9R1\uff0c\u5176\u4e2dR2\u88ab\u79f0\u4e3a\u6e90(source)\uff0cR1\u88ab\u79f0\u4e3a\u76ee\u7684\u5730(destination) + \u65f6\u949f\u4e0d\u4f1a\u51fa\u73b0\u5728\u5bc4\u5b58\u5668\u4f20\u8f93\u64cd\u4f5c\u4e2d</p> <p>\u6761\u4ef6\u4f20\u8f93(conditional transfer)</p> <p>If (K1 = 1) then (R2 \\(\\leftarrow\\) R1) \u53ef\u4ee5\u7b80\u8bb0\u4e3a\uff1a $$ K1: (R2 \\leftarrow R1) $$ \u5176\u4e2dK1\u4e3a\u63a7\u5236\u53d8\u91cf\uff0c\u5177\u4f53\u8bf4\u660e\u5fae\u64cd\u4f5c\u7684\u6761\u4ef6\u6267\u884c</p> <p>\u56fe\u793a\uff1a</p> <p>\u800c\\(K3: R2 \\leftarrow R1, R1 \\leftarrow R2\\) \u8868\u793a\u540c\u65f6\u4ea4\u6362R1\u548cR2\u7684\u503c</p> <p>RTL, VHDL\u548cVerilog\u7684\u5bc4\u5b58\u5668\u4f20\u8f93\u7b26\u53f7 </p>"},{"location":"notebooks/dld/6/#microoperations","title":"Microoperations","text":"<p>\u5fae\u64cd\u4f5c(microoperation) \u76844\u79cd\u7c7b\u578b\uff1a + \u4f20\u8f93(transfer)\uff1a\u5c06\u6570\u636e\u4ece\u67d0\u4e2a\u5bc4\u5b58\u5668\u79fb\u5230\u53e6\u4e00\u4e2a + \u7b97\u672f(arithmetic)\uff1a\u5bf9\u5b58\u50a8\u5668\u5185\u7684\u6570\u636e\u6267\u884c\u7b97\u672f\u8fd0\u7b97     + \u52a0\u6cd5 +     + \u51cf\u6cd5 -\uff08\u4e00\u822c\u7528\u8865\u7801\u5b9e\u73b0\uff0c\u5177\u4f53\u64cd\u4f5c\u89c1[[Chap 3 Combinational Logical Design#Unsigned 2's Complement Subtraction|\u8fd9\u91cc]]\uff09     + \u4e58\u6cd5 *     + \u9664\u6cd5 / + \u903b\u8f91(logic)\uff1a\u64cd\u7eb5\u6570\u636e\uff0c\u6216\u8005\u6267\u884c\u6309\u4f4d\u903b\u8f91\u8fd0\u7b97     + \u903b\u8f91\u6216 \\(\\vee\\)     + \u903b\u8f91\u4e0e \\(\\wedge\\)     + \u903b\u8f91\u5f02\u6216 \\(\\oplus\\)     + \u975e \\(\\overline{}\\) + \u79fb\u4f4d(shift)\uff1a\u5bf9\u5bc4\u5b58\u5668\u5185\u7684\u6570\u636e\u8fdb\u884c\u79fb\u4f4d</p> <p>\ud83c\udf30\uff1a + \u7b97\u672f\u5fae\u64cd\u4f5c </p> <p>\u6ce8\uff1a\u5173\u6ce8\u7b2c2,3\u884c(\u53cd\u7801\u3001\u8865\u7801\u7684\u8868\u793a)</p> <ul> <li>\u903b\u8f91\u5fae\u64cd\u4f5c  <p>\u6ce8\uff1a\u5bf9\u4e8en\u4f4d\u7684\u5bc4\u5b58\u5668\uff0c\u4e00\u4e2a\u903b\u8f91\u5fae\u64cd\u4f5c\u9700\u8981\u7684\u95e8\u7684\u6570\u91cf\u4e3an\u4e2a</p> </li> </ul> <p>\ud83c\udf30\uff1a 1.  $$ (K1 + K2): R1 \\leftarrow R1 \\vee R3 $$</p> <p>\u6ce8\uff1a + \u6761\u4ef6\u4e2d\u51fa\u73b0\u7684'+'\u8868\u793a\u201c\u6216\u201d\u8fd0\u7b97 + \u800c\\(R1 \\leftarrow R1 + R3\\) \u4e2d\u7684\u2018+\u2019\u8868\u793a\u201c\u52a0\u6cd5\u201d\u5fae\u64cd\u4f5c + \u7528\u201c\\(\\vee\\)\u201d\u8868\u793a\u201c\u6216\u201d\u5fae\u64cd\u4f5c</p> <ol> <li> <p>\u903b\u8f91\u5fae\u64cd\u4f5c\u5b9e\u73b0\u63a9\u7801(mask)\u529f\u80fd\uff1a</p> <ul> <li>\u903b\u8f91\u4e0e\uff1a     \u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u4ec5\u4fdd\u7559\u4e86R1\u7684\u4f4e\u4f4d\u90e8\u5206\uff0c\u9ad8\u4f4d\u90e8\u5206\u5747\u53d8\u62100</li> <li>\u903b\u8f91\u6216\uff1a     \u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u4ec5\u4fdd\u7559\u4e86R1\u7684\u4f4e\u4f4d\u90e8\u5206\uff0c\u9ad8\u4f4d\u90e8\u5206\u5747\u53d8\u62101</li> <li>\u903b\u8f91\u5f02\u6216\uff1a\u53ef\u4ee5\u53d1\u73b0R1\u7684\u4f4e\u4f4d\u90e8\u5206\u5f97\u5230\u4fdd\u7559\uff0c\u800c\u9ad8\u4f4d\u90e8\u5206\u5168\u90e8\u53d6\u53cd</li> </ul> </li> <li> <p>\u79fb\u4f4d\u5fae\u64cd\u4f5c </p> <p>\u6ce8\uff1a + \u2b50\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\u8bf7[[Chap 6 Registers and  Register Transfers#Shift Registers|\u79fb\u6b65]] + \u79fb\u4f4d\u5f80\u5f80\u7528\u5230\u201c0\u586b\u5145(zero fill)\u201d\uff1a\u5de6\u79fb-\u53f3\u8fb9\u88650\uff0c\u53f3\u79fb-\u5de6\u8fb9\u88650\u3002\u8fd9\u6837\u7684\u4f4d\u79f0\u4e3a\u8fdb\u5165\u4f4d(incoming bit) + \u79fb\u51fa\u53bb\u7684\u4f4d\u4e00\u822c\u5c31\u629b\u5f03\u6389\uff0c\u8fd9\u79cd\u4f4d\u79f0\u4e3a\u79fb\u51fa\u4f4d(outgoing bit) + \u6709\u65f6\uff0c\u9700\u8981\u75281\u4e2a\u5355\u72ec\u7684\u89e6\u53d1\u5668\u63d0\u4f9b\u8981\u79fb\u4f4d\u7684\u6570\u636e\uff0c\u6216\u8005\u83b7\u53d6\u79fb\u4f4d\u540e\u7684\u6570\u636e + \u8fd8\u6709\u66f4\u590d\u6742\u7684\u79fb\u4f4d\uff08\u7ffb\u8f6c\uff0c\u7b97\u672f\u8fd0\u7b97\u2026\u2026\uff09\uff08\u89c1Chap 9\uff09 + \u8fd8\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u4f4d\u7684\u79fb\u52a8\uff0c\u5982\u679c\u901a\u8fc71\u4e2a\u53d8\u91cf\u6307\u5b9a\u79fb\u52a8\u7684\u4f4d\u6570\uff0c\u79f0\u8be5\u53d8\u91cf\u4e3a\u79fb\u4f4d\u91cf(shift amount)</p> </li> </ol>"},{"location":"notebooks/dld/6/#control-expressions","title":"Control Expressions","text":"<p>\u67d0\u4e2a\u8fd0\u7b97\u7684\u63a7\u5236\u8868\u8fbe\u5f0f(control expression) \u5177\u4f53\u8bf4\u660e\u4e86\u8fd0\u7b97\u7684\u903b\u8f91\u6761\u4ef6\uff1a + if \u63a7\u5236\u8868\u8fbe\u5f0f == \u903b\u8f91\u20181\u2019 \\(\\rightarrow\\) \u6267\u884c\u8fd0\u7b97 + if \u63a7\u5236\u8868\u8fbe\u5f0f == \u903b\u8f91\u20180\u2019 \\(\\rightarrow\\) \u4e0d\u6267\u884c\u8fd0\u7b97</p> <p>\ud83c\udf30\uff1a\u52a0\u6cd5/\u51cf\u6cd5\u5668\uff08\u8fd0\u7b97\u7ed3\u679c\u8d4b\u7ed9R1\uff09 $$ \\begin{align} \\overline{X} \\cdot K1: &amp; R1 \\leftarrow R1 + R2 \\ X \\cdot K1: &amp; R1 \\leftarrow R1 + \\overline{R2} + 1 \\end{align} $$</p> <p>\u6ce8\uff1a\\(X\\)\u51b3\u5b9a\u8fd0\u7b97\u6a21\u5f0f(0\uff1a\u52a0\u6cd5\uff0c1\uff1a\u51cf\u6cd5)\uff0c\\(K1\\)\u4e3a\u4f7f\u80fd\u4fe1\u53f7</p> <p>\u7535\u8def\u5b9e\u73b0\uff1a </p> <p>\u6ce8\uff1a\u6ea2\u51fa(\u5373\u6700\u9ad8\u4f4d\u7684\u8fdb\u4f4d) \u8f93\u51fa\u4f1a\u88ab\u4f20\u8f93\u5230V\u4e2d(\u4e00\u4e2a\u89e6\u53d1\u5668)(\u524d\u63d0\u662fK1 = 1)</p>"},{"location":"notebooks/dld/6/#register-transfer-structures","title":"Register Transfer Structures","text":"<p>\u7c7b\u522b\uff1a + \u57fa\u4e8e\u591a\u8def\u9009\u62e9\u5668\u7684\u4f20\u8f93(multiplexer-based transfer)\uff1a\u7531\u5bc4\u5b58\u5668\u7684\u4e13\u6709(dedicated)MUX\uff0c\u4ece\u591a\u4e2a\u8f93\u5165\u4e2d\u8fdb\u884c\u6311\u9009 + \u57fa\u4e8e\u603b\u7ebf\u7684\u4f20\u8f93(bus-based transfer)\uff1a\u7531\u4e00\u4e2a\u5171\u7528\u7684MUX(\u5b83\u9a71\u52a8\u4e00\u6761\u5411\u591a\u4e2a\u5bc4\u5b58\u5668\u63d0\u4f9b\u8f93\u5165\u7684\u603b\u7ebf)\u4ece\u591a\u4e2a\u8f93\u5165\u4e2d\u8fdb\u884c\u6311\u9009 + \u4e09\u6001\u603b\u7ebf(three-state bus)\uff1a\u7531\u4e00\u4e2a\u4e09\u6001\u95e8\u9a71\u52a8\u5668(\u5176\u8f93\u51fa\u4e0e\u4f9b\u7ed9\u591a\u4e2a\u5bc4\u5b58\u5668\u7684\u603b\u7ebf\u76f8\u8fde\u63a5)\u4ece\u591a\u4e2a\u8f93\u5165\u4e2d\u8fdb\u884c\u6311\u9009 + \u5176\u4ed6\u4f20\u8f93\u7ed3\u6784\uff1a\u4f7f\u7528\u591a\u4e2aMUX\uff0c\u591a\u6761\u603b\u7ebf\uff0c\u6216\u8005\u4e0a\u8ff0\u7c7b\u522b\u7684\u7ec4\u5408</p>"},{"location":"notebooks/dld/6/#multiplexer-based-transfers","title":"Multiplexer-Based Transfers","text":"<p>\ud83c\udf30\uff1a \u4f20\u8f93\u4e3a\uff1a $$ K1: R0 \\leftarrow R1 \\quad K2\\overline{K1}: R0 \\leftarrow R2 $$ \u6846\u56fe\uff1a </p> <p>\u66f4\u8be6\u7ec6\u7684\u903b\u8f91\u56fe\uff1a </p>"},{"location":"notebooks/dld/6/#bus-based-transfers","title":"Bus-Based Transfers","text":"<p>\u57fa\u4e8e\u603b\u7ebf\u7684\u5bc4\u5b58\u5668\u5305\u62ec\uff1a + \u5bc4\u5b58\u5668\u7684\u4e13\u7528\u591a\u8def\u9009\u62e9\u5668(multiplexer dedicated to ...) + \u603b\u7ebf(bus)\uff1a\u5bc4\u5b58\u5668\u7684\u5171\u4eab\u4f20\u8f93\u8def\u5f84 + \u603b\u7ebf\u5b9e\u73b0\u8981\u7528\u5230\uff1a     + \u591a\u8def\u9009\u62e9\u5668     + \u4e09\u6001\u95e8</p> <p>\u5728\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f4d\u7684\u4e2a\u6570 = \u63a5\u6536\u5bc4\u5b58\u5668\u7684\u957f\u5ea6\uff1f</p>"},{"location":"notebooks/dld/6/#dedicated-mux-based-transfers","title":"Dedicated MUX-Based Transfers","text":"<p>\u6ce8\uff1a + \u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u7075\u6d3b\u7684\u4f20\u8f93\u7ed3\u6784 + \u80fd\u591f\u5b9e\u73b0\u540c\u6b65\u4f20\u8f93 + 18\u4e2a\u95e8\u8f93\u5165 / \u4f4d + 3\u4e2a\u6765\u81ea3\u4e2a\u5171\u4eab\u975e\u95e8\u7684\u8f93\u5165</p>"},{"location":"notebooks/dld/6/#multiplexer-bus","title":"Multiplexer Bus","text":"<p>\u6ce8\uff1a + \u7531\u4e00\u4e2a\u591a\u8def\u590d\u7528\u5668\u9a71\u52a8\u7684\u5355\u4e2a\u603b\u7ebf\uff0c\u76f8\u6bd4\u4e13\u7528MUX\u51cf\u5c11\u4e86\u6210\u672c\uff0c\u4f46\u662f\u9650\u5236\u4e86\u53ef\u7528\u7684\u4f20\u8f93 + \u80fd\u591f\u5b9e\u73b0\u540c\u6b65\u4f20\u8f93 + 8\u8f93\u5165\u5171\u4eab\u8bd1\u7801\u5668 + 9\u4e2a\u95e8\u8f93\u5165 / \u4f4d</p> <p>\u7406\u89e3\u4e13\u7528MUX\u548c\u603b\u7ebf\u7684\u533a\u522b\uff1a </p>"},{"location":"notebooks/dld/6/#three-state-bus","title":"Three-State Bus","text":"<p>\u6ce8\uff1a + \u7528\u4e09\u6001\u95e8\u66ff\u4ee33\u8f93\u5165MUX\uff0c\u8fdb\u4e00\u6b65\u51cf\u5c11\u6210\u672c\uff0c\u4f46\u4f20\u8f93\u8fd8\u662f\u53d7\u9650\u7684 + \u80fd\u591f\u5b9e\u73b0\u540c\u6b65\u4f20\u8f93 + 9\u4e2a\u95e8\u8f93\u5165 + \u8fd9\u91cc\u7684\u7b26\u53f7\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b80\u5316\uff1a  \u6240\u4ee5\u53d8\u6210\u4e86\uff1a</p>"},{"location":"notebooks/dld/6/#methods-for-sequential-circuit-design","title":"Methods for Sequential Circuit Design","text":"<p>\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1\u7684\u4e24\u79cd\u65b9\u6cd5\uff1a + \u57fa\u672c\u8bbe\u8ba1\u65b9\u6cd5\uff1a\u5c06\u89e6\u53d1\u5668\u548c\u903b\u8f91\u95e8\u4f5c\u4e3a\u57fa\u672c\u7684\u6784\u5efa\u6a21\u5757 + \u5bc4\u5b58\u5668\u4f20\u8f93\u5c42\u7ea7(register transfer level, RTL)\u8bbe\u8ba1\uff1a\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u5bc4\u5b58\u5668(e.g. \u8ba1\u6570\u5668\uff0c\u79fb\u4f4d\u5bc4\u5b58\u5668)\u548c\u51fd\u6570\u5757(e.g. MUX, \u52a0\u6cd5\u5668)\u4f5c\u4e3a\u57fa\u672c\u7684\u6784\u5efa\u6a21\u5757</p> <p>\u6ce8\uff1aRTL\u8bbe\u8ba1\u662f\u4e00\u79cd\u6570\u636e\u6d41\u65b9\u6cd5\u2014\u2014\u80fd\u591f\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u5bc4\u5b58\u5668\u4f20\u5230\u53e6\u4e00\u4e2a</p> <p>\u6bd4\u8f83\uff1a</p> Basic Design RTL Design \u57fa\u672c\u6784\u5efa\u5757\u4e3a\u903b\u8f91\u95e8\u548c\u89e6\u53d1\u5668 \u57fa\u672c\u6784\u5efa\u5757\u4e3a\u5bc4\u5b58\u5668\u548c\u51fd\u6570\u5757 \u672c\u8d28\u4e0a\u66f4\u52a0\u673a\u68b0\u5316 \u66f4\u8d34\u5408\u884c\u4e3a\u63cf\u8ff0\uff0c\u66f4\u52a0\u7b26\u5408\u76f4\u89c9(\u5efa\u7acb\u4e86\u6570\u636e\u6d41\u6a21\u578b) \u4ec5\u9002\u7528\u4e8e\u72b6\u6001\u6570\u91cf\u5c11\u7684\u7535\u8def \u80fd\u591f\u5b9e\u73b0\u5177\u6709\u5927\u91cf\u72b6\u6001\u7684\u590d\u6742\u7535\u8def"},{"location":"notebooks/dld/6/#shift-registers","title":"Shift Registers","text":"<p>\u79fb\u4f4d\u5bc4\u5b58\u5668(shift register) \u80fd\u5c06\u6570\u636e\u5411MSB\u6216LSB\u7684\u4f4d\u7f6e\u79fb\u52a8</p>"},{"location":"notebooks/dld/6/#serial-shift-register","title":"Serial Shift Register","text":"<p>\u5728\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e2d\uff0c\u79fb\u4f4d\u5bc4\u5b58\u5668\u4ec5\u6709\u4e00\u7ec4\u6309\u884c\u6392\u5217\u8fde\u63a5\u8d77\u6765\u7684D\u89e6\u53d1\u5668\u6784\u6210\uff1a  + \u4e32\u884c\u8f93\u5165/\u53f3\u79fb\u8f93\u5165(serial input/ shift right input)\u2014\u2014\u6570\u636e\u8f93\u5165 + \u4e32\u884c\u8f93\u51fa(serial output)\u2014\u2014\u6570\u636e\u8f93\u51fa + \u5e76\u884c\u8f93\u51fa(parallel output)\u2014\u2014\u5411\u91cf(A, B, C, Out)</p> <p>\u7b26\u53f7\uff1a </p> <p>\u884c\u4e3a\u8868\uff1a  + T0\uff1a\u7b2c1\u4e2a\u65f6\u949f\u8109\u51b2\u53d1\u751f\u524d\uff0c\u5bc4\u5b58\u5668\u7684\u72b6\u6001 + T1\uff1a\u7b2c1\u4e2a\u65f6\u949f\u540e\uff0c\u7b2c2\u4e2a\u65f6\u949f\u524d\u7684\u72b6\u6001 + \u6700\u521d\u7684\u672a\u77e5\u72b6\u6001\u7528\u201c?\u201d\u8868\u793a</p>"},{"location":"notebooks/dld/6/#parallel-load-shift-registers","title":"Parallel Load Shift Registers","text":"<p> \u5728\u5bc4\u5b58\u5668\u4e4b\u95f4\u6dfb\u52a0MUX\uff0c\u4f7f\u5f97\u6570\u636e\u80fd\u591f\u88ab\u79fb\u4f4d\u6216\u88ab\u52a0\u8f7d + \u5982\u679cSHIFT\u5904\u4e8e\u4f4e\u7535\u5e73\uff0cA\u548cB\u7684\u6570\u636e\u88ab\\(D_A\\)\u548c\\(D_B\\)\u4e0a\u7684\u6570\u636e\u4ee3\u66ff + \u5982\u679cSHIFT\u5904\u4e8e\u9ad8\u7535\u5e73\uff0c\u6267\u884c\u79fb\u4f4d\u64cd\u4f5c \u901a\u8fc7\u6dfb\u52a0\u66f4\u591a\u7684\u4f4d\uff0c\u6211\u4eec\u80fd\u591f\u6784\u5efan\u4f4d\u5e76\u884c\u8d1f\u8f7d\u79fb\u4f4d\u5bc4\u5b58\u5668(parallel load shift registers)</p> <p>\ud83c\udf30\uff1a  \u529f\u80fd\u8868\uff1a </p> <p>\u6ce8\uff1a\u8fd9\u79cd\u79fb\u4f4d\u5bc4\u5b58\u5668\u5177\u6709\u4fdd\u6301\u64cd\u4f5c</p>"},{"location":"notebooks/dld/6/#shift-registers-with-additional-functions","title":"Shift Registers with Additional Functions","text":"<p>\u901a\u8fc7\u5728\u6bcf\u4e2a\u79fb\u4f4d\u5bc4\u5b58\u5668\u91cc\u7684D\u89e6\u53d1\u5668\u524d\u9762\u653e\u7f6e\u4e00\u4e2a4\u8f93\u5165MUX\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u5177\u5907\u53f3\u79fb\u3001\u5de6\u79fb\u3001\u5e76\u884c\u52a0\u8f7d\u3001\u4fdd\u6301\u529f\u80fd\u7684\u7535\u8def </p> <p>\u529f\u80fd\u8868\uff1a </p>"},{"location":"notebooks/dld/6/#counters","title":"Counters","text":"<p>\u8ba1\u6570\u5668(counter) \u662f\u4e00\u79cd\u65f6\u5e8f\u7535\u8def\uff0c\u5b83\u5728\u7279\u5b9a\u7684\u72b6\u6001\u5e8f\u5217\u4e2d\u8fdb\u884c\u8ba1\u6570\uff0c\u80fd\u591f\u5411\u4e0a\u6570\u3001\u5411\u4e0b\u6570\u7b49\u7b49</p> <p>\u4e24\u79cd\u5e38\u89c1\u7c7b\u578b\uff1a + \u5f02\u6b65\u8ba1\u6570\u5668/\u884c\u6ce2\u8ba1\u6570\u5668(asynchronous counters/ripple counters)     + \u5bf9\u4e8e\u8868\u793a\u6700\u4f4e\u4f4d\u7684\u89e6\u53d1\u5668\uff0c\u5b83\u7684\u65f6\u949f\u8f93\u5165\u4e0e\u65f6\u949f\u76f8\u8fde     + \u5bf9\u4e8e\u8868\u793a\u5176\u4ed6\u4f4d\u7684\u89e6\u53d1\u5668\uff0c\u5b83\u4eec\u7684\u8f93\u51fa\u4e0e\u65f6\u949f\u8f93\u5165\u76f8\u8fde\uff0c\u56e0\u6b64\u7535\u8def\u4e0d\u662f\u540c\u6b65\u7684     + \u5f53\u9010\u4f4d\u63a5\u8fd1\u6700\u9ad8\u4f4d\u65f6\uff0c\u8f93\u51fa\u53d1\u751f\u6539\u53d8\u7684\u5ef6\u8fdf\u5c06\u4f1a\u8d8a\u6765\u8d8a\u5927     + \u4f18\u70b9\uff1a\u4f4e\u80fd\u8017 + \u540c\u6b65\u8ba1\u6570\u5668(synchronous counters)     + \u65f6\u949f\u4e0e\u89e6\u53d1\u5668\u7684\u65f6\u949f\u8f93\u5165\u76f4\u63a5\u76f8\u8fde     + \u7528\u903b\u8f91\u5b9e\u73b0\u60f3\u8981\u7684\u72b6\u6001\u5e8f\u5217</p>"},{"location":"notebooks/dld/6/#ripple-counters","title":"Ripple Counters","text":"<p> \u5de5\u4f5c\u6d41\u7a0b\uff1a + \u5f53\u89e6\u53d1\u5668A\u7684\u65f6\u949f\u8f93\u5165\u51fa\u73b0\u6b63\u8fb9\u6cbf\u65f6\uff0cA\u53d6\u8865 + \u89e6\u53d1\u5668B\u7684\u65f6\u949f\u8f93\u5165\u662f\u89e6\u53d1\u5668A\u7684\u8f93\u51fa\u7684\u8865 + \u5f53\u89e6\u53d1\u5668A\u7684\u8f93\u51fa\u4ece1 \\(\\rightarrow\\) 0\u65f6\uff0c\u89e6\u53d1\u5668B\u7684\u65f6\u949f\u8f93\u5165\u5c31\u4f1a\u51fa\u73b0\u6b63\u8fb9\u6cbf\uff0c\u5bfc\u81f4B\u53d6\u8865 \u4e0b\u9762\u7684\u65f6\u5e8f\u56fe\u66f4\u52a0\u76f4\u89c2\u5730\u5c55\u793a\u4e0a\u8ff0\u5185\u5bb9\uff1a </p> <p>\u6ce8\uff1a + \u84dd\u7eff\u8272\u7bad\u5934\u8868\u793a\u201c\u5de5\u4f5c\u6d41\u7a0b\u201d\u6240\u8ff0\u7684\u56e0\u679c\u5173\u7cfb + \u5bf9\u5e94\u7684\u72b6\u6001\u5e8f\u5217(B, A) = (0, 0), (0, 1), (1, 0), (1, 1), (0, 0), (0, 1)\u2026\u2026</p> <p>[!note] \u8fd9\u79cd\u7535\u8def\u4e4b\u6240\u4ee5\u6210\u4e3a\u884c\u6ce2\u8ba1\u6570\u5668\uff0c\u662f\u56e0\u4e3a\u6bcf\u6b21\u8fb9\u6cbf\u7684\u53d8\u5316\uff08\u8fd9\u91cc\u662f\u6b63\u8fb9\u6cbf\uff09\u90fd\u4f1a\u5bfc\u81f4\u4e0b\u4e00\u4e2a\u89e6\u53d1\u5668\u72b6\u6001\u7684\u6539\u53d8\u3002\u8fd9\u79cd\u53d8\u5316\u5c31\u50cf\u6c34\u9762\u7684\u6d9f\u6f2a\u4e00\u6837\u5728\u89e6\u53d1\u5668\u201c\u94fe\u201d\u4e0a\u4f20\u64ad(\u6bcf\u6b21\u53d8\u5316\u53d1\u751f\u4e8e\u524d\u4e00\u9636\u6bb5\u7684\u65f6\u949f-\u8f93\u51fa\u5ef6\u8fdf\u4e4b\u540e)</p> <p>\u5bf9\u4e8e3\u4f4d\u884c\u6ce2\u8ba1\u6570\u5668\uff0c\u5f53C = B = A = 1\u65f6\uff0c\u8ba1\u6570\u5668\u7684\u72b6\u6001\u4e3a(C, B, A) = (1, 1, 1)\uff0c\u4e0b\u4e00\u6b21\u65f6\u949f\u7684\u589e\u52a0\u4f7f\u5f97(C, B, A) = (0, 0, 0)\u3002\u4ece\u4e0b\u9762\u7684\u65f6\u5e8f\u56fe\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\uff1a + \u65f6\u949f-\u8f93\u51fa\u5ef6\u8fdf\\(t_{PHL}\\)\u5bfc\u81f4\u65f6\u949f\u8fb9\u6cbf\u4e0d\u65ad\u589e\u52a0\u7684\u5ef6\u8fdf + \u5bf9\u4e8en\u4e3a\u884c\u6ce2\u8ba1\u6570\u5668\uff0c\u6700\u574f\u60c5\u51b5\u7684\u5ef6\u8fdf\u4e3a\\(n \\cdot t_{PHL}\\) </p> <p>\ud83c\udf30\uff1a4\u4f4d\u884c\u6ce2\u8ba1\u6570\u5668\u7684\u6846\u56fe </p>"},{"location":"notebooks/dld/6/#synchronous-counters","title":"Synchronous Counters","text":"<p>\u4e3a\u4e86\u6d88\u9664\u884c\u6ce2\u5f71\u54cd\uff0c\u6211\u4eec\u8ba9\u6bcf\u4e2a\u89e6\u53d1\u5668\u4f7f\u7528\u5171\u540c\u7684\u65f6\u949f\uff0c\u5e76\u7528\u4e00\u4e2a\u7ec4\u5408\u7535\u8def\u6765\u751f\u6210\u4e0b\u4e00\u72b6\u6001\u3002\u4f8b\u5982\u5bf9\u4e8e\u5347\u8ba1\u6570\u5668(up-counter)\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u81ea\u589e\u5668(incrementer) </p> <p>\u5185\u90e8\u7ec6\u8282\uff1a  + \u5185\u90e8\u903b\u8f91\uff1a\u84dd\u8272\u65b9\u6846\u8868\u793a[[Chap 3 Combinational Logical Design#^01b3d3|\u81ea\u589e\u5668]] + \u8ba1\u6570\u4f7f\u80fd(count enable, EN)\uff1a\u8feb\u4f7f\u4e0e\u95e8\u94fe\u7684\u8f93\u51fa\u5747\u4e3a0\uff0c\u7528\u6765\u4fdd\u6301\u72b6\u6001 + \u51fa\u8fdb\u4f4d(carry out, CO)\uff1a\u81ea\u589e\u5668\u7684\u4e00\u90e8\u5206\u3002\u901a\u8fc7\u5c06CO\u4e0e\u53e6\u4e00\u4e2a\u8ba1\u6570\u5668\u7684EN\u7aef\u8fde\u63a5\uff0c\u6784\u5efa\u4e00\u4e2a\u66f4\u5927\u7684\u8ba1\u6570\u5668</p> <p>\u4e0a\u56fe\u4e2d\uff0c\u4e0e\u95e8\u94fe\u5bfc\u81f4\u201c\u8fdb\u4f4d\u94fe(carry chain)\u201d\u7684\u51fa\u73b0\uff0c\u56e0\u800c\u4ea7\u751f\u8f83\u957f\u7684\u901a\u8def\u5ef6\u8fdf\uff0c\u8fd9\u79cd\u8ba1\u6570\u5668\u7684\u5f62\u5f0f\u79f0\u4e3a\u4e32\u884c\u95e8(serial gating)</p> <p>\u5c06\u4e0e\u95e8\u94fe \\(\\Rightarrow\\) \u5e76\u5217\u7684\u4e0e\u95e8\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u53e6\u4e00\u79cd\u5f62\u5f0f\u2014\u2014\u5e76\u884c\u95e8(parallel gating)\uff0c\u8fd9\u79cd\u5f62\u5f0f\u51cf\u5c11\u4e86\u901a\u8def\u5ef6\u8fdf\uff0c\u7c7b\u4f3c[[Chap 3 Combinational Logical Design#Carry Lookahead Adder(CLA)|\u8d85\u524d\u8fdb\u4f4d(carry lookahead)]]\u3002\u5b83\u5229\u7528CO\u548cEN\u6765\u963b\u6b62\u8f83\u957f\u7684\u901a\u8def\u3002\u903b\u8f91\u56fe\u5982\u4e0b\uff1a  \u5e03\u5c14\u65b9\u7a0b\uff1a $$ \\begin{align} C1 &amp; = EN \\cdot Q_0 \\ C2 &amp; = EN \\cdot Q_0 \\cdot Q_1\\ C3 &amp; = EN \\cdot Q_0 \\cdot Q_1 \\cdot Q_2\\ C4 &amp; = EN \\cdot Q_0 \\cdot Q_1 \\cdot Q_2 \\cdot Q_3\\ \\end{align} $$ \u7b26\u53f7\uff1a </p>"},{"location":"notebooks/dld/6/#other-counters","title":"Other Counters","text":"<ul> <li>\u964d\u8ba1\u6570\u5668(down counter)\uff1a\u5411\u4e0b\u8ba1\u6570</li> <li>\u5347\u964d\u8ba1\u6570\u5668(up-down counter)\uff1a\u65e2\u53ef\u4ee5\u5411\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5411\u4e0b\u8ba1\u6570\uff0c\u53d6\u51b3\u4e8e\u63a7\u5236\u8f93\u5165\u7684\u503c\uff0c\u6bd4\u5982\\(Up/\\overline{Down}\\)</li> <li>\u5e76\u884c\u52a0\u8f7d\u8ba1\u6570\u5668(parallel load counter)\uff1a\u80fd\u591f\u5e76\u884c\u52a0\u8f7d\u53ef\u7528\u7684\u503c\uff0c\u53d6\u51b3\u4e8e\u63a7\u5236\u8f93\u5165(\u6bd4\u5982\\(Load\\))</li> <li>\u6a21n\u8ba1\u6570\u5668(divide-by-n/ modulo n counter)\uff1a<ul> <li>\u5bf9\u9664\u4ee5n\u7684\u4f59\u6570\u8fdb\u884c\u8ba1\u6570</li> <li>\u6216\u8005\u5bf9\u4efb\u610fn\u4e2a\u72b6\u6001\u7684\u5e8f\u5217\u8fdb\u884c\u8ba1\u6570\uff08\u6839\u636e\u5177\u4f53\u72b6\u6001\u5206\u6790\uff09</li> <li>BCD\u8ba1\u6570\u5668\u662f\u4e00\u4e2a\u6a2110\u8ba1\u6570\u5668</li> </ul> </li> </ul>"},{"location":"notebooks/dld/6/#up-down-binary-counter","title":"Up-Down Binary Counter","text":"<p>\ud83c\udf30\uff1a4\u4f4d\u5347\u964d\u8ba1\u6570\u5668\uff0c\u6709\u4f7f\u80fd\u8f93\u5165EN\uff0c\u9009\u62e9\u8f93\u5165S(S = 0\u65f6\u5411\u4e0a\u6570\uff0cS = 1\u65f6\u5411\u4e0b\u6570)</p> <p>\u8f93\u5165\u65b9\u7a0b\uff1a $$ \\begin{align} D_{A0} &amp; = Q_0 \\oplus EN \\ D_{A1} &amp; = Q_1 \\oplus ((Q_0 \\cdot \\overline{S} + \\overline{Q_0} \\cdot S) \\cdot EN) \\ D_{A2} &amp; = Q_2 \\oplus ((Q_0 \\cdot Q_1 \\cdot\\overline{S} + \\overline{Q_0} \\cdot \\overline{Q_1} \\cdot S) \\cdot EN) \\ D_{A3} &amp; = Q_3 \\oplus ((Q_0 \\cdot Q_1 \\cdot Q_2 \\cdot \\overline{S} + \\overline{Q_0} \\cdot \\overline{Q_1} \\cdot \\overline{Q_2} \\cdot S) \\cdot EN) \\ \\end{align} $$ \u8be5\u65b9\u7a0b\u65e2\u80fd\u7528\u4e32\u884c\u95e8\u5b9e\u73b0\uff0c\u4e5f\u80fd\u7528\u5e76\u884c\u95e8\u5b9e\u73b0\uff0c\u800c\u8fd9\u91cc\u4e0d\u7ed9\u51fa\u5177\u4f53\u7684\u5b9e\u73b0\u3002</p>"},{"location":"notebooks/dld/6/#counter-with-parallel-load","title":"Counter with Parallel Load","text":"<p>\u7535\u8def\u5b9e\u73b0\uff1a </p> <p>\u529f\u80fd\u8868\uff1a </p> <p>\u6ce8\uff1a\u53ef\u4ee5\u770b\u5230Load\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8eCount\uff0c\u56e0\u4e3a\u53ea\u8981Load = 1\uff0c\u4e0d\u7ba1Count\u6709\u4ec0\u4e48\u503c\uff0c\u8ba1\u6570\u5668\u6267\u884c\u52a0\u8f7d\u529f\u80fd</p>"},{"location":"notebooks/dld/6/#synchronous-bcd","title":"Synchronous BCD","text":"<p>\ud83c\udfaf\uff1a\u4f7f\u7528\u65f6\u5e8f\u903b\u8f91\u6a21\u578b\u6765\u8bbe\u8ba1\u5e26\u6709D\u89e6\u53d1\u5668\u7684\u540c\u6b65BCD\u8ba1\u6570\u5668</p> <p>\u72b6\u6001\u8868\uff1a </p> <p>\u6ce8\uff1a10-15(\u53731010-1111)\u662f\u6211\u4eec\u4e0d\u5173\u5fc3(don't care) \u7684\u60c5\u51b5</p> <p>\u4f7f\u7528K-maps\uff0c\u5bf9\u4e0b\u4e00\u72b6\u6001\u7684\u65b9\u7a0b\u8fdb\u884c\u4e24\u7ea7\u4f18\u5316\uff0c\u5f97\u5230\u4ee5\u4e0b\u65b9\u7a0b\uff1a $$ \\begin{align} D_1 &amp; = \\overline{Q_1} \\ D_2 &amp; = Q_2 \\oplus Q_1\\overline{Q_8} \\ D_4 &amp; = Q_4 \\oplus Q_1Q_2 \\ D_8 &amp; = Q_8 \\oplus (Q_1Q_8 + Q_1Q_2Q_4) \\ \\end{align} $$</p> <p>[!info] \u601d\u8003\uff1a\u5982\u679c\u8ba1\u6570\u5668\u7684\u7535\u6e90\u53d7\u5230\u5e72\u6270\uff0c\u6216\u8005\u53d7\u5230\u5176\u4ed6\u5f71\u54cd\uff0c\u4f7f\u5f97\u8ba1\u6570\u5668\u7684\u72b6\u6001\u4e0d\u57280000-1001\u4e4b\u95f4\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u95ee\u9898\u5462\uff1f</p> <p>\\(\\therefore\\) \u6211\u4eec\u9700\u8981\u8ba9\u8ba1\u6570\u5668\u5177\u5907\u201c\u81ea\u6108\u80fd\u529b(self-healing ability)\u201d\uff0c\u4f7f\u5f97\u5b83\u80fd\u57282\u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u4ece\u5f02\u5e38\u72b6\u6001\u4e2d\u56de\u5230\u6b63\u5e38\u72b6\u6001\u2014\u2014\u5229\u7528\u597d\u90a36\u4e2a\u201c\u4e0d\u5173\u5fc3\u201d\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u201c\u81ea\u6108\u80fd\u529b\u201d\uff0c\u72b6\u6001\u8868\u548c\u72b6\u6001\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u6ce8\uff1a\u8003\u8651\u66f4\u9ad8\u8981\u6c42\u7684\u81ea\u6108\u80fd\u529b\uff1a + \u62a5\u9519\u529f\u80fd\uff1a\u7535\u8def\u9700\u8981\u8868\u660e\u9047\u5230\u4e86\u975e\u6cd5\u72b6\u6001\u3002\u5bf9\u4e8e\u4e0a\u8ff0\u7535\u8def\uff0c\\(Error = Q_8Q_4 + Q_8Q_2\\) + \u57281\u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u72b6\u6001\u4ece\u975e\u6cd5\u56de\u5230\u5408\u6cd5 + \u4ece\u975e\u6cd5\u72b6\u6001\u8fd4\u56de\u81f3\u4e00\u4e2a\u5177\u4f53\u7684\u72b6\u6001(\u6bd4\u59820)</p> <p>\u8fd9\u4e9b\u8981\u6c42\u53d6\u51b3\u4e8e\u7535\u8def\u7684\u5177\u4f53\u5e94\u7528\uff0c\u6216\u8005\u8bbe\u8ba1\u7ec4\u7684\u653f\u7b56</p> <p>\u53e6\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a\u5e76\u884c\u52a0\u8f7d\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668 + \u4e0e\u95e8</p> <p>\u7535\u8def\u5b9e\u73b0\uff1a</p> <p></p> <p>\u6ce8\uff1a\u5f53\u8ba1\u6570\u52301001\u65f6\uff0cQ0 = Q3 = 1\uff0c\u8fd9\u4f7f\u5f97Load = 1\uff0c\u8ba1\u6570\u5668\u6267\u884c\u52a0\u8f7d\u529f\u80fd\uff0c\u5c06\u8bfb\u5165D(3: 0)\u7684\u503c\uff0c\u53730000\uff0c\u4ece\u800c\u5b9e\u73b00-9\u4e4b\u95f4\u7684\u8ba1\u6570</p>"},{"location":"notebooks/dld/6/#counting-modulo-n","title":"Counting Modulo N","text":"<p>\u4e0b\u5217\u6280\u672f\u5c06\u7528\u5230\u5e26\u6709\u5f02\u6b65/\u540c\u6b65\u7684\u6e05\u7a7a(clear)\uff0c\u4ee5\u53ca/\u6216\u8005\u5e76\u884c\u52a0\u8f7d(load) \u7684n\u4f4d\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\uff1a + \u274c\u5728\u6a21N\u8ba1\u6570\u4e2d\uff0c\u5f53\u68c0\u6d4b\u5230\u6700\u540e\u7684\u6570N\u65f6\uff0c\u8fdb\u884c\u5f02\u6b65\u6e050\uff0c\u6216\u8005\u5f02\u6b65\u52a0\u8f7d\u503c0\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u5f97\u6570\u5b57\u4ec5\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u51fa\u73b0\uff0c\u5bfc\u81f4\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c + \u2705\u5728\u6a21N\u8ba1\u6570\u4e2d\uff0c\u5f53\u68c0\u6d4b\u5230\u6700\u540e\u7684\u6570N - 1\u65f6\uff0c\u540c\u6b65\u6e050\uff0c\u6216\u8005\u540c\u6b65\u52a0\u8f7d\u503c0 + \u68c0\u6d4b\u6700\u540e\u7684\u6570\uff0c\u4f7f\u7528\u52a0\u8f7d\u529f\u80fd\u63d0\u524d\u9884\u8bbe\u503c\uff0c\u6ee1\u8db3==\u6700\u540e\u7684\u6570 - \u9884\u8bbe\u503c = N - 1==\uff0c\u4e5f\u5c31\u662f\u8bf4\u8ba1\u6570\u7684\u8303\u56f4\u53d8\u6210\u4e86[\u9884\u8bbe\u503c\uff0c\u6700\u540e\u7684\u6570]\u3002\u5b9e\u5728\u770b\u4e0d\u61c2\u7684\u8bdd\u89c1\u4e0b\u4f8b\u4e2d\u7b2c2\u79cd\u5b9e\u73b0\u65b9\u6cd5</p> <p>\ud83c\udf30\uff1a\u6a217\u8ba1\u6570\u5668</p> <ol> <li> <p>\u5e38\u89c4\u5b9e\u73b0 </p> <p>\u6ce8\uff1a\u539f\u7406\u540cBCD\u8ba1\u6570\u5668\uff0c\u53ea\u662f\u5b83\u662f\u6570\u52306\u5c31\u8981\u8fd4\u56de0</p> </li> <li> <p>\u9884\u8bbe\u52a0\u8f7d\u503c9\uff0c\u5f53\u6570\u523014\u65f6\uff0c\u7531\u4e8e 14 - 9  =  7 - 1\uff0c\u56e0\u6b64\u9700\u8981\u56de\u52309\uff0c\u8ba1\u6570\u8303\u56f4\u4e3a\\([9, 14]\\)</p> </li> </ol> <p>\u7535\u8def\u5b9e\u73b0\uff1a </p> <p>\u6ce8\uff1a + \u9884\u8bbe\u503c\u662f\u5728\u8f93\u5165D(3: 0)\u5904\u8bbe\u7f6e + \u5bf9\u4e8e\u8be5\u8ba1\u6570\u5668\uff0c\u5982\u679c\u6700\u540e\u7684\u6570\u8bbe\u4e3a\u4e8615\uff0c\u90a3\u4e48\u53ef\u4ee5\u5229\u7528\u8fdb\u4f4dCO\u68c0\u6d4b\u8be5\u6700\u540e\u7684\u503c(\u8fd9\u6837\u5c31\u7701\u53bb\u4e00\u4e2a\u4e0e\u95e8\u4e86)</p> <ol> <li>\u53ea\u7528\u89e6\u53d1\u5668 + \u7ec4\u5408\u7535\u8def </li> </ol>"},{"location":"notebooks/dld/6/#register-cell-design","title":"Register Cell Design","text":"<p>\u5728\u7ec4\u5408\u7535\u8def\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u8fed\u4ee3\u9635\u5217\u5b9e\u73b0\u590d\u6742\u7684\u7ec4\u5408\u7535\u8def\u3002\u540c\u6837\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u79cd\u601d\u60f3\u8fd0\u7528\u5230\u65f6\u5e8f\u7535\u8def\u7684\u8bbe\u8ba1\u4e2d\u2014\u2014\u5c06\u8fed\u4ee3\u7ec4\u5408\u7535\u8def\u548c\u89e6\u53d1\u5668\u76f8\u8fde\u63a5\uff0c\u6784\u5efa\u4e00\u4e2a\u53cc\u6001\u65f6\u5e8f\u7535\u8def\uff0c\u79f0\u4e3a\u5bc4\u5b58\u5668\u5355\u5143(register cell)\u3002\u53ea\u8981\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e2a\u5b58\u50a8\u5668\u5355\u5143\uff0c\u7136\u540e\u590d\u5236n\u4efd\u526f\u672c\uff0c\u6211\u4eec\u5c31\u6784\u5efa\u51fa\u80fd\u591f\u6267\u884c\u4e00\u4e2a\u6216\u591a\u4e2a\u5fae\u64cd\u4f5c\u7684n\u4f4d\u5bc4\u5b58\u5668\u3002</p> <p>\u7531\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u5bc4\u5b58\u5668\u8bbe\u8ba1\u7684\u6b65\u9aa4\uff1a + \u2b50\u8bbe\u8ba1\u5177\u6709\u4ee3\u8868\u6027\u7684\u5bc4\u5b58\u5668\u5355\u5143 + \u5c06\u8fd9\u4e9b\u5355\u5143\u76f8\u4e92\u8fde\u63a5\uff0c\u6784\u6210\u5b8c\u6574\u7684\u5bc4\u5b58\u5668 + \u5982\u6709\u5fc5\u8981\uff0c\u5bf9\u5355\u5143\u5e94\u7528\u5408\u9002\u7684\u8fb9\u754c\u6761\u4ef6\uff0c\u4f7f\u5176\u6709\u4e9b\u6539\u53d8\u548c\u7cbe\u7b80</p> <p>\u5bc4\u5b58\u5668\u5355\u5143\u8bbe\u8ba1\u7684\u65b9\u6cd5\uff1a + MUX\uff1a\u4f7f\u7528n\u8f93\u5165MUX\uff0c\u4ee5\u53ca\u4e00\u7cfb\u5217\u7684\u4f20\u8f93\u6e90\u548c\u51fd\u6570     + \u4e13\u7528\u903b\u8f91(dedicated logic)\uff1a\u5b9e\u73b0\u5fae\u64cd\u4f5c\u7684\u7ec4\u5408\u903b\u8f91\u88ab\u89c6\u4e3a\u5bc4\u5b58\u5668\u7684\u4e00\u90e8\u5206     + \u5171\u7528\u903b\u8f91(shared logic)\uff1a\u88ab\u591a\u4e2a\u5bc4\u5b58\u5668\u5171\u7528\u7684\uff0c\u5b9e\u73b0\u5fae\u64cd\u4f5c\u7684\u7ec4\u5408\u903b\u8f91     + \u901a\u8fc7\u63a7\u5236\u4fe1\u53f7\\(K_0, K_1, \\dots, K_{n-1}\\)\u7684\u6216\u8fd0\u7b97\uff0c\u751f\u6210\u52a0\u8f7d\u4f7f\u80fd\u4fe1\u53f7     + \u5982\u4f55\u9009\u62e9\u6765\u81ea\u6e90\uff0c\u6216/\u548c\u4f20\u8f93\u51fd\u6570\uff1f         + MUX + \u7f16\u7801\u5668(\u5982\u56fe\u6240\u793a)\uff1a\u63a7\u5236\u8f93\u5165\u9700\u8981\u88ab\u7f16\u7801         + n \\(\\times\\) 2 \u4e0e-\u6216\u95e8\uff1a\u63a7\u5236\u8f93\u5165\u4e0d\u9700\u8981\u88ab\u7f16\u7801 + [[Chap 4 Sequential Circuits#The Design Procedure|\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1]]     + \u627e\u5230\u72b6\u6001\u56fe\u6216\u72b6\u6001\u8868\uff0c\u6ce8\u610f\u53ea\u6709\u4e24\u4e2a\u72b6\u6001\u5206\u914d\u540e\u7684\u72b6\u6001 = \u5bc4\u5b58\u5668\u5355\u5143\u7684\u8f93\u51fa\u503c     + \u8fd0\u7528Chap 4 \u4ecb\u7ecd\u7684\u6d41\u7a0b\u6765\u5b8c\u6210\u5355\u5143\u8bbe\u8ba1(\u70b9\u51fb\u4e0a\u65b9\u94fe\u63a5\u8df3\u8f6c)     + \u4f18\u5316\uff1aK-maps(4-6\u4e2a\u53d8\u91cf)\u3001\u624b\u52a8\u4f18\u5316\u6216\u8ba1\u7b97\u673a\u8f85\u52a9(\u66f4\u591a\u7684\u53d8\u91cf)</p> <p>\u5bc4\u5b58\u5668\u5355\u5143\u7684\u89c4\u8303\u5305\u62ec\uff1a + \u5bc4\u5b58\u5668\u51fd\u6570(register functions)\uff1a\u4e00\u822c\u7528\u5bc4\u5b58\u5668\u4f20\u8f93\u8868\u793a + \u63a7\u5236\u8f93\u5165(control input)     + \u65e0\u7f16\u7801\u5f62\u5f0f\uff1a\u6bd4\u5982Load, Shift, Add\uff0c1\u4e2a\u65f6\u949f\u5468\u671f\u5185\u81f3\u591a\u67091\u4e2a\u8f93\u5165\u4e3a1\uff0c\u5373(0, 0, 0), (1, 0, 0), (0, 1, 0), (0, 0, 1)     + \u7f16\u7801\u5f62\u5f0f\uff1a\u6bd4\u5982S1, S0\uff0c\u6240\u6709\u7684\u7ec4\u5408\u4e3a(00, 01, 10, 11) + \u6570\u636e\u8f93\u5165(data input)</p> <p>\ud83c\udf30\uff1a </p> <p>\u6cd5\u4e00\uff1aMUX + \u5bc4\u5b58\u5668\u7684\u52a0\u8f7d\u4fe1\u53f7\uff1aLoad = CX + CY + \u7531\u4e8e\u63a7\u5236\u8f93\u5165\u7684\u6570\u91cf\u5c11\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u7528\u5230\u7f16\u7801\u5668\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u63a7\u5236\u8f93\u5165\u4e0eMUX\u7684\u9009\u62e9\u8f93\u5165\u8fde\u63a5\uff0c\u5f97\u5230\uff1aS1 = CY, S0 = CX + \u5bc4\u5b58\u5668\u7684\u6570\u636e\u8f93\u5165\uff1a $$ \\begin{align} D1 &amp; = A_i \\leftarrow B_i \\vee A_i \\quad (CY, CX) = (0, 1) \\ D2 &amp; = A_i \\leftarrow B_i \\oplus A_i \\quad (CY, CX) = (1, 0) \\ \\end{align} $$ + \u5f53Load = 0\uff0c\u5373(CX, CY) = (0, 0)\u65f6\uff0c\u5bc4\u5b58\u5668A\u4fdd\u6301\u72b6\u6001</p> <p>\u7535\u8def\u5b9e\u73b0\uff1a </p> <p>\u5355\u4e2a\u5143\u4ef6\u7684\u95e8\u6210\u672c = 19\uff0c\u5171\u4eab\u8bd1\u7801\u5668\u7684\u6210\u672c = 8</p> <p>\u6cd5\u4e8c\uff1a\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1</p> <p>\u72b6\u6001\u8868\uff1a </p> <p>\u6ce8\uff1a + 4\u4e2a\u53d8\u91cf\u5c06\u7ed9\u51fa\u72b6\u6001\u8868\u768416\u4e2a\u72b6\u6001\u9879 + \u56e0\u4e3a\u6211\u4eec\u4e0d\u4f1a\u7528\u5230CX = CY = 1\u7684\u6761\u4ef6(\u5373don't care conditions)\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u5173\u5fc312\u4e2a\u9879</p> <p>K-map\u5316\u7b80\uff1a  \u6211\u4eec\u5f97\u5230SOP\u65b9\u7a0b\u4e3a\uff1a $$ D_i = CXB_i + CY\\overline{A_i}B_i + A_i\\overline{B_i} + \\overline{CY}A_i $$ \u8fdb\u4e00\u6b65\u5316\u7b80(\u4e3a\u4e86\u51cf\u5c11\u95e8\u6210\u672c)\uff0c\u5f97\u5230\uff1a $$ D_i = CXB_i + A_i \\oplus (CYB_i) $$ \u95e8\u8f93\u5165\u6210\u672c = 2 + 8 + 2 + 2 = 14\uff0c\u56e0\u6b64\u6bd4\u6cd5\u4e00\u66f4\u8282\u7701\u6210\u672c\u3002\u800c\u4e14\u7531\u4e8e\u6ca1\u7528\u5230\u4f7f\u80fd\u4fe1\u53f7\uff0c\u6210\u672c\u5c06\u8fdb\u4e00\u6b65\u51cf\u5c11</p> <p>[!info] \u4e66\u4e0a(\\(P_{354-359}\\))\u8fd8\u67092\u4e2a\u5bc4\u5b58\u5668\u5355\u5143\u8bbe\u8ba1\u7684\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1\u7684\u65b9\u6cd5\uff08\u6ca1\u7528\u5230\u5bc4\u5b58\u5668\uff09\uff0c\u503c\u5f97\u597d\u597d\u9605\u8bfb\u548c\u7406\u89e3</p>"},{"location":"notebooks/dld/6/#control-of-register-transfers","title":"Control of Register Transfers","text":""},{"location":"notebooks/dld/6/#introduction-to-register-transfer-systems","title":"Introduction to Register Transfer Systems","text":"<p>\u57fa\u672c\u5143\u7d20\uff1a + \u4e00\u7ec4\u5bc4\u5b58\u5668\uff1a\u5927\u591a\u6570\u662f\u6570\u636e\u901a\u8def\uff0c\u90e8\u5206\u4e3a\u63a7\u5236\u5355\u5143 + \u57fa\u672c\u64cd\u4f5c(\u5fae\u64cd\u4f5c)\uff1a\u5bc4\u5b58\u5668\u4f20\u8f93 + \u63a7\u5236\uff1a\u76d1\u7763\u5bc4\u5b58\u5668\u4f20\u8f93\u5e8f\u5217</p>"},{"location":"notebooks/dld/6/#register-transfer-system-design-procedure","title":"Register Transfer System Design Procedure","text":"<ul> <li>\u5199\u4e0b\u8be6\u7ec6\u7684\u7cfb\u7edf\u89c4\u8303(specification)</li> <li>\u627e\u51fa\u6240\u6709\u7684\u8f93\u5165\u4fe1\u53f7(\u6570\u636e\u3001\u63a7\u5236\u3001\u72b6\u6001)\uff0c\u6240\u6709\u7684\u8f93\u51fa\u4fe1\u53f7(\u6570\u636e\u3001\u63a7\u5236\u3001\u72b6\u6001)\uff0c\u4ee5\u53ca\u5bc4\u5b58\u5668\u7684\u6570\u636e\u901a\u8def\u548c\u63a7\u5236\u5355\u5143</li> <li>\u627e\u51fa\u7cfb\u7edf\u7684\u72b6\u6001\u673a(state machine diagram)\uff0c\u5305\u62ec\u4f5c\u4e3a\u8f93\u51fa\u7684\u6570\u636e\u901a\u8def\u548c\u63a7\u5236\u5355\u5143\u4e0a\u7684\u5bc4\u5b58\u5668\u4f20\u8f93</li> <li>\u627e\u51fa\u6240\u6709\u7684\u5185\u90e8\u63a7\u5236\u548c\u72b6\u6001\u4fe1\u53f7\uff0c\u7528\u8fd9\u4e9b\u4fe1\u53f7\u5c06\u72b6\u6001\u673a\u4e2d\u7684\u8f93\u51fa\u6761\u4ef6\u548c\u884c\u52a8\u5206\u5f00(\u5305\u62ec\u5bc4\u5b58\u5668\u4f20\u8f93)\uff0c\u5e76\u5c06\u5b83\u4eec\u7528\u8868\u683c\u8868\u793a\u51fa\u6765</li> <li>\u753b\u51fa\u6570\u636e\u901a\u8def\u7684\u6846\u56fe\uff0c\u5305\u62ec\u6240\u6709\u7684\u63a7\u5236\u3001\u72b6\u6001\u8f93\u5165\u548c\u8f93\u51fa\uff1b\u5982\u679c\u5305\u62ec\u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u786c\u4ef6\uff0c\u753b\u51fa\u63a7\u5236\u7684\u6846\u56fe</li> <li>\u8bbe\u8ba1\u51fa\u5177\u4f53\u7684\u5bc4\u5b58\u5668\u4f20\u8f93\u903b\u8f91\uff0c\u7528\u4e8e\u6570\u636e\u901a\u8def\u548c\u63a7\u5236</li> <li>\u8bbe\u8ba1\u63a7\u5236\u5355\u5143\u903b\u8f91</li> <li>\u9a8c\u8bc1\u6570\u636e\u901a\u8def\u548c\u63a7\u5236\u5355\u5143\u7ed3\u5408\u540e\u7684\u64cd\u4f5c\u662f\u5426\u6b63\u786e\uff0c\u82e5\u5931\u8d25\uff0c\u8c03\u8bd5\u7cfb\u7edf\u5e76\u9a8c\u8bc1\u6539\u53d8\u540e\u7684\u7cfb\u7edf\uff0c\u76f4\u81f3\u7b26\u5408\u9884\u671f\u76ee\u6807</li> </ul>"},{"location":"notebooks/dld/6/#a-design-example","title":"A Design Example","text":"<p>\ud83c\udf30\uff1aDashwatch\uff08\u4e00\u79cd\u7b80\u5355\u7684\u505c\u8868\uff0c\u65f6\u95f4\u4e0a\u9650\u4e3a99.99s\uff09 </p> <ul> <li>\u8f93\u5165\uff1a<ul> <li>START\uff1a\u5c06\u65f6\u95f4\u590d\u4f4d\u81f30\uff0c\u968f\u540e\u5f00\u59cb\u8ba1\u65f6</li> <li>STOP\uff1a\u505c\u6b62\u8ba1\u65f6\uff0c\u57284\u4f4dBCD\u6570\u7801\u7ba1\u4e0a\u663e\u793a\u6700\u8fd1\u7684\u65f6\u95f4</li> <li>CSS\uff1a\u6bd4\u8f83\u3001\u5b58\u50a8\u548c\u663e\u793a\u6700\u5c0f\u7684\u65f6\u95f4</li> <li>RESET</li> </ul> </li> <li>\u8f93\u51fa\uff1a4\u4f4dBCD\u6570\u7801\u7ba1 + \u5c0f\u6570\u70b9</li> <li>\u5bc4\u5b58\u5668\uff1a<ul> <li>4\u4f4dBCD\u8ba1\u6570\u5668(TM)\uff1a\u6bcf\u96940.01s\u5411\u4e0a\u6570</li> <li>16\u4f4d\u5e76\u884c\u52a0\u8f7d\u8ba1\u65f6\u5668(SD)\uff1a\u5b58\u50a8\u6700\u77ed\u7684\u65f6\u95f4</li> </ul> </li> </ul> <p>\u6240\u6709\u7684\u8f93\u5165\u3001\u8f93\u51fa\u548c\u5bc4\u5b58\u5668\uff1a </p> <p>\u5bc4\u5b58\u5668\u4f20\u8f93\u8f93\u51fa\u7684\u72b6\u6001\u673a(\u6469\u5c14\u578b)  + S1\uff1a\u590d\u4f4d\u72b6\u6001\uff0c\u521d\u59cb\u5316SD\u4f4d1001100110011001(99.99)\uff0c\u5373\u6700\u5927\u503c + S2\uff1a\u7d27\u968fS1\u53d1\u751f\uff0c\u4f7fTM = \\((0000)_{BCD}\\) + S3\uff1a\u8ba1\u65f6\u72b6\u6001\u3002\u6309\u4e0bSTART\u952e\u540e\u8fdb\u5165\u8ba1\u65f6\u72b6\u6001\uff0c\u6309\u4e0bSTOP\u952e\u540e\u9000\u51fa\u3002\u5728\u8be5\u72b6\u6001\u4e0b\uff0cT\u7684\u503c\u5728\u6bcf\u4e2a\u65f6\u95f4\u8109\u51b2\u5185\u81ea\u589e1(0.01s\uff0c\u65f6\u949f\u9891\u7387 = 100Hz)\uff0cDIS\u663e\u793aTM\u7684\u503c + S4\uff1a\u51b3\u5b9a\u9636\u6bb5\uff0c\u4ece\u4ee5\u4e0b3\u4e2a\u72b6\u6001\u4e2d\u9009\u62e91\u4e2a\uff1a     + \u6bd4\u8f83\u3001\u5b58\u50a8\u5e76\u663e\u793a\u6700\u77ed\u65f6\u95f4     + \u7ee7\u7eed\u663e\u793aTM\u7684\u503c     + \u91cd\u65b0\u5f00\u59cb + S5\uff1a\u6bd4\u8f83TM\u548cSD\u7684\u503c + S6\uff1a\u5982\u679cTM\u66f4\u5c0f\uff0cTM\u7684\u503c\u88ab\u52a0\u8f7d\u81f3SD\u5185 + S7\uff1a\u91cd\u65b0\u5f00\u59cb\uff0c\u5e76\u663e\u793aSD\u5b58\u50a8\u7684\u6700\u77ed\u65f6\u95f4</p> <p>\u8f93\u51fa\u63a7\u5236/\u72b6\u6001\u8868\uff1a </p> <p>\u627e\u51fa\u5185\u90e8\u63a7\u5236/\u72b6\u6001\u4fe1\u53f7\uff1a + TM\uff1a\u8ba1\u65f6\u5668     + \u590d\u4f4d\u81f30\uff1aRSTM     + \u5411\u4e0a\u8ba1\u6570\u7684\u4f7f\u80fd\u4fe1\u53f7\uff1aENTM + SD\uff1a\u6700\u77ed\u65f6\u95f4     + \u52a0\u8f7dSD\uff1aLSR = 1     + \u9009\u62e9\u8f93\u5165 9999\uff1aUPDATE = 0     + \u9009\u62e9\u8f93\u5165 TM\uff1aUPDATE = 1 + DIS\uff1a\u663e\u793a(\\(B_1, B_0, DP, B_{-1}, B_{-2}\\))     + \u9009\u62e9\u8f93\u5165 TM\uff1aDS = 0     + \u9009\u62e9\u8f93\u5165 SD\uff1aDS = 1 + \u6bd4\u8f83TM \u548c SD\uff08\u72b6\u6001\uff09     + TM &lt; SD\uff1aALTB = 1     + TM \\(\\ge\\) SD\uff1aALTB = 0</p> <p>\u6570\u636e\u901a\u8def\uff1a </p> <p>\u6570\u636e\u901a\u8def\u7684\u5f00\u53d1\u7ec6\u8282\uff1a + TM\uff1a\u5e26\u6709\u540c\u6b65\u590d\u4f4d\u76844\u4f4dBCD\u8ba1\u6570\u5668     + \u57fa\u4e8e\u5148\u524d\u7684BCD\u52a0\u6cd5\u5668\u8bbe\u8ba1     + \u6dfb\u52a0\u540c\u6b65\u590d\u4f4dSRST     + SRST = RSTM     + C0(\u8fdb\u5165\u7684\u8fdb\u4f4d) = ENTM + A &lt; B \u6bd4\u8f83\u5668     + \u6bd4\u8f83TM \u548c SD     + \u8bbe\u8ba1\u4ece\u5de6\u5f80\u53f3\u7684\u8fed\u4ee3\u5355\u5143\u9635\u5217\uff0c\u8f93\u51faC0 + SD\uff1a\u6807\u51c616\u4f4d\u5e76\u884c\u52a0\u8f7d\u5bc4\u5b58\u5668     + LOAD = LSR     + \u4f7f\u752816\u4f4d2-1MUX\uff0c\u4ece\\(9999_{BCD}\\)\u548cTM\u4e2d\u9009\u62e9\u5e76\u884c\u52a0\u8f7d\u8f93\u5165D     + S = UPDATE</p> <p>\u663e\u793a\u903b\u8f91\uff1a + 16\u4f4d2-1MUX + 4\u4f4dBCD7\u6bb5\u6570\u7801\u7ba1\u8f6c\u6362\u5668 + 4\u4f4d\u4e03\u6bb5\u6570\u7801\u7ba1\u663e\u793a\u5668(\u5e26\u6709\u5c0f\u6570\u70b9)\uff1a\u5c0f\u6570\u70b9\u63a7\u5236\uff1aDP = 1</p> <p>\u53d6\u4ee3\u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u63a7\u5236\u4fe1\u53f7\u8f93\u51fa\u7684\u72b6\u6001\u673a\uff1a </p> <p>\u4f7f\u7528D\u89e6\u53d1\u5668\u8fdb\u884c\u72ec\u70ed\u7801\u72b6\u6001\u5206\u914d(7\u4f4d)\uff0c\u5f97\u5230\u4e0b\u5217\u8f93\u5165\u65b9\u7a0b\uff1a </p> <p>\u8f93\u51fa\u65b9\u7a0b\u4e3a\uff1a $$ \\begin{align} LSR &amp; = S1 + S6 \\ RSTM &amp; = S2 \\ ENTM &amp; = S3 \\ UPDATE &amp; = S6 \\ DS &amp; = S7 \\end{align} $$</p> <p>\u6ce8\uff1a\u8bfe\u672c\u4e0a\u8fd8\u6709\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u4f8b\u5b50\uff0c\u6211\u8fd8\u6ca1\u6765\u5f97\u53ca\u770b\u2026\u2026</p>"},{"location":"notebooks/dld/6/#microprogrammed-control","title":"Microprogrammed Control","text":"<ul> <li>\u4e0d\u53ef\u7f16\u7a0b\u7684\u7cfb\u7edf(non-programmable system)\u2014\u2014\u5177\u4f53\u7cfb\u7edf<ul> <li>\u6ca1\u6709\u7f16\u7a0b\u8ba1\u6570\u5668(program counter, PC) \u6216\u8005\u7c7b\u4f3c\u7684\u5bc4\u5b58\u5668</li> <li>\u63a7\u5236\u5355\u5143\u4e0d\u8fdb\u884c\u83b7\u53d6\u548c\u6267\u884c\u6307\u4ee4\u7684\u64cd\u4f5c\uff0c\u800c\u662f\u57fa\u4e8e\u8f93\u5165\u548c\u6570\u636e\u901a\u8def\u7684\u72b6\u6001\u4f4d\uff0c\u51b3\u5b9a\u8981\u6267\u884c\u7684\u64cd\u4f5c(\u5e8f\u5217)</li> </ul> </li> <li>\u53ef\u7f16\u7a0b\u7684\u7cfb\u7edf(programmable system)\u2014\u2014\u901a\u7528\u7cfb\u7edf<ul> <li>\u4e00\u90e8\u5206\u8f93\u5165\u7531\u4e00\u7cfb\u5217\u6307\u4ee4(instruction) \u6784\u6210\uff0c\u79f0\u4e3a\u7a0b\u5e8f(program)</li> <li>\u901a\u5e38\u5b58\u50a8\u4e8e\u5185\u5b58\uff0c\u5e76\u4e14\u7531PC\u51b3\u5b9a\u5730\u5740</li> <li>\u63a7\u5236\u5355\u5143\u8d1f\u8d23\u83b7\u53d6\u548c\u6267\u884c\u6307\u4ee4 </li> </ul> </li> </ul>"},{"location":"notebooks/dld/6/#serial-transfers-and-microoperations","title":"Serial Transfers and Microoperations","text":"<ul> <li>\u5f53\u7cfb\u7edf\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u53ea\u80fd\u4f20\u9012\u6216\u64cd\u4f5c1\u4f4d\u4fe1\u606f\u65f6\uff0c\u79f0\u8fd9\u4e2a\u7cfb\u7edf\u5904\u4e8e\u4e32\u884c\u6a21\u5f0f(serial mode)</li> <li>\u4e0e\u4e32\u884c\u4f20\u8f93\u76f8\u5bf9\u7684\u5e76\u884c\u4f20\u8f93(parallel transfer)\uff1a\u540c\u65f6\u4f20\u8f93\u5bc4\u5b58\u5668\u7684\u6240\u6709\u4f4d</li> </ul> <p>\u4e32\u884c\u4f20\u8f93(\u79fb\u4f4d)\uff1a </p> <p>\ud83c\udf30\uff1a\u4e32\u884c\u52a0\u6cd5\u5668(serial adder)\uff1a\u65f6\u5e8f\u7535\u8def\uff0c\u4e00\u6b21\u53ea\u80fd\u6267\u884c1\u4f4d\u4e8c\u8fdb\u5236\u52a0\u6cd5</p> <p>\u75282\u4e2a\u72b6\u6001\u8bb0\u4f4f\u8fdb\u4f4d\uff1a + G\uff1acarry in = 0 + H\uff1acarry in = 1</p> <p>\u6cd5\u4e00\uff1a\u7c73\u91cc\u578b</p> <p>\u72b6\u6001\u56fe\uff1a </p> <p>\u72b6\u6001\u8868\uff1a  \u72b6\u6001\u5206\u914d\u540e\u7684\u72b6\u6001\u8868\uff1a </p> <p>\u5316\u7b80(\u7565)</p> <p>\u8f93\u5165\u65b9\u7a0b\uff1a\\(D = ab + ay + by\\) \u8f93\u51fa\u65b9\u7a0b\uff1a\\(S = a \\oplus b \\oplus y\\)</p> <p>\u6846\u56fe\uff1a </p> <p>\u6cd5\u4e8c\uff1a\u6469\u5c14\u578b</p> <p>\u72b6\u6001\u56fe\uff1a </p> <p>\u72b6\u6001\u8868\uff0c\u8f93\u5165\u65b9\u7a0b\u548c\u8f93\u5165\u65b9\u7a0b </p> <p>\u6846\u56fe\uff1a </p> <p>\u4e0a\u97622\u4e2a\u7535\u8def\u4ec5\u4fdd\u5b58\u4e86\u8fdb\u4f4d\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5b9e\u73b0 \\(A \\leftarrow A + B\\)\uff0c\u5c31\u9700\u8981\u4fdd\u5b58A\u7684\u503c\u3002\u6559\u6750\u7ed9\u51fa\u4e86\u5bf9\u5e94\u7684\u5b9e\u73b0\uff1a</p> <p></p>"},{"location":"notebooks/dld/7/","title":"Chap 7 Memory Basics","text":":material-circle-edit-outline: \u7ea6 4301 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f"},{"location":"notebooks/dld/7/#memory-definitions","title":"Memory Definitions","text":"<ul> <li>\u5185\u5b58(memory)\uff1a\u4e00\u7ec4\u5b58\u50a8\u5355\u5143\u548c\u5fc5\u8981\u7684\u7535\u8def\uff0c\u5185\u5b58\u4e4b\u95f4\u53ef\u4ee5\u4f20\u8f93\u4fe1\u606f <p>\u5185\u5b58 = RAM ICs + \u989d\u5916\u7684\u903b\u8f91\u7535\u8def</p> </li> <li>\u5185\u5b58\u7ec4\u7ec7(memory organization)\uff1a\u5173\u4e8e\u5185\u5b58\u5982\u4f55\u8bbf\u95ee\u7684\u5185\u5b58\u57fa\u672c\u67b6\u6784</li> <li>\u968f\u673a\u8bbf\u95ee\u5b58\u50a8\u5668(random access memory, RAM)\uff1a\u6570\u636e\u80fd\u591f\u5728\u4efb\u4f55\u5355\u5143\u4e4b\u95f4\u8fdb\u884c\u4f20\u8f93\uff0c\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u5355\u5143\u7684\u4e00\u79cd\u5185\u5b58</li> <li>\u5185\u5b58\u64cd\u4f5c(memory operations)\uff1a\u5bf9\u5185\u5b58\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u901a\u5e38\u662f\u5bf9\u4e00\u4e9b\u6570\u636e\u5143\u7d20(\u4f4d(bit)\uff0c\u5b57\u8282(byte)\u548c\u5b57(word)\u7b49)\u7684\u8bfb(read) \u548c\u5199(write) \u7684\u64cd\u4f5c<ul> <li>\u4f4d(bit)\uff1a\u5355\u4e2a\u4e8c\u8fdb\u5236\u6570\u5b57</li> <li>\u5b57\u8282(byte)\uff1a\u80fd\u88ab\u4e00\u8d77\u8bbf\u95ee\u76848\u4f4d\u6570\u636e</li> <li>\u5b57(word)\uff1a\u4e00\u7ec4\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5927\u5c0f\u4e00\u822c\u4e3a\u5185\u5b58\u8bbf\u95ee\u6570\u636e\u7684\u89c4\u6a21\uff0c\u901a\u5e38\u662f2\u7684\u5e42\u7684\u500d\u6570\u4e2abyte\uff0c\u6bd4\u59822 bytes, 4bytes\u3002\u53ef\u4ee5\u7528\u6765\u8868\u793a\u4e00\u4e2a\u6570\u5b57\uff0c\u4e00\u6761\u6307\u4ee4\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u5b57\u5b57\u6bcd\u5b57\u7b26\uff0c\u6216\u8005\u4e8c\u8fdb\u5236\u7f16\u7801\u7684\u4fe1\u606f\u7b49</li> </ul> </li> <li>\u5185\u5b58\u6570\u636e(memory data)\uff1a\u5728\u5185\u5b58\u4e2d\u88ab\u5b58\u50a8\u7684\u6216\u88ab\u8bbf\u95ee\u76841\u4f4d\u6216\u4e00\u7ec4\u4f4d</li> <li>\u5185\u5b58\u5730\u5740(memory address)\uff1a\u7528\u6765\u8bc6\u522b\u7279\u5b9a\u5185\u5b58\u5143\u7d20\u7684\u4e00\u7ec4\u4f4d</li> <li>\u5185\u5b58\u89c4\u6a21(memory size)\uff1a\u5730\u5740\u5bbd\u5ea6 \\(\\times\\) \u8bcd\u5bbd\u5ea6\uff0c\u6bd4\u59822K \\(\\times\\) 8\uff0c32M \\(\\times\\) 16 </li> </ul> <p>\ud83c\udf30\uff1a </p>"},{"location":"notebooks/dld/7/#memory-organization","title":"Memory Organization","text":"<ul> <li>\u6839\u636e\u6807\u4e0a\u7d22\u5f15\u7684\u8bcd\u6570\u5217\u8fdb\u884c\u7ec4\u7ec7\uff0c\u7d22\u5f15\u503c\u5373\u4e3a\u5185\u5b58\u5730\u5740</li> <li>\u901a\u5e38\u6839\u636e\u7279\u5b9a\u8ba1\u7b97\u673a\u67b6\u6784\u7684\u9700\u6c42\u8fdb\u884c\u7ec4\u7ec7</li> </ul> <p>\u4e0b\u9762\u5217\u51fa\u4e00\u4e9b\u5386\u53f2\u4e0a\u8f83\u4e3a\u77e5\u540d\u7684\u8ba1\u7b97\u673a\u67b6\u6784\u53ca\u5176\u5185\u5b58\u7ec4\u7ec7\uff1a + PDP-8\uff1a\u4f7f\u752812\u4f4d\u5730\u5740\u8bbf\u95ee\\(2^{12}\\)\u4e2a12\u4f4d\u5b57 + IBM 360\uff1a\u4f7f\u752824\u4f4d\u5730\u5740\u8bbf\u95ee\\(2^{24}\\)\u4e2a\u5b57\u8282\uff0c\u6216\u8005\\(2^{22}\\)\u4e2a\u5b57 + Intel 8080\uff1a16\u4f4d\u5730\u5740\u8bbf\u95ee\\(2^{16}\\)\u4e2a\u5b57\u8282</p>"},{"location":"notebooks/dld/7/#memory-block-diagram","title":"Memory Block Diagram","text":"<ul> <li>\u82af\u7247\u9009\u62e9(chip select, CS) / \u82af\u7247\u4f7f\u80fd(chip enable, CE)\uff1a\u5185\u5b58\u7684\u4f7f\u80fd\u8f93\u5165</li> <li>k\u4e2a\u5730\u5740\u7ebf\u8def(address lines)\uff0c\u901a\u8fc7\u8bd1\u7801\u5668\u5f97\u5230\\(2^k\\)\u4e2a\u5730\u5740\uff0c\u6bcf\u4e2a\u5730\u5740\u6307\u5b9a\u4e00\u4e2a\u7279\u5b9a\u7684\u5b57</li> <li>\u6bcf\u4e2a\u5b57\u7684\u5927\u5c0f\u4e3an\u4f4d\uff0c\u6ce8\u610f\uff1a\\(2^k \\ge n\\)</li> <li>\u8bfb\u548c\u5199\u7528\u5230\u4e86\u5355\u4e2a\u63a7\u5236\u7ebf\u8def(control lines)\uff0c\u5b9a\u4e49\u4e86\u6700\u7b80\u5355\u7684\u5185\u5b58\u64cd\u4f5c</li> </ul> <p>\ud83c\udf30\uff1a\\(1024 \\times 16\\) \u5185\u5b58 </p> <p>\u8be5\u5185\u5b58\u5177\u67091024\u4e2a\u5b57(\u5730\u5740\u4e2a\u6570)\uff0c\u6bcf\u4e2a\u5b57\u7684\u5185\u5bb9\u4e3a16\u4f4d</p>"},{"location":"notebooks/dld/7/#basic-memory-operations","title":"Basic Memory Operations","text":"<p>\u5185\u5b58\u64cd\u4f5c\u9700\u8981\uff1a + \u5730\u5740(address)\uff1a\u6307\u660e\u9700\u8981\u64cd\u4f5c\u7684\u5185\u5b58\u4f4d\u7f6e\uff0c\u5730\u5740\u7ebf\u8def\u5c06\u8fd9\u4e9b\u4fe1\u606f\u5e26\u5165\u5185\u5b58\u4e2d + \u6570\u636e(data)\uff1a\u9700\u8981\u5199\u5165\u6216\u8bfb\u51fa\u7684\u6570\u636e + \u64cd\u4f5c(operation)\uff1a\u4f20\u5165\u5185\u5b58\u5e76\u7531\u63a7\u5236\u4fe1\u53f7\u6307\u660e\u7c7b\u578b\u7684\u4fe1\u606f\u3002\u5178\u578b\u7684\u64cd\u4f5c\u662f\u8bfb(read) \u548c\u5199(write)\u3002\u5176\u4ed6\u7684\u64cd\u4f5c\u5305\u62ec\u5199\u540e\u5373\u8bfb\uff0c\u548c\u4e00\u7cfb\u5217\u4e0e\u6570\u636e\u5757\u76f8\u5173\u7684\u64cd\u4f5c\u3002\u64cd\u4f5c\u4fe1\u53f7\u4e5f\u53ef\u80fd\u6307\u5b9a\u65f6\u95f4\u4fe1\u606f</p> <p>\u8fde\u63a5\u5185\u5b58\u548cCPU\u7684\u603b\u7ebf\uff1a + \u5730\u5740\u603b\u7ebf(address bus)\uff1a\u6307\u660e\u5185\u5b58\u4f4d\u7f6e + \u6570\u636e\u603b\u7ebf(data bus)\uff1a\u5305\u542b\u4f20\u5165/\u51fa\u6307\u5b9a\u4f4d\u7f6e\u7684\u6570\u636e + \u63a7\u5236\u603b\u7ebf(control bus)\uff1a\u989d\u5916\u7684\u63a7\u5236\uff0c\u6bd4\u5982\u82af\u7247\u9009\u62e9\u3001\u8bfb/\u5199\u2026\u2026 </p> <ul> <li>\u8bfb\uff1a\u8bfb\u53d6\u5185\u5b58\u6570\u636e\u7684\u64cd\u4f5c<ul> <li>\u5c06\u60f3\u83b7\u53d6\u7684\u5b57\u7684\u4e8c\u8fdb\u5236\u5730\u5740\u653e\u5165\u5730\u5740\u7ebf\u8def\u4e0a</li> <li>\u6fc0\u6d3b\u201c\u8bfb\u201d\u8f93\u5165</li> </ul> </li> <li>\u5199\uff1a\u5c06\u6570\u636e\u5199\u5165\u5185\u5b58\u7684\u64cd\u4f5c<ul> <li>\u5c06\u60f3\u83b7\u53d6\u7684\u5b57\u7684\u4e8c\u8fdb\u5236\u5730\u5740\u653e\u5165\u5730\u5740\u7ebf\u8def\u4e0a</li> <li>\u5c06\u5fc5\u987b\u5b58\u5165\u5185\u5b58\u7684\u6570\u636e\u4f4d\u653e\u5165\u6570\u636e\u8f93\u5165\u7ebf\u8def\u4e0a</li> <li>\u6fc0\u6d3b\u201c\u5199\u201d\u8f93\u5165</li> </ul> </li> </ul> <p>\u5185\u5b58\u7684\u63a7\u5236\u8f93\u5165(\u529f\u80fd\u8868\u89c1\u4e0b\u9762)\uff1a + \u82af\u7247\u9009\u62e9(Chip Select)\uff1a\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u8bfb\u6216\u5199\u7684\u64cd\u4f5c(\u4f7f\u80fd\u4fe1\u53f7) + \u8bfb/\u5199(\\(Read/\\overline{Write}\\))\uff1a\u6307\u5b9a\u7279\u5b9a\u7684\u64cd\u4f5c(\u8bfb\u5199\u4e8c\u9009\u4e00)</p> <p></p> <ul> <li>\u6709\u65f6\u8bfb\u548c\u5199\u7684\u4f7f\u80fd\u7ebf\u8def\u662f\u4e00\u4e2a\u6709\u7cbe\u786e\u65f6\u95f4\u4fe1\u606f\u7684\u65f6\u949f(\u6bd4\u5982\u8bfb\u53d6\u65f6\u949f(read clock)\uff0c\u5199\u5165\u9891\u95ea(write strobe))</li> <li>\u6709\u65f6\u5185\u5b58\u5fc5\u987b\u5bf9\u5b8c\u6210\u64cd\u4f5c\u8fdb\u884c\u54cd\u5e94</li> </ul> <p>\u5f02\u6b65RAM vs. \u540c\u6b65RAM + \u5f02\u6b65RAM\u4e0d\u4f9d\u8d56\u5916\u90e8\u65f6\u949f\u7684\u72b6\u6001\uff0c\u53ea\u8981\u63a5\u6536\u5230\u6307\u4ee4\u5c31\u5f00\u59cb\u8bfb\u5199\u6570\u636e + \u540c\u6b65RAM\u901a\u8fc7\u5916\u90e8\u65f6\u949f\u8fdb\u884c\u540c\u6b65\uff0c\u6839\u636e\u7279\u5b9a\u7684\u65f6\u949f\u72b6\u6001\u8bfb\u5199\u6570\u636e </p>"},{"location":"notebooks/dld/7/#memory-operation-timing","title":"Memory Operation Timing","text":"<p>\u591a\u6570\u57fa\u672c\u5185\u5b58\u662f\u5f02\u6b65\u7684\uff0c\u5373 + \u5b58\u50a8\u5728\u9501\u5b58\u5668\u6216\u7535\u8377\u5185 + \u6ca1\u6709\u5916\u90e8\u65f6\u949f + \u53d7\u63a7\u5236\u8f93\u5165\u548c\u5730\u5740\u63a7\u5236</p> <ul> <li>(\u8bfb\u53d6)\u8bbf\u95ee\u65f6\u95f4(access time)\uff1a\u4ece\u4f7f\u7528\u5730\u5740\uff0c\u5230\u6570\u636e\u8f93\u51fa\u4e0a\u6570\u636e\u51fa\u73b0\u4e4b\u95f4\u7684\u6700\u5927\u65f6\u95f4</li> <li>\u5199\u5165\u5468\u671f\u65f6\u95f4(write cycle time)\uff1a\u4ece\u4f7f\u7528\u5730\u5740\uff0c\u5230\u6240\u6709\u9700\u8981\u7528\u6765\u5b58\u50a8\u5b57\u7684\u5185\u5b58\u5185\u90e8\u64cd\u4f5c\u5168\u90e8\u5b8c\u6210\u4e4b\u95f4\u7684\u6700\u5927\u65f6\u95f4</li> </ul> <p>CPU\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u5185\u5b58\u63a7\u5236\u4fe1\u53f7\uff0c\u4f7f\u5f97\u5b83\u81ea\u8eab\u5185\u90e8\u7684\u65f6\u949f\u64cd\u4f5c\u4e0e\u5185\u5b58\u7684\u8bfb\u5199\u64cd\u4f5c\u540c\u6b65\uff0c\u8fd9\u610f\u5473\u7740\u5185\u5b58\u7684\u8bbf\u95ee\u65f6\u95f4\u548c\u5199\u5165\u5468\u671f\u65f6\u95f4\uff0c\u4e0eCPU\u65f6\u949f\u5468\u671f\u7684\u56fa\u5b9a\u6570\u503c\u76f8\u5173</p> <p></p> <p></p> <p>\u5199\u64cd\u4f5c\u7684\u5173\u952e\u65f6\u95f4\u4f4d\u4e8e1-0-1\u8109\u51b2\u7684\u8fb9\u6cbf\u5904 + \u5730\u5740\u5fc5\u987b\u57281-0\u524d\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\u5efa\u7acb\u8d77\u6765\uff0c\u5e76\u4e14\u57280-1\u4e4b\u540e\u7684\u4e00\u6bb5\u65f6\u95f4\u4fdd\u6301\u7a33\u5b9a\uff0c\u4ee5\u9632\u5bf9\u5176\u4ed6\u5730\u5740\u7684\u5185\u5bb9\u7684\u5e72\u6270 + \u6570\u636e\u5fc5\u987b\u57281-0\u524d\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\u5efa\u7acb\u8d77\u6765\uff0c\u5e76\u4e14\u57280-1\u4e4b\u540e\u7684\u4e00\u6bb5\u65f6\u95f4\u4fdd\u6301\u7a33\u5b9a\uff0c\u786e\u4fdd\u6b63\u786e\u5199\u5165</p>"},{"location":"notebooks/dld/7/#random-access-memoryram","title":"Random Access Memory(RAM)","text":"<p>RAM\u7684\u7c7b\u578b\uff1a + \u9759\u6001(static)\uff1a\u4fe1\u606f\u88ab\u5b58\u50a8\u5728\u9501\u5b58\u5668\u5185 + \u52a8\u6001(dynamic)\uff1a\u4fe1\u606f\u4ee5\u7535\u8377\u7684\u5f62\u5f0f\u88ab\u5b58\u50a8\u5728\u7535\u5bb9(capacitors) \u5185\uff0c\u4e14\u7528n\u578b\u6676\u4f53\u7ba1\u201c\u8bbf\u95ee\u201d\u7535\u5bb9\u3002\u7531\u4e8e\u7535\u5bb9\u4f1a\u6f0f\u7535\uff0c\u56e0\u6b64\u9700\u8981\u5b9a\u671f\u5237\u65b0(refresh) \u7535\u5bb9\u7684\u7535\u8377</p> <p>SRAM\u4e0eDRAM\u7684\u5927\u81f4\u5bf9\u6bd4\uff1a </p> <p>\u5bf9\u7535\u6e90\u7684\u4f9d\u8d56\u6027\uff1a + \u6613\u53d8\u7684(volatile)\uff1a\u5f53\u7535\u6e90\u5207\u65ad\u65f6\u5b58\u50a8\u7684\u4fe1\u606f\u4e22\u5931 + \u4e0d\u53d8\u7684(non-volatile)\uff1a\u5f53\u7535\u6e90\u5207\u65ad\u65f6\u4ecd\u7136\u4fdd\u5b58\u4fe1\u606f</p> <p>\u5185\u5b58\u9635\u5217\u7ed3\u6784\uff1a\u6211\u4eec\u53ef\u4ee5\u628a\u5185\u5b58\u770b\u4f5c\u4f4d\u7684\u4e8c\u7ef4\u9635\u5217\uff0c\u6bcf\u4e00\u4f4d\u7528\u4e00\u4e2a\u5355\u5143(cell) \u5b58\u50a8</p> <p>\u6ce8\uff1a\u5b58\u50a8\u5355\u5143\u901a\u5e38\u4f5c\u4e3a\u7535\u5b50\u7535\u8def\u8bbe\u8ba1\uff0c\u800c\u975e\u903b\u8f91\u7535\u8def\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u56e0\u4e3a\u65b9\u4fbf\uff0c\u6211\u4eec\u4f7f\u7528\u903b\u8f91\u6a21\u578b </p>"},{"location":"notebooks/dld/7/#static-ramsram-integrated-circuits","title":"Static RAM(SRAM) Integrated Circuits","text":"<p>SRAM\u7684\u5b58\u50a8\u5355\u5143\u5305\u62ec\uff1a + SR \u9501\u5b58\u5668 + \u7528\u4e8e\u63a7\u5236\u7684\u9009\u62e9\u8f93\u5165 + \u53cc\u8f68\u6570\u636e\u8f93\u5165\\(B\\)\u548c\\(\\overline{B}\\) + \u53cc\u8f68\u6570\u636e\u8f93\u51fa\\(C\\)\u548c\\(\\overline{C}\\)</p> <p>\u56fe\u793a\uff1a  + \u8f93\u5165\uff1a     + Select = 0\uff1a\u4fdd\u6301\u5df2\u88ab\u5b58\u50a8\u7684\u5185\u5bb9     + Select = 1\uff1a\u5b58\u50a8\u5185\u5bb9\u53d6\u51b3\u4e8eB\u548c\\(\\overline{B}\\)\u7684\u503c + \u8f93\u51fa\uff1a     + Select = 0\uff1aC = \\(\\overline{C}\\) = 0     + Select = 1\uff1aC\u4e3a\u5b58\u50a8\u503c\uff0c\\(\\overline{C}\\)\u4e3a\u5176\u8865</p>"},{"location":"notebooks/dld/7/#bit-slice","title":"Bit Slice","text":"<p>\u8981\u5229\u7528RAM\u7247\u6784\u5efaRAM IC\uff0c\u6211\u4eec\u9700\u8981\uff1a + \u8bd1\u7801\u5668\uff1a\u5c06n\u4e2a\u5730\u5740\u7ebf\u8def\u8bd1\u7801\u4e3a\\(2^n\\)\u4e2a\u5b57\u9009\u62e9\u7ebf\u8def\uff0c\u7528\u4e8e\u6311\u9009\u9700\u8981\u8bfb\u53d6\u6216\u5199\u5165\u7684\u5b57 + \u6570\u636e\u8f93\u51fa\u4e0a\u76843\u6001\u95e8\u5141\u8bb8RAM IC\u80fd\u88ab\u7ed3\u5408\u4e3a\\(2^n\\)\u4e2a\u5b57\u7684RAM \u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3aRAM\u4f4d\u5207\u7247(bit slice) \uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u5b83\u7684\u6a21\u578b(\\(2^n \\times 1\\) RAM)\uff1a </p> <p>\u6784\u6210\uff1a + \u591a\u4e2aRAM\u5355\u5143 + \u63a7\u5236\u7ebf\u8def\uff1a     + \u5b57\u9009\u62e9(word select)         + word select = 0\uff1a\u5355\u5143\u9501\u5b58\u5668\u7684\u503c\u4e0d\u53d8         + word select = 1\uff1a\u503c\u88ab\u52a0\u8f7d\u81f3\u9501\u5b58\u5668         + \u7531\u4e8e\u4e00\u6b21\u53ea\u80fd\u5199\u5165\u4e00\u4e2a\u5b57\uff0c\u56e0\u6b64\u53ea\u67091\u4e2a\u5b57\u9009\u62e9\u4e3a1\uff0c\u5176\u4f59\u5b57\u9009\u62e9\u5747\u4e3a0     + \u4f4d\u9009\u62e9(bit select)     + \u8bfb/\u5199(\\(Read/\\overline{Write}\\))         + \\(Read/\\overline{Write}\\) = 0\uff1a\u5199\u64cd\u4f5c         + \\(Read/\\overline{Write}\\) = 1\uff1a\u8bfb\u64cd\u4f5c + \u6570\u636e\u7ebf\u8def     + \u6570\u636e\u8f93\u5165     + \u6570\u636e\u8f93\u51fa</p> <p>\ud83c\udf30\uff1a\\(16 \\times 1\\) RAM  \u4e0e\u4e0a\u9762\u7684\u6a21\u578b\u4e0d\u540c\uff1a + \u6570\u636e\u8f93\u51fa\u5904\u7528\u5230\u4e86\u4e00\u4e2a\u4e09\u6001\u95e8\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5c06RAM\u82af\u7247\u7684\u8f93\u51fa\u8fde\u5728\u4e00\u8d77 + \u65b0\u589e\u82af\u7247\u9009\u62e9(chip select)\u7684\u8f93\u5165\uff0c\u4f5c\u4e3aRAM\u82af\u7247\u7684\u4f7f\u80fd\u4fe1\u53f7</p>"},{"location":"notebooks/dld/7/#coincident-selection","title":"Coincident Selection","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5927\u578b\u7684\u5185\u5b58\u9635\u5217\uff0c\u6211\u4eec\u9700\u8981\u66f4\u5927\u7684\u8bd1\u7801\u5668\uff0c\u56e0\u6b64\u4f4d\u7ebf\u8def\u4e0a\u5c31\u4f1a\u6709\u66f4\u5927\u7684\u6247\u51fa\uff0c\u5bfc\u81f4RAM\u7684\u8bbf\u95ee\u65f6\u95f4\u548c\u5199\u5165\u5468\u671f\u65f6\u95f4\u5ef6\u957f\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u5e0c\u671b\u8fd9\u6837\u3002</p> <p>\u597d\u5728\uff0c\u8bd1\u7801\u5668\u7684\u89c4\u6a21\u548c\u6247\u51fa\u53ef\u4ee5\u901a\u8fc7\u5728\u4e8c\u7ef4\u9635\u5217\u7684\u91cd\u5408\u9009\u62e9(coincident selection) \u88ab\u524a\u51cf\u4e86\u8fd1\u4f3c\\(\\sqrt{n}\\)\u7684\u5927\u5c0f</p> <p>\u5982\u4f55\u5b9e\u73b0\uff1f + 2\u4e2a\u8bd1\u7801\u5668\uff0c1\u4e2a\u7528\u4e8e\u5b57\u9009\u62e9\u7ebf\u8def\uff0c1\u4e2a\u7528\u4e8e\u4f4d\u9009\u62e9\u7ebf\u8def + \u5b57\u9009\u62e9 \\(\\rightarrow\\) \u884c\u9009\u62e9(row select) + \u4f4d\u9009\u62e9 \\(\\rightarrow\\) \u5217\u9009\u62e9(column select)</p> <p>\ud83c\udf30 1. \u7528\\(4 \\times 4\\)\u7684RAM\u5355\u5143\u9635\u5217\u5b9e\u73b0\\(16 \\times 1\\) RAM  + \u884c\u8bd1\u7801\u5668\u548c\u5217\u8bd1\u7801\u5668\u5747\u4e3a2-4\u8bd1\u7801\u5668 + \u5730\u5740\u7684\u9ad82\u4f4d\u7528\u6765\u9009\u62e9\u884c\uff0c\u4f4e2\u4f4d\u7528\u6765\u6311\u9009\u5217\uff0c\u4ece\u800c\u627e\u5230\u7279\u5b9a\u7684RAM\u5355\u5143 + \u5217\u8bd1\u7801\u5668\u6709\u4e00\u4e2a\u4f5c\u4e3a\u4f7f\u80fd\u4fe1\u53f7\u7684\u82af\u7247\u9009\u62e9\u8f93\u5165\uff1a     + \u5176\u503c\u4e3a0\u65f6\uff0c\u8bd1\u7801\u5668\u7684\u8f93\u51fa\u4e3a0\uff0c\u56e0\u6b64\u4e0d\u9009\u62e9\u4efb\u4f55\u5217     + \u5176\u503c\u4e3a1\u65f6\uff0c\u53ef\u4ee5\u8bbf\u95eeRAM\u7684\u7279\u5b9a\u4f4d</p> <ol> <li>\u7528\\(4 \\times 4\\)\u7684RAM\u5355\u5143\u9635\u5217\u5b9e\u73b0\\(8 \\times 2\\) RAM </li> <li> <p>\u884c\u8bd1\u7801\u5668\u4e3a2-4\u8bd1\u7801\u5668\uff0c\u800c\u5217\u8bd1\u7801\u5668\u4e3a1-2\u8bd1\u7801\u5668</p> </li> <li> <p>\u5bf9\u4e8e\\(1K \\times 1\\)\u7684\u5185\u5b58</p> </li> <li> <p>\u4f7f\u75281\u4e2a10-1024\u8bd1\u7801\u5668\uff0c\u6211\u4eec\u9700\u89811024\u4e2a10\u8f93\u5165\u7684\u4e0e\u95e8</p> </li> <li>\u4f7f\u75282\u4e2a5-32\u8bd1\u7801\u5668\uff0c\u6211\u4eec\u9700\u898132 * 2 = 64\u4e2a5\u8f93\u5165\u7684\u4e0e\u95e8 </li> </ol>"},{"location":"notebooks/dld/7/#array-of-sram-ics","title":"Array of SRAM ICs","text":"<p>\u4e3a\u4e86\u66f4\u597d\u5730\u5e73\u8861\u5b57\u7684\u6570\u91cf\u548c\u5b57\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5927\u4e8e1\u4f4d/\u5b57\u7684ICs</p> <p>\u5185\u5b58\u6269\u5c55\u65b9\u6cd5\uff1a + \u5730\u5740\u7a7a\u95f4\u6269\u5c55(\u5730\u5740\u4f4d\u589e\u52a0)\u2014\u2014\u5b57\u6269\u5c55(word extension) + \u5b57\u5bbd\u6269\u5c55\u2014\u2014\u4f4d\u6269\u5c55(bit extension)</p> <p>\ud83c\udf30\uff1a </p> <p>\u4e3a\u4e86\u4fbf\u4e8e\u540e\u9762\u4ecb\u7ecdRAM IC\u9635\u5217\uff0c\u6211\u4eec\u5148\u7ed9\u51fa\\(64K \\times 8\\) RAM\u7684\u7b26\u53f7\uff1a </p> <p>\u6ce8\uff1a\u8f93\u51fa\u90e8\u5206\u7684\u4e09\u89d2\u5f62\u8868\u660e\u4f7f\u7528\u4e86\u4e09\u6001\u95e8\uff0c\u56e0\u6b64\u5f53CS = 0\u65f6\uff0c\u6570\u636e\u8f93\u51fa\u5904\u4e8e\u9ad8\u963b\u6297(Hi-Z)\u72b6\u6001\uff1bCS = 1\u65f6\uff0c\u6570\u636e\u8f93\u51fa\u4e3a\u9009\u5b9a\u5b57\u76848\u4f4d\u6570\u636e</p>"},{"location":"notebooks/dld/7/#word-extension","title":"Word Extension","text":"<p>\ud83c\udf30\uff1a\u7528\u4e0a\u9762\u7684RAM\u7ec4\u6210\\(256K \\times 8\\) RAM  + \u8f93\u5165\u6570\u636e\uff0c\u4f4e\u4f4d\u5730\u5740(\u5373\u5c0fRAM\u7684\u5168\u90e8\u5730\u5740)\uff0c\u8bfb/\u5199\u8f93\u5165\u4f20\u9012\u7ed9\u6bcf\u4e00\u4e2a\u5c0f\u7684RAM + \u9ad8\u4f4d\u5730\u5740(\u5373\u6269\u5c55\u7684RAM\u591a\u51fa\u6765\u7684\u5730\u5740\u4f4d)\u7531\u4e00\u4e2a\u8bd1\u7801\u5668\u8fdb\u884c\u5206\u914d\uff0c\u7528\u6765\u6311\u9009\u7528\u54ea\u4e2a\u5c0f\u7684RAM\uff1b\u518d\u7531\u5730\u4f4d\u5730\u5740\u6311\u9009\u7279\u5b9a\u7684\u5b57</p>"},{"location":"notebooks/dld/7/#bit-extension","title":"Bit Extension","text":"<p>\ud83c\udf30\uff1a\u8fd8\u662f\u7528\u4e0a\u9762\u7684\u5c0f\u5185\u5b58\uff0c\u6784\u5efa\\(64K \\times 16\\) RAM   + \u6570\u636e\u8f93\u5165\u548c\u8f93\u51fa\u88ab\u4e00\u4efd\u4e3a\u4e8c\uff0c\u7528\u4e8e\u4e0d\u540c\u7684\u5c0fRAM\u4e2d + \u4f46\u8fd9\u4e9bRAM\u63a5\u53d7\u76f8\u540c\u7684\u82af\u7247\u9009\u62e9\u548c\u8bfb/\u5199\u4fe1\u53f7</p> <p>[!note] \u4e3a\u4e86\u51cf\u5c11\u82af\u7247\u5f15\u811a\u7684\u6570\u91cf\uff0c\u5f88\u591aRAM ICs\u4e3a\u6570\u636e\u8f93\u5165\u548c\u8f93\u51fa\u63d0\u4f9b\u4e00\u4e2a\u201d\u516c\u5171\u7ad9\u70b9(common terminal)\u201c\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u53cc\u5411\u7684(bidirectional)\uff0c\u5373\uff1a\u5f53\u8bfb\u53d6\u6570\u636e\u65f6\u4f5c\u4e3a\u8f93\u51fa\uff0c\u5f53\u5199\u5165\u6570\u636e\u65f6\u4f5c\u4e3a\u8f93\u5165\u3002\u4e09\u6001\u95e8\u4fbf\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9</p>"},{"location":"notebooks/dld/7/#dynamic-ramdram-integrated-circuits","title":"Dynamic RAM(DRAM) Integrated Circuits","text":"<p>\u5728DRAM\u4e2d\uff0c\u4fe1\u606f\u88ab\u5b58\u50a8\u4e0e\u7535\u5bb9\u5185\uff0c\u901a\u8fc7\u5145\u653e\u7535\u6539\u53d8\u5b58\u50a8\u7684\u503c\uff1b\u5b58\u50a8\u3001\u5145\u653e\u7535\u5747\u7531\u4f5c\u4e3a\u201c\u5f00\u5173\u201d\u7684\u6676\u4f53\u7ba1\u63a7\u5236\u3002</p> <p>\u6bcf\u4e2aDRAM\u82af\u7247\u9700\u8981\u5728\u6307\u5b9a\u7684\u6700\u5927\u5237\u65b0\u65f6\u95f4\u5185\u8fdb\u884c\u5237\u65b0</p> <p>\u7b26\u53f7\uff1a </p> <p>\u6211\u4eec\u7528\u63a7\u5236\u6c34\u538b\u7684\u88c5\u7f6e\u7684\u64cd\u4f5c\u548cDRAM\u7684\u64cd\u4f5c\u8fdb\u884c\u7c7b\u6bd4\uff1a </p> <p>\u5206\u6790\uff1a + \u7535\u5bb9\u5145\u6ee1\u7535\u65f6\uff0c\u770b\u4f5c\u903b\u8f911\uff1b\u7535\u5bb9\u7535\u91cf\u4e0d\u8db3\u65f6\uff0c\u770b\u4f5c\u903b\u8f910 + \u5c06\u6676\u4f53\u7ba1\u4f5c\u4e3a\u5f00\u5173\uff1a     + \u201c\u5f00\u5173\u201d\u65ad\u5f00\uff1a\u7535\u5bb9\u91cc\u7684\u7535\u8377\u4fdd\u6301\u4e0d\u53d8\uff0c\u5373\u5b58\u50a8\u503c     + \u201c\u5f00\u5173\u201d\u95ed\u5408\uff1a\u6839\u636e\u5916\u90e8\u4f4d(B)\u7ebf\u8def\uff0c\u7535\u8377\u80fd\u591f\u4ece\u7535\u5bb9\u4e2d\u6d41\u8fdb\u6d41\u51fa</p> <p>\u57fa\u672c\u64cd\u4f5c\uff1a + \u8bfb     + \u4f4d\u7ebf\u8def\u9884\u5148\u5145\u597d\u7535\uff0c\u4f7f\u7535\u538b\u4f4d\u4e8e\u9ad8\u4f4e\u7535\u5e73\u4e4b\u95f4     + \u5b57\u7ebf\u8def\u4e0a\u5347\uff0c\u6253\u5f00\u6a2a\u6746     + \u611f\u6d4b\u653e\u5927\u5668(sense amplifier) \u653e\u5927\u5c0f\u7535\u538b + \u5199\uff1a     + \u611f\u6d4b\u653e\u5927\u5668\u4f4d\u4e8e\u9ad8\u4f4e\u7535\u5e73\u4e4b\u95f4     + \u6253\u5f00\u6a2a\u6746\uff0c\u5bf9\u5355\u5143\u5145\u7535\u6216\u653e\u7535 </p> <p>\u6bc1\u706d\u6027\u7684\u8bfb\u53d6(destructive read)\uff1a\u8bfb\u53d6\u5185\u5b58\u6570\u636e\u540e\uff0c\u539f\u6765\u7684\u5185\u5bb9\u88ab\u5220\u9664 </p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u8bfb\u53d60\u62161\u540e\uff0c\u5355\u5143\u7684\u5185\u5bb9\u5c11\u4e86\u4e00\u534a</p>"},{"location":"notebooks/dld/7/#bit-slice_1","title":"Bit Slice","text":"<ul> <li>C\u7531\u4e09\u6001\u95e8\u9a71\u52a8</li> <li>\u611f\u6d4b\u653e\u5927\u5668\u7528\u4e8eC\u4e0a\u9762\u7535\u538b\u7684(\u5230H\u6216L\u7684)\u5c0f\u6539\u53d8</li> <li>B, C\u548c\u611f\u6d4b\u653e\u5927\u5668\u8f93\u51fa\u88ab\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u4ee5\u9632\u201c\u6bc1\u706d\u6027\u7684\u8bfb\u53d6\u201d\u53d1\u751f</li> </ul> <p>DRAM\u7684\u6846\u56fe(\u5305\u62ec\u5237\u65b0)\uff1a </p> <ul> <li>\u4e3a\u4e86\u51cf\u5c11\u5f15\u811a\u7684\u6570\u91cf\uff0cDRAM\u5730\u5740\u901a\u5e38\u88ab\u5206\u4e3a\u8fde\u7eed\u7684\u4e24\u90e8\u5206\uff1a\u5148\u662f\u884c\u5730\u5740\uff0c\u540e\u4e3a\u5217\u5730\u5740\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a\u7528\u6765\u6267\u884c\u884c\u9009\u62e9\u7684\u884c\u5730\u5740\u9700\u8981\u5728\u5217\u5730\u5740\u4e4b\u524d\u4f7f\u7528(\u5217\u5730\u5740\u9700\u8981\u6839\u636e\u884c\u9009\u62e9\u7684\u7ed3\u679c\u8bfb\u53d6\u6570\u636e)</li> <li>\u7528\u5bc4\u5b58\u5668\u4fdd\u5b58\u6765\u81ea\u8bfb\u53d6\u6216\u5199\u5165\u5468\u671f\u7684\u884c/\u5217\u5730\u5740</li> <li>\u884c\u5730\u5740\u9009\u901a(row address strobe)\\(\\overline{RAS}\\)\uff1a\u884c\u5730\u5740\u5bc4\u5b58\u5668\u7684\u52a0\u8f7d\u4fe1\u53f7</li> <li>\u5217\u5730\u5740\u9009\u901a(column address strobe)\\(\\overline{CAS}\\)\uff1a\u5217\u5730\u5740\u5bc4\u5b58\u5668\u7684\u52a0\u8f7d\u4fe1\u53f7</li> <li>\u4ee5\u53ca\u8f93\u51fa\u4f7f\u80fd\\(\\overline{OE}\\)\uff0c\u5b83\u4eec\u5747\u4e3a\u4f4e\u7535\u5e73\u6d3b\u8dc3</li> </ul>"},{"location":"notebooks/dld/7/#address-multiplexing","title":"Address Multiplexing","text":"<p>DRAM\u6bd4SRAM\u8981\u5bc6\u96c6\u5f97\u591a\u3002\u56e0\u6b64\u4e3a\u4e86\u51cf\u5c11\u5f15\u811a\u7684\u4f7f\u7528\u6570\u91cf\uff0cDRAM\u5229\u7528\u591a\u8def\u590d\u7528\u7684\u5730\u5740(multiplexed address)\uff0c\u51ed\u6b64\u53ef\u4ee5\u4f7f\u4e00\u7ec4\u5f15\u811a\u5bb9\u7eb3\u6240\u6709\u7684\u5730\u5740\u5355\u5143(\u5730\u5740\u662f\u6309\u5148\u884c\u540e\u5217\u987a\u5e8f\u7684)</p> <p>\ud83c\udf30\uff1a\\(64K \\times 1\\) DRAM </p> <p>DRAM\u7684\u8bbf\u95ee\u987a\u5e8f\uff1a </p> <p>DRAM\u7684\u8bfb\u53d6\u548c\u5199\u5165\u7684\u65f6\u5e8f\u56fe\uff1a </p> <p></p>"},{"location":"notebooks/dld/7/#refreshing","title":"Refreshing","text":"<p>\u4e4b\u6240\u4ee5\u79f0DRAM\u662f\u201c\u52a8\u6001\u7684\u201d\uff0c\u662f\u56e0\u4e3a\u5373\u4f7f\u5728\u6ca1\u6709\u8bbf\u95ee\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\uff0cDRAM\u5355\u5143\u8fd8\u662f\u4f1a\u635f\u5931\u5185\u5bb9\u3002\u56e0\u6b64DRAM\u5fc5\u987b\u5b9a\u671f\u5730\u8fdb\u884c\u8bfb\u53d6\u548c\u91cd\u5199</p> <p>\u4e09\u79cd\u5237\u65b0\u65b9\u5f0f\uff1a + \u53ea\u5237\u65b0RAS(RAS-only refresh)(\u4ec5\u8bbf\u95ee\u884c\uff0c\u4e0d\u8bbf\u95ee\u5217)     + RAS\u88ab\u6fc0\u6d3b\uff0c\u4e00\u4e2a\u884c\u5730\u5740(\u5237\u65b0\u5730\u5740)\u7528\u4e8eDRAM\uff1bCAS\u4e0d\u52a8     + DRAM\u5728\u5185\u90e8\u8bfb\u53d6\u4e00\u884c\uff0c\u5e76\u653e\u5927\u8bfb\u53d6\u6570\u636e\u3002\u7531\u4e8eCAS\u88ab\u7981\u7528\uff0c\u6ca1\u6709\u6570\u636e\u88ab\u4f20\u5230\u8f93\u51fa\u5f15\u811a\u4e0a     + \u7f3a\u70b9\uff1a\u9700\u8981\u989d\u5916\u7684\u5916\u90e8\u903b\u8f91\u8bbe\u5907\u6765\u8fde\u7eed\u751f\u6210\u884c\u5730\u5740  + RAS\u5237\u65b0\u524d\u7684CAS(CAS before RAS refresh)     + DRAM\u6709\u81ea\u5df1\u7684\u5237\u65b0\u903b\u8f91\u2014\u2014\u5730\u5740\u8ba1\u6570\u5668\u3002\u5f53\u5e8f\u5217\u7528\u4e8eCAS\u548cRAS\u4e0a\uff0c\u5185\u90e8\u5237\u65b0\u903b\u8f91\u751f\u6210\u4e00\u4e2a\u5730\u5740\uff0c\u5e76\u5237\u65b0\u5bf9\u5e94\u7684\u5355\u5143     + \u6bcf\u4e2a\u5468\u671f\u540e\uff0c\u5730\u5740\u8ba1\u6570\u5668\u4f1a\u81ea\u589e     + \u5185\u5b58\u63a7\u5236\u5668\u53ea\u9700\u53d1\u51fa\u4fe1\u53f7  + \u9690\u853d\u5237\u65b0(hidden refresh)\uff1a     + \u4f34\u968f\u6b63\u5e38\u7684\u8bfb\u53d6\u6216\u5199\u5165\uff0cCAS = 0\uff0cRAS\u6309\u5468\u671f\u53d8\u5316\uff0c\u6709\u6548\u6267\u884c\u7b2c\u4e8c\u79cd\u5237\u65b0\u65b9\u6cd5\u3002\u5728\u8fd9\u79cd\u5237\u65b0\u65b9\u6cd5\u4e2d\uff0c\u4e4b\u524d\u8bfb\u53d6\u7684\u8f93\u51fa\u6570\u636e\u4f9d\u65e7\u5408\u6cd5\uff0c\u56e0\u6b64\u8ba4\u4e3a\u5237\u65b0\u662f\u9690\u853d\u7684     + \u7f3a\u70b9\uff1a\u82b1\u8d39\u65f6\u95f4\u592a\u957f\uff0c\u5bfc\u81f4\u540e\u7eed\u8bfb\u5199\u64cd\u4f5c\u7684\u5ef6\u8fdf </p> <p>\u5237\u65b0\u6a21\u5f0f\uff1a + \u7a81\u53d1\u6a21\u5f0f(burst mode)\uff1a\u505c\u6b62\u5de5\u4f5c\uff0c\u5237\u65b0\u6240\u6709\u6570\u636e  + \u5206\u5e03\u6a21\u5f0f(distributed mode)\uff1a\u95f4\u9694\u4e00\u6bb5\u65f6\u95f4\u5237\u65b0\uff0c\u4ece\u800c\u907f\u514d\u957f\u65f6\u95f4\u7684\u5185\u5b58\u963b\u585e\uff0c\u8fd9\u79cd\u5237\u65b0\u65b9\u5f0f\u66f4\u52a0\u5e38\u7528 </p>"},{"location":"notebooks/dld/7/#dram-types","title":"DRAM Types","text":"<p>\u7c7b\u578b\uff1a + \u540c\u6b65DRAM(SDRAM) + \u53cc\u500d\u6570\u636e\u7387SDRAM(DDR SDRAM) + RAMBUS\u00ae DRAM(RDRAM)</p> <p>\u8bf4\u660e\uff1a + DRAM\u901a\u5e38\u7528\u4f5c\u5185\u5b58\u5206\u5c42\u7ed3\u6784\u7684\u4e00\u90e8\u5206 + \u4eceDRAM\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\u4f1a\u88ab\u7528\u4e8e\u6574\u4e2a\u5206\u5c42\u7ed3\u6784\u4e2d\u66f4\u5e95\u5c42\u7684\u90e8\u5206 + \u4eceDRAM\u4e2d\u4f20\u8f93\u9700\u8981\u591a\u4e2a\u8fde\u7eed\u7684\u5e26\u5730\u5740\u7684\u5b57 + \u5f88\u591a\u5b57\u5728\u4f7f\u7528\u5355\u884c\u5730\u5740\u7684DRAM ICs\u7684\u5185\u90e8\u88ab\u8bfb\u53d6\uff0c\u5e76\u5728\u5185\u5b58\u4e2d\u88ab\u6355\u83b7 + \u8fd9\u6837\u7684\u8bfb\u53d6\u4f1a\u82b1\u8d39\u76f8\u5f53\u957f\u7684\u65f6\u95f4 + \u8fd9\u4e9b\u5b57\u968f\u540e\u901a\u8fc7\u5185\u5b58\u6570\u636e\u603b\u7ebf\uff0c\u4f7f\u7528\u4e00\u7cfb\u5217\u7684\u65f6\u949f\u4f20\u8f93\u88ab\u4f20\u8f93\u81f3\u5916\u9762 + \u8fd9\u4e9b\u4f20\u8f93\u7684\u5ef6\u8fdf\u8f83\u4f4e\uff0c\u56e0\u6b64\u80fd\u5728\u77ed\u65f6\u95f4\u5185\u5b8c\u6210 + \u5217\u5730\u5740\u88ab\u6355\u83b7\uff0c\u7136\u540e\u88ab\u7528\u4e8eDRAM\u7684\u540c\u6b65\u8ba1\u6570\u5668\u4e2d\uff0c\u7528\u6765\u4e3a\u4f20\u8f93\u63d0\u4f9b\u8fde\u7eed\u7684\u5217\u5730\u5740</p> <p>\u7a81\u53d1\u8bfb\u53d6(burst read)\uff1a\u4ece\u8fde\u7eed\u5730\u5740\u4e2d\u8bfb\u53d6\u591a\u4e2a\u5b57 </p>"},{"location":"notebooks/dld/7/#synchronous-dram","title":"Synchronous DRAM","text":"<ul> <li>\u6240\u6709\u7684\u4fe1\u53f7\u4e0e\u5916\u90e8\u65f6\u949f(external clock) \u5173\u8054<ul> <li>\u4f7f\u65f6\u95f4\u4e0e\u5176\u4ed6\u7cfb\u7edf(\u6bd4\u5982CPU)\u7684\u5339\u914d\u66f4\u52a0\u7cbe\u786e</li> <li>\u540c\u6b65\u5bc4\u5b58\u5668\u51fa\u73b0\u4e8e\u5730\u5740\u8f93\u5165\u3001\u6570\u636e\u8f93\u5165\u548c\u8f93\u51fa\u4e2d</li> </ul> </li> <li>\u7a81\u53d1\u4e14\u6709\u65b9\u5411\u7684\u8bfb\u53d6\u548c\u5199\u5165\u8bbf\u95ee\uff1a<ul> <li>\u5217\u5730\u5740\u8ba1\u6570\u5668(column address counter)\uff1a\u7528\u6765\u4e3a\u5c06\u968f\u65f6\u949f\u5468\u671f\u4f20\u8f93\u7684\u5185\u90e8\u6570\u636e\u5206\u914d\u5730\u5740</li> <li>\u8ba1\u6570\u5668\u7684\u4e0a\u9650\uff1aaddress + burst length - 1</li> <li>\u7a81\u53d1\u957f\u5ea6(burst length) \u662f\u53ef\u7f16\u7a0b\u7684</li> </ul> </li> <li>\u4e00\u79cd\u7528\u6237\u53ef\u7f16\u7a0b\u6a21\u5f0f\u7684\u5bc4\u5b58\u5668<ul> <li>CAS\u6f5c\u4f0f(latency)\uff0c\u7a81\u53d1\u957f\u5ea6\u3001\u7a81\u53d1\u7c7b\u578b</li> </ul> </li> </ul> <p>\ud83c\udf30\uff1a16MB SDRAM\u7684\u6846\u56fe </p> <p>SDRAM\u7684\u65f6\u5e8f\u56fe\uff1a </p> <p>\u6ce8\uff1a\u7a81\u53d1\u957f\u5ea6 = 4</p> <p>\u5185\u5b58\u5e26\u5bbd(memory bandwidth)\uff1a\u5185\u5b58\u7684\u901f\u5ea6\u2014\u2014\u6570\u636e\u8bfb\u53d6\u6216\u5b58\u5165\u7684\u6700\u5927\u901f\u7387\u3002\u5355\u4f4d\u4e00\u822c\u4e3aMB/s\u6216GB/s\u3002SDRAM\u7684\u5185\u5b58\u5e26\u5bbd\u4e0e\u7a81\u53d1\u5927\u5c0f(burst size)\u76f8\u5173</p> <p>\ud83c\udf30\uff1a + \u5185\u5b58\u6570\u636e\u8def\u5f84\u5bbd\u5ea6\uff1a1B + \u5185\u5b58\u65f6\u949f\u5468\u671f\uff1a7.5ns + \u6f5c\u4f0f\u65f6\u95f4(\u4ece\u5e94\u7528\u884c\u5730\u5740\u5f00\u59cb\uff0c\u76f4\u5230\u7b2c\u4e00\u4e2a\u53ef\u7528\u7684\u5b57\u51fa\u73b0\u7684\u65f6\u95f4)\uff1a4\u4e2a\u5468\u671f</p> <ol> <li> <p>\u7a81\u53d1\u5927\u5c0f\uff1a8B</p> <ul> <li>\u8bfb\u53d6\u5468\u671f\uff1a(4 + 8) * 7.5 = 90ns</li> <li>\u5185\u5b58\u5e26\u5bbd\uff1a8 / (90 * \\(10^{-9}\\)) = 88.89 MB/s</li> </ul> </li> <li> <p>\u7a81\u53d1\u5927\u5c0f\uff1a2048B</p> <ul> <li>\u8bfb\u53d6\u5468\u671f\uff1a(4 + 2048) * 7.5 = 15390ns</li> <li>\u5185\u5b58\u5e26\u5bbd\uff1a2048 / (15390 * \\(10^{-9}\\)) = 133.07 MB/s</li> </ul> </li> </ol>"},{"location":"notebooks/dld/7/#double-data-rate-synchronous-dram","title":"Double Data Rate Synchronous DRAM","text":"<ul> <li>\u5728\u65f6\u949f\u4e24\u4fa7\u7684\u8fb9\u6cbf\u5747\u53ef\u4f20\u8f93\u6570\u636e</li> <li>\u63d0\u4f9b\u6bcf\u4e2a\u5468\u671f\u51852\u4e2a\u6570\u636e\u5b57\u7684\u4f20\u8f93\u901f\u7387 </li> </ul> <p>\ud83c\udf30\uff1a </p>"},{"location":"notebooks/dld/7/#rambus-dramrdram","title":"RAMBUS DRAM(RDRAM)","text":"<ul> <li>\u5728RDRAM ICs\u4e0e\u8fde\u81f3\u5904\u7406\u5668\u7684\u5185\u5b58\u603b\u7ebf\u4e4b\u95f4\u7684\u8fde\u63a5\u4e2d\u4f7f\u7528\u57fa\u4e8e\u5305\u7684\u603b\u7ebf(packet-based bus)</li> <li>\u603b\u7ebf\u5305\u62ec\uff1a<ul> <li>3\u4f4d\u884c\u5730\u5740\u603b\u7ebf</li> <li>5\u4f4d\u5217\u5730\u5740\u603b\u7ebf</li> <li>16\u621618\u4f4d(\u7528\u4e8e\u9519\u8bef\u7ea0\u6b63)\u6570\u636e\u603b\u7ebf</li> </ul> </li> <li>\u603b\u7ebf\u662f\u540c\u6b65\u7684\uff0c\u5728\u65f6\u949f\u4e24\u4fa7\u7684\u8fb9\u6cbf\u5747\u53ef\u4f20\u8f93</li> <li>\u6bcf\u4e2a\u5305(packet) \u57284\u4e2a\u65f6\u949f\u5468\u671f\u5185\u63d0\u4f9b8\u6b21\u4f20\u8f93\uff0c\u8fd9\u610f\u5473\u7740\uff1a<ul> <li>12\u4f4d\u7684\u884c\u5730\u5740\u5305</li> <li>20\u4f4d\u7684\u5217\u5730\u5740\u5305</li> <li>128\u6216144\u4f4d\u7684\u6570\u636e\u5305</li> </ul> </li> <li>\u591a\u4e2a\u5185\u5b58\u5e93\u7528\u6765\u5141\u8bb8\u7528\u4e0d\u540c\u7684\u884c\u5730\u5740\u5bf9\u5185\u5b58\u8fdb\u884c\u540c\u65f6\u8bbf\u95ee</li> <li>\u8fd9\u79cd\u8bbe\u8ba1\u5341\u5206\u7cbe\u5bc6\uff0c\u4ece\u800c\u6709\u5f88\u5feb\u7684\u8fd0\u884c\u901f </li> </ul> <p>\ud83c\udf30\uff1a16 MB RDRAM\u7684\u65f6\u5e8f </p>"},{"location":"notebooks/dld/7/#arrays-of-dram-integrated-circuits","title":"Arrays of DRAM Integrated Circuits","text":"<p>DRAM\u7684\u9635\u5217\u4e0eSRAM\u7c7b\u4f3c\uff0c\u9664\u4e86\u591a\u4e86\u4e00\u4e2a\u79f0\u4e3aDRAM\u63a7\u5236\u5668(DRAM controller) \u7684IC + \u5c06\u5730\u5740\u5206\u4e3a\u884c\u5730\u5740\u548c\u5217\u5730\u5740\uff0c\u5e76\u4e3a\u5b83\u4eec\u7684\u4f7f\u7528\u8ba1\u65f6 + \u63d0\u4f9b\\(\\overline{RAS}\\)\u548c\\(\\overline{CAS}\\)\uff0c\u5e76\u4e3a\u5b83\u4eec\u7684\u4f7f\u7528\u8ba1\u65f6 + \u5728\u8981\u6c42\u7684\u95f4\u9694\u5185\u6267\u884c\u5237\u65b0\u64cd\u4f5c + \u4e3a\u7cfb\u7edf\u7684\u5269\u4f59\u90e8\u5206\u63d0\u4f9b\u72b6\u6001\u4fe1\u53f7(\u8868\u660e\u5185\u5b58\u662f\u5426\u662f\u5904\u4e8e\u6d3b\u8dc3\u72b6\u6001\uff0c\u6216\u8005\u662f\u5426\u5728\u6267\u884c\u5237\u65b0\u64cd\u4f5c)</p> <p>DRAM\u7ec4\u7ec7\uff1a </p>"},{"location":"notebooks/dld/verilog/","title":"Verilog","text":":material-circle-edit-outline: \u7ea6 100 \u4e2a\u5b57 :fontawesome-solid-code: 245 \u884c\u4ee3\u7801 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f"},{"location":"notebooks/dld/verilog/#chap-2-combinational-logic-circuits","title":"Chap 2 Combinational Logic Circuits","text":"<p> <pre><code>module fig2_5(L, D, X, A);\ninput D, X, A;\noutput L;\nwire X_n, t2;\nnot (X_n, X);\nand (t2, D, X_n);\nor (L, t2, A);\nendmodule\n</code></pre></p> <p></p> <pre><code>// structral model\nmodule comparator_greater_than_structural(A, B, A_greater_than_B);\ninput [1: 0] A, B;\noutput A_greater_than_B;\nwire B0_n, B1_n, and0_out, and1_out, and2_out;\nnot\ninv0(B0_n, B[0]), inv1(B1_n, B[1]);\nand\nand0(and0_out, A[1], B1_n);\nand1(and1_out, A[1], A[0], B0_n);\nand2(and2_out, A[0], B1_n, B0_n);\nor\nor0(A_greater_than_B, and0_out, and1_out, and2_out);\nendmodule\n// dataflow model\nmodule comparator_greater_than_dataflow(A, B, A_greater_than_B);\ninput [1: 0] A, B;\noutput A_greater_than_B;\nwire B0_n, B1_n, and0_out, and1_out, and2_out;\nassign B1_n = ~B[1];\nassign B0_n = ~B[0];\nassign and0_out = A[1] &amp; B1_n;\nassign and1_out = A[1] &amp; A[0] &amp; B0_n;\nassign and2_out = A[0] &amp; B1_n &amp; B0_n;\nassign A_greater_than_B = and0_out | and1_out | and2_out;\nendmodule\n// conditional model 1\nmodule comparator_greater_than_conditional2(A, B, A_greater_than_B);\ninput [1: 0] A, B;\noutput A_greater_than_B;\nassign A_greater_than_B = (A &gt; B)? 1'b1 : 1'b0;\nendmodule\n// conditional model 2\nmodule comparator_greater_than_conditional(A, B, A_greater_than_B);\ninput [1: 0] A, B;\noutput A_greater_than_B;\nassign A_greater_than_B = (A == 2'b00) ? 1'b0 :\n(A == 2'b01)? ~(B[1] | B[0]) : (A == 2'b10)? ~B[1] : (A == 2'b11)? ~(B[1]&amp;B[0]) : 1'bx;\nendmodule\n// behavioral model \nmodule comparator_greater_than_behavioral(A, B, A_greater_than_B);\ninput [1: 0] A, B;\noutput A_greater_than_B;\nassign A_greater_than_B = A &gt; B;\nendmodule\n// testbench\nmodule comparator_testbench_verilog();\nreg [1: 0] A, B;\nwire struct_out;\ncomparator_greater_than_structural U1(A, B, struct_out);\ninitial begin\nA = 2'b10;\nB = 2'b00;\n#10;\nB = 2'b01;\n#10;\nB = 2'b10;\n#10;\nB = 2'b11;\nend\nendmodule\n</code></pre>"},{"location":"notebooks/dld/verilog/#chap-3-combinational-logic-design","title":"Chap 3 Combinational Logic Design","text":"<p>\u6ce8\uff1a\u540e\u9762\u5982\u679c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u9898\u76ee\u6709\u4e0d\u540c\u7684Verilog\u5b9e\u73b0\u4ee3\u7801\uff0c\u4ec5\u6458\u5f55\u6700\u6613\u4e8e\u7406\u89e3\uff0c\u4e14\u6700\u77ed\u7684\u90a3\u4e2a\ud83d\udc36</p> <p>2-4\u8bd1\u7801\u5668 <pre><code>module decoder_2_to_4_v(EN, A0, A1, D0, D1, D2, D3);\ninput EN, A0, A1;\noutput D0, D1, D2, D3;\nassign D0 = EN &amp; ~A1 &amp; ~A0;\nassign D1 = EN &amp; ~A1 &amp; A0;\nassign D2 = EN &amp; A1 &amp; ~A0;\nassign D3 = EN &amp; A1 &amp; A0;\nendmodule;\n</code></pre></p> <p>4-1\u591a\u8def\u9009\u62e9\u5668 <pre><code>module multiplexer_4_to_1_v(S, I, Y);\ninput [1: 0] S;\ninput [3: 0] I;\noutput Y;\nassign Y = S[1] ? (S[0] ? I[3] : I[2]) : (S[0] ? I[1] : I[0]);\nendmodule\n</code></pre></p> <p>4\u4f4d\u884c\u6ce2\u52a0\u6cd5\u5668 <pre><code>module half_adder_b(x, y, s, c);\ninput x, y;\noutput s, c;\nassign s = x ^ y;\nassign c = x &amp; y;\nendmodule;\nmodule full_adder_v(x, y, z, s, c);\ninput x, y, z;\noutput s, c;\nwire hs, hc, tc;\nhalf_adder_v HA1(x, y, hs, hc), HA2(hs, z, s, tc);\nassign c = tc | hc;\nendmodule;\nmodule adder_4_v(B, A, C0, S, C4);\ninput [3: 0] B, A;\ninput C0;\noutput [3: 0] S; output C4;\nwire [3: 1] C;\nfull_adder_V Bit0(B[0], A[0], C0, S[0], C[1]),\nBit1(B[1], A[1], C[1], S[1], C[2]),\nBit2(B[2], A[2], C[2], S[2], C[3]),\nBit3(B[3], A[3], C[3], S[3], C[4]);\n// Or just one statement\n// assign {C4, S} = A + B + C0;\nendmodule\n</code></pre></p>"},{"location":"notebooks/dld/verilog/#chap-4-sequential-circuits","title":"Chap 4 Sequential Circuits","text":"<p>\u6b63\u8fb9\u6cbf\u89e6\u53d1\u5668(\u6709\u590d\u4f4d\u529f\u80fd) <pre><code>module dff_v(CLK, RESET, D, Q);\ninput CLK, RESET, D;\noutput Q;\nreg Q;\nalways @(posedge CLK or posedge RESET) begin\nif (RESET)\nQ &lt;= 0;\nelse\nQ &lt;= D;\nend\nendmodule\n</code></pre></p> <p>[[Chap 4 Sequential Circuits#Sequential Circuit Design|\u5e8f\u5217\u8bc6\u522b\u5668]] <pre><code>module seq_rec_v(CLK, RESET, X, Z);\ninput CLK, RESET, X;\noutput Z;\nreg [1: 0] state, next_state;\nparameter A = 2'b00, B = 2'b01, C = 2'b10, D = 2'b11;\nreg Z;\n// state register: implement positive edge-triggered\n// state storage with asychronous reset\nalways @(posedge CLK or posedge RESET) begin\nif (RESET)\nstate &lt;= A;\nelse\nstate &lt;= next_state;\nend\n//.te function: implements next state as function of X and state\nalways @(X or state) begin\ncase (state)\nA: next_state = X ? B : A;\nB: next_state = X ? C : A;\nC: next_state = X ? C : D;\nD: next_state = X ? B : A;\nendcase\nend\n// output function: implements output as function of X and state\nalways @(X or state) begin\ncase (state)\nA: Z = 1'b0;\nB: Z = 1'b0;\nC: Z = 1'b0;\nD: Z = X ? 1'b1 : 1'b0;\nendcase\nend\nendmodule\n// testbench for sequence recognizer\nmodule seq_req_v_testbench();\nwire Z;\nreg clock, X, reset;\nreg [0: 10] test_sequence = 11'b011_1010_1100;\ninteger i;\nparameter PERIOD = 100;\nseq_rec_v DUT(clock, reset, X, Z);\ninitial begin\nreset = 1'b1;\nX = 1'b0;\n#(5 * PERIOD / 4);\nreset = 1'b0;\nfor (i = 0; i &lt; 11; i = i + 1) begin\nX = test_sequence[i];\n#PERIOD;\nend\n$stop;\nend\nalways begin\nclock = 1'b1;\n#(PERIOD/2);\nclock = 1'b0;\n#(PERIOD/2);\nend\nendmodule\n</code></pre></p>"},{"location":"notebooks/dld/verilog/#chap-6-registers-and-register-transfer","title":"Chap 6 Registers and Register Transfer","text":"<p>4\u4f4d\u5de6\u79fb\u79fb\u4f4d\u5bc4\u5b58\u5668 <pre><code>module srq_4_r_v(CLK, RESET, SI, Q, SO);\ninput CLK, RESET, SI;\noutput [3: 0] Q;\noutput SO;\nreg [3: 0] Q;\nassign SO = Q[3];\nalways @(posedge CLK or posedge RESET) begin\nif (RESET)\nQ &lt;= 4'b0000;\nelse\nQ &lt;= {Q[2: 0], SI};\nend\nendmodule\n</code></pre></p> <p>4\u4f4d\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668 <pre><code>module count_4_r_v(CLK, RESET, EN, Q, CO);\ninput CLK, RESET, EN;\noutput [3: 0] Q;\noutput CO;\nreg [3: 0] Q;\nassign CO = (count == 4'b1111 &amp;&amp; EN == 1'b1) ? 1 : 0;\nalways @(posedge CLK or posedge RESET) begin\nif (RESET)\nQ &lt;= 4'b0000;\nelse if (EN)\nQ &lt;= Q + 4'b0001;\nend\nendmodule\n</code></pre></p>"},{"location":"notebooks/dm/1/","title":"Chapter 1 The Foundations:  Logic and Proofs","text":":material-circle-edit-outline: \u7ea6 5797 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 19 \u5206\u949f"},{"location":"notebooks/dm/1/#11-propositional-logic","title":"1.1 Propositional Logic","text":""},{"location":"notebooks/dm/1/#propositions","title":"Propositions","text":"<p>\u547d\u9898(proposition)\uff1a\u4e00\u4e2a\u9648\u8ff0\u53e5 \uff0c\u8981\u4e48\u771f\u8981\u4e48\u5047\uff0c\u4f46\u4e0d\u540c\u65f6\u4e3a\u771f\u4e3a\u5047 \u547d\u9898\u53d8\u91cf(proposition variables) \u4e00\u822c\u7528\u5b57\u6bcd\uff08e.g. \\(p, q, r, s \\dots\\)\uff09\u8868\u793a</p> <p>\u5206\u7c7b\uff1a</p> <ul> <li>\u539f\u5b50\u547d\u9898(atomic proposition) \u4e0d\u80fd\u88ab\u8868\u793a\u6210\u66f4\u7b80\u5355\u7684\u5f62\u5f0f\u7684\u547d\u9898</li> <li>\u590d\u5408\u547d\u9898(compound proposition) \u7531\u4e00\u4e9b\u547d\u9898\u901a\u8fc7 \u903b\u8f91\u8fd0\u7b97\u7b26(logic operators) \u8fde\u63a5\u800c\u6210\u7684\u547d\u9898</li> </ul>"},{"location":"notebooks/dm/1/#truth-tables","title":"Truth Tables","text":"<p>\u53ef\u4ee5\u7528\u6765\u5224\u65ad\u662f\u5426\u4e3a\u547d\u9898\u7b49\u503c(equivalent propositions)(\u540e\u9762\u4f1a\u8bb2\u5230)</p> <p>\u6ce8\uff1a</p> <ol> <li>\u5982\u679c\u6709\\(n\\)\u4e2a\u547d\u9898\u53d8\u91cf\uff0c\u90a3\u4e48\u771f\u503c\u8868\u5c31\u4f1a\u6709\\(2^n\\)\u884c</li> <li>\u5982\u679c\u6709\\(n\\)\u4e2a\u547d\u9898\u53d8\u91cf\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6784\u9020\u51fa\\(2^{2^n}\\)\u4e2a\u4e0d\u540c\u7684\u547d\u9898(\u9700\u8981\u7528\u5230\u8ba1\u6570\u7684\u77e5\u8bc6)</li> </ol>"},{"location":"notebooks/dm/1/#logic-operator","title":"Logic Operator","text":"<p>\u5047\u8bbe\\(p, q\\)\u4e3a\u4e24\u4e2a\u4e0d\u540c\u7684\u547d\u9898</p> <ul> <li> <p>\u5426\u5b9a(negation)\uff1a\\(\\neg p\\) (\u8bfb\u4f5cnot p)</p> </li> <li> <p>\u5408\u53d6(conjunction)\uff1a\\(p \\land q\\) (\u8bfb\u4f5cp and q)</p> <p>\u6ce8\uff1a\u6709\u65f6\u5019but\u4e5f\u8868\u793a \\(\\land\\)</p> </li> <li> <p>\u6790\u53d6(disjunction)\uff1a\\(p \\lor q\\)\u200b (\u8bfb\u4f5cp or q)</p> </li> <li> <p>\u5f02\u6216(exclusive or, XOR)\uff1a\\(p \\oplus q\\)\u200b (\u8bfb\u4f5cp XOR q)</p> <p>\u6ce8\uff1a 1. either\u2026or\u2026 \u8868\u793aXOR 2. or\u6709\u65f6\u4e5f\u8868\u793aXOR\uff0c\u5177\u4f53\u7ed3\u5408\u8bed\u5883\u770b\uff0c\u6240\u4ee5or\u6709\u4e24\u79cd\u542b\u4e49\uff1a   + inclusive or : \\(\\lor\\)\u200b   + exclusive or : \\(\\oplus\\)</p> </li> </ul>"},{"location":"notebooks/dm/1/#conditional-statements","title":"Conditional Statements","text":"<ul> <li>\u6761\u4ef6\u8bed\u53e5(conditional statements, or implication)\uff1a\\(p \\rightarrow q\\) (\u8bfb\u4f5c if p, then q)     </li> </ul> <p>\u6ce8\uff1a 1. \\(p\\)\u79f0\u4e3a\u524d\u63d0(hypothesis), \\(q\\)\u200b\u79f0\u4e3a\u7ed3\u8bba(conclusion) 2. \u6761\u4ef6\u8bed\u53e5\u7684\u591a\u79cd\u8868\u8ff0\uff1a \u2757\u91cd\u70b9\u8bb0\u4f4f\u8fd9\u4e24\u4e2a\uff0c\u5f88\u5bb9\u6613\u6df7\u6dc6\uff1a \\(p\\) only if \\(q\\)\uff0c \\(q\\) unless \\(\\neg p\\)\u200b 3. \u4ece\u771f\u503c\u8868\u53ef\u4ee5\u770b\u51fa\uff0c\u524d\u63d0\u548c\u7ed3\u8bba\u4e4b\u95f4\u4e0d\u5fc5\u6709\u4efb\u4f55\u5173\u8054\uff0c\\(p \\rightarrow q\\)\u53ea\u53d6\u51b3\u4e8e\\(p\\)\u548c\\(q\\)\u200b\u7684\u771f\u503c 4. *Implication Law: \\(p \\rightarrow q \\equiv \\neg p \\lor q\\)  (1.3\u8282\u4f1a\u8bb2\u5230\u7684)</p> <p>\u547d\u9898\u7684\u8f6c\u5316\uff1a + \u9006\u547d\u9898(Converse)\uff1a\\(q \\rightarrow p\\) + \u9006\u5426\u547d\u9898(Contrapositive)\uff1a\\(\\neg q \\rightarrow \\neg p\\)\u200b + \u5426\u547d\u9898(Inverse)\uff1a\\(\\neg p \\rightarrow \\neg q\\)</p> <p>\u6ce8\uff1a\u9006\u5426\u547d\u9898\u4e0e\u539f\u547d\u9898\u7b49\u4ef7(Equivalent) (\u89c11.3\u8282)</p> <ul> <li>\u53cc\u6761\u4ef6\u53e5(Bioconditional, or Bi-implication)\uff1a\\(p \\leftrightarrow q\\)\u200b (\u8bfb\u4f5c p if and only if q)     </li> </ul> <p>\u6ce8\uff1a 1. \u53cc\u6761\u4ef6\u53e5\u7684\u591a\u79cd\u8868\u8fbe\uff1a   + \\(p\\) is necessary and sufficient for \\(q\\)   + if \\(p\\) then \\(q\\), and conversely   + \\(p\\) iff \\(q\\) (iff = if and only if)   + \\(p\\) exactly when \\(q\\) 2. \\(p \\leftrightarrow q \\equiv (p \\rightarrow q) \\land  (q \\rightarrow p)\\)\u200b 3. \u53cc\u6761\u4ef6\u53e5\u7684\u542b\u84c4\u8868\u8ff0\uff1a\u53ef\u80fd\u4f7f\u7528if, then \u6216 only if \u6765\u8868\u793a if and only if 4. \u5728[[Chap 2 Combinational Logic Circuit#^a7ec1f|dld]]\u4e2d\uff0c\u8fd9\u79cd\u5f62\u5f0f\u4e5f\u88ab\u79f0\u4e3a\u540c\u6216(XNOR)</p>"},{"location":"notebooks/dm/1/#precedence","title":"Precedence","text":""},{"location":"notebooks/dm/1/#logic-and-bit-operations","title":"Logic and Bit Operations","text":"<p>\u4f4d(Bit)\uff1a\u4e00\u79cd\u8868\u793a\u4e24\u79cd\u53ef\u80fd\u503c\u7684\u8bb0\u53f7\uff0c\u53730\u548c1\u3002\u8ba1\u7b97\u673a\u7528\u4f4d\u8868\u793a\u4fe1\u606f\uff0c\u4f4d\u4e5f\u80fd\u7528\u6765\u8868\u793a\u771f\u503c</p> <p>\u5e03\u5c14\u53d8\u91cf(Boolean variable)\uff1a\u503c\u4e3atrue\u6216false\u7684\u53d8\u91cf</p> <p>\u4e0a\u9762\u6240\u6709\u8868\u683c\u4e2d\u7684\u201cT\u201d\u53ef\u7528\u201c1\u201d\u4ee3\u66ff\uff0c\u201cF\u201d\u53ef\u7528\u201c0\u201d\u4ee3\u66ff</p> <p>\u4f4d\u4e32(Bit strings)\uff1a\u75310\u4e2a\u6216\u591a\u4e2a\u4f4d\u6784\u6210\u7684\u5e8f\u5217\uff0c\u5b83\u7684\u957f\u5ea6\u5373\u4f4d\u7684\u4e2a\u6570 ^755cc0</p> <p>\u6309\u4f4d\u8fd0\u7b97(Bitwise operations) + \u6309\u4f4d\u6216(bitwise OR) + \u6309\u4f4d\u4e0e(bitwise AND) + \u6309\u4f4d\u5f02\u6216(bitwise XOR) </p>"},{"location":"notebooks/dm/1/#supplementsfrom-exercises","title":"Supplements(from Exercises)","text":"<p>\u6a21\u7cca\u903b\u8f91(Fuzzy Logic)\uff1a\u4e00\u4e2a\u547d\u9898\u7684\u771f\u503c\u662f\\([0,1]\\)\u95f4\u7684\u6570\u3002\u771f\u503c\u4e3a0\u7684\u547d\u9898\u88ab\u8ba4\u4e3a\u662ffalse\uff0c\u771f\u503c\u4e3a1\u5219\u88ab\u8ba4\u4e3a\u4e3atrue\uff0c0-1\u4e4b\u95f4\u7684\u6570\u8868\u660e\u4e0d\u540c\u7684\u771f\u5b9e\u7a0b\u5ea6\u3002\u5e38\u7528\u4e8e\u4eba\u5de5\u667a\u80fd\u4e2d\u3002</p>"},{"location":"notebooks/dm/1/#12-application-of-propositional-logic","title":"1.2 Application of Propositional Logic","text":""},{"location":"notebooks/dm/1/#translating-english-sentences","title":"Translating English Sentences","text":"<p>\u65b9\u6cd5: \u627e\u539f\u5b50\u547d\u9898\uff0c\u627e\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u7136\u540e\u7ec4\u5408\u8d77\u6765</p>"},{"location":"notebooks/dm/1/#system-specifications","title":"System Specifications","text":"<p>\u4e0a\u4e00\u90e8\u5206 + \u4e00\u81f4(consistent) \u7684\u6982\u5ff5\uff1a\u5b58\u5728\u4e00\u7ec4\u547d\u9898\u53d8\u91cf\u7684\u53ef\u80fd\u8d4b\u503c(\u771f\u503c)\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u547d\u9898\u4e2d\u7684\u6bcf\u4e00\u6761\u547d\u9898\u5747\u6210\u7acb\u3002 ^3acd57</p>"},{"location":"notebooks/dm/1/#boolean-search","title":"Boolean Search","text":"<p>\u4e00\u4e9b\u641c\u7d22\u5f15\u64ce\u7684\u9ad8\u7ea7\u641c\u7d22\u4f1a\u7528\u5230\u8fd9\u79cd\u65b9\u5f0f\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4f5c\u53d9\u8ff0</p>"},{"location":"notebooks/dm/1/#logic-puzzles","title":"Logic Puzzles","text":"<p>\u770b\u770b\u8bfe\u672c\u4f8b\u9898</p>"},{"location":"notebooks/dm/1/#logic-circuits","title":"Logic Circuits","text":"<p>\u89c1[[Chap 2 Combinational Logic Circuit|dld\u7b2c2\u7ae0]]</p>"},{"location":"notebooks/dm/1/#13-propositional-equivalences","title":"1.3 Propositional Equivalences","text":""},{"location":"notebooks/dm/1/#logical-equivalence","title":"Logical Equivalence","text":"<ul> <li>\u6c38\u771f(Tautology)\uff1a\u771f\u503c\u603b\u662f\u4e3a\u771f\u7684\u547d\u9898</li> <li>\u6c38\u5047(Contradiction)\uff1a\u771f\u503c\u603b\u662f\u4e3a\u5047\u7684\u547d\u9898</li> <li>Contingency\uff1a\u65e2\u975e\u6c38\u771f\u4ea6\u975e\u6c38\u5047\u7684\u547d\u9898</li> </ul> <p>\u903b\u8f91\u7b49\u503c(Logically equivalent)\uff1a\u4e24\u4e2a\u590d\u5408\u547d\u9898\u5728\u4e0d\u540c\u7684\u8d4b\u503c\u60c5\u51b5\u4e0b\u7684\u771f\u503c\u65f6\u949f\u76f8\u7b49\uff0c\u5373\\(p \\leftrightarrow q\\)\u200b\u4e3a\u6c38\u771f\uff0c\u8bb0\u4f5c\\(p \\equiv q\\)</p> <p>\ud83c\udf1f\u91cd\u8981\u903b\u8f91\u7b49\u503c\u8868  ^cacfc2 </p> <p>\u4e00\u4e9b\u8865\u5145\uff1a + conditional-disjunction equivalence\uff1a\\(p \\rightarrow q \\equiv \\neg p \\lor q\\) + Exportation law\uff1a\\((p \\land q) \\rightarrow r \\equiv p \\rightarrow (q \\rightarrow r)\\) + Absurdity law\uff1a\\((p \\rightarrow q) \\land (p \\rightarrow \\neg q) \\equiv \\neg p\\)</p>"},{"location":"notebooks/dm/1/#using-de-morgans-laws","title":"Using De Morgan's Laws","text":"<p>\ud83c\udf1f\u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b(De Morgan's Laws) + \\(\\neg (p \\land q) \\equiv \\neg p \\lor \\neg q\\) + \\(\\neg(p \\lor q) \\equiv \\neg p \\land \\neg q\\)</p> <p>\u62d3\u5c55\u7248\uff1a + \\(\\neg(\\bigvee ^ n _{j = 1}p_j) \\equiv \\bigwedge ^ n _{j = 1} \\neg p_j\\)\u200b</p> <p>\u5373\\(\\neg(p_1 \\lor p_2 \\lor \\dots \\lor p_n) \\equiv (\\neg p_1 \\land \\neg p_2 \\land \\dots \\land \\neg p_n)\\)</p> <ul> <li>\\(\\neg (\\bigwedge ^ n _{j = 1}p_j) \\equiv \\bigvee ^ n _{j = 1} \\neg p_j\\) <p>\u5373\\(\\neg (p_1 \\land p_2 \\land \\dots \\land p_n) \\equiv (\\neg p_1 \\lor \\neg p_2 \\lor \\dots \\lor \\neg p_n)\\)</p> </li> </ul> <p>\u6ce8\uff1a\u4f7f\u7528\u65f6\u6ce8\u610f\u6539\u53d8\u8fde\u63a5\u7b26\u200b</p>"},{"location":"notebooks/dm/1/#constructing-new-logical-equivalence","title":"Constructing New Logical Equivalence","text":"<p>\u8fd9\u662f\u4e00\u7c7b\u9898\u578b\uff1a + \u8bc1\u660e\u4e24\u4e2a\u903b\u8f91\u547d\u9898\u7b49\u4ef7 + \u8bc1\u660e\u67d0\u4e2a\u903b\u8f91\u547d\u9898\u6c38\u771f + \u2026\u2026 \u8fd9\u9700\u8981\u6211\u4eec\u7075\u6d3b\u4f7f\u7528\u4e0a\u8868\u7684\u89c4\u5f8b</p>"},{"location":"notebooks/dm/1/#propositional-satisfiablilty","title":"Propositional Satisfiablilty","text":"<p>^4ee3b6</p> <p>\u5f53\u5b58\u5728\u67d0\u4e2a\u5bf9\u4e8e\u547d\u9898\u53d8\u91cf\u7684\u771f\u503c\u80fd\u4f7f\u547d\u9898\u4e3a\u771f\uff0c\u79f0\u8fd9\u79cd\u547d\u9898\u662fsatisfiable(\u53ef\u6ee1\u8db3\u7684)\uff08\u7c7b\u4f3c\u4e0a\u9762\u7684[[Chap 1 The Foundations--Logic and Proofs#^3acd57|\u4e00\u81f4]]\u7684\u6982\u5ff5\uff09\uff0c\u8fd9\u6837\u7684\u4e00\u7ec4\u8d4b\u503c\u79f0\u4e3a\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\u7684\u4e00\u4e2a\u89e3\uff0c\u5426\u5219\uff08\u5373\u6240\u6709\u53ef\u80fd\u5f97\u5bf9\u4e8e\u547d\u9898\u53d8\u91cf\u7684\u771f\u503c\u90fd\u65e0\u6cd5\u4f7f\u547d\u9898\u4e3a\u771f\uff09\u79f0\u4e3aunsatisfiable(\u4e0d\u53ef\u6ee1\u8db3\u7684)</p>"},{"location":"notebooks/dm/1/#applications","title":"Applications","text":"<p>The n-Queens Problem</p> <p></p> <p>\u9898\u76ee\u63cf\u8ff0\uff1a\u5728\\(n \\times n\\)\u7684\u68cb\u76d8\u4e0a\u653e\u7f6e\\(n\\)\u4e2a\u7687\u540e\u3002\u7687\u540e\u53ef\u4ee5\u653b\u51fb\u540c\u884c\u3001\u540c\u5217\u3001\u540c\u4e00\u5bf9\u89d2\u7ebf\uff08\u4e24\u6761\uff09\u4e0a\u7684\u68cb\u5b50\u3002\u8bf7\u627e\u5230\u80fd\u4f7f\\(n\\)\u4e2a\u7687\u540e\u4e0d\u4f1a\u4e92\u76f8\u653b\u51fb\u7684\u6446\u6cd5\u3002</p> <p>\u5206\u6790\uff1a + \u5148\u4fdd\u8bc1\u6bcf\u884c \u81f3\u5c11 \u6709\u4e00\u4e2a\u7687\u540e\uff1a\\(Q_1 = \\bigwedge\\limits^n_{i = 1} \\bigvee\\limits^n_{j = 1}p(i, j)\\) + \u7136\u540e\u4fdd\u8bc1\u6bcf\u884c \u81f3\u591a \u6709\u4e00\u4e2a\u7687\u540e\uff1a\\(Q_2 = \\bigwedge\\limits^n_{i = 1} \\bigwedge\\limits^{n-1}_{j = 1} \\bigwedge\\limits^n_{k = j + 1}(\\neg p(i, j) \\vee \\neg p(i, k))\\) + \u518d\u786e\u4fdd\u6bcf\u5217 \u81f3\u591a \u6709\u4e00\u4e2a\u7687\u540e\uff1a\\(Q_3 = \\bigwedge\\limits^n_{j = 1} \\bigwedge\\limits^{n-1}_{i = 1} \\bigwedge\\limits^n_{k = i + 1}(\\neg p(i, j) \\vee \\neg p(k, j))\\)\u200b</p> <p>\u8fd9\u4e09\u4e2a\u6761\u4ef6\u7684\u6210\u7acb\u80fd\u4f7f\u201c\u6bcf\u5217\u81f3\u5c11\u6709\u4e00\u4e2a\u7687\u540e\u201d\u7684\u6761\u4ef6\u81ea\u52a8\u6210\u7acb</p> <ul> <li>\u63a5\u7740\u786e\u5b9a\u4e24\u6761\u5bf9\u89d2\u7ebf\uff1a<ul> <li>\\(Q_4 = \\bigwedge\\limits^n_{i = 2} \\bigwedge\\limits^{n - 1}_{j = 1} \\bigwedge\\limits^{min(i - 1, n - j)}_{k = 1}(\\neg p (i, j) \\vee \\neg p (i - k, k + j))\\)</li> <li>\\(Q_5 = \\bigwedge\\limits^n_{i = 1} \\bigwedge\\limits^{n - 1}_{j = 1} \\bigwedge\\limits^{min(n - i, n - j)}_{k = 1}(\\neg p (i, j) \\vee \\neg p (i + k, j + k))\\)</li> </ul> </li> </ul> <p>\u8fd9\u91cc\u5176\u5b9e\u8fd8\u6709\u70b9\u95ee\u9898\uff0c\u76ee\u524d\u6211\u8fd8\u6ca1\u4ed4\u7ec6\u7814\u7a76\ud83d\ude1d</p> <ul> <li>\u6700\u540e\u5e76\u5728\u4e00\u8d77\u4fbf\u5f97\u5230\u6700\u7ec8\u7684\u89e3\uff08\u547d\u9898\uff09 $$ Q = Q_1 \\wedge Q_2 \\wedge Q_3 \\wedge Q_4 \\wedge Q_5 $$</li> </ul> <p>Sudoku Puzzle</p> <p>\u770b\u4e66\uff0c\u8fd9\u91cc\u7565\u8fc7\ud83d\udc36</p>"},{"location":"notebooks/dm/1/#supplementsfrom-exercises-but-important","title":"Supplements(from Exercises, but important\u2757)","text":"<p>\u6ce8\uff1a\u8fd9\u91cc\u7684\u8865\u5145\u90e8\u5206\u4e0edld\u9ad8\u5ea6\u91cd\u5408\uff0c\u53ef\u4ee5\u53c2\u8003[[Chap 2 Combinational Logic Circuit|dld]]\u7684\u90e8\u5206\uff0c\u90a3\u91cc\u66f4\u52a0\u8be6\u7ec6</p>"},{"location":"notebooks/dm/1/#other-logical-operators","title":"Other Logical Operators","text":"<p>Sheffer stroke\uff1a\u4e0e\u975e(NAND)\uff0c\u7b26\u53f7\u201c\\(|\\)\u201d\uff0c\\(p | q \\equiv \\neg (p \\wedge q)\\) Peirce arrow\uff1a\u6216\u975e(NOR)\uff0c\u7b26\u53f7\u201c\\(\\downarrow\\)\u201d\uff0c\\(p \\downarrow q \\equiv \\neg(p \\vee q)\\)</p>"},{"location":"notebooks/dm/1/#the-dual-of-a-compound-proposition","title":"The Dual of a Compound Proposition","text":"<p>^0e4527 \u590d\u5408\u547d\u9898\\(S\\)\u7684\u5bf9\u5076(\u547d\u9898)\\(S^*\\)   \u4ec5\u5305\u542b\u903b\u8f91\u8fd0\u7b97\u7b26\\(\\vee\\)\uff0c\\(\\wedge\\)\u548c\\(\\neg\\)\uff0c\u4e14\u4fdd\u6301\\(\\neg\\)\u4e0d\u53d8\uff0c\u5c06\\(\\vee\\)\u66ff\u6362\u4e3a\\(\\wedge\\)\uff0c\\(\\wedge\\)\u66ff\u6362\u4e3a\\(\\vee\\)\uff0c T \u66ff\u6362\u4e3a F\uff0cF \u66ff\u6362\u4e3a T\u3002 ^5f87be</p>"},{"location":"notebooks/dm/1/#functionally-complete-collection-of-logical-operators","title":"Functionally Complete Collection of Logical Operators","text":"<p>\u5f53\u6bcf\u4e2a\u590d\u5408\u547d\u9898\u903b\u8f91\u7b49\u503c\u4e8e\u4e00\u4e2a\u4e0e\u5b83\u4f7f\u7528\u76f8\u540c\u903b\u8f91\u8fd0\u7b97\u7b26\u96c6\u7684\u590d\u5408\u547d\u9898\uff0c\u5219\u79f0\u8fd9\u4e2a\u903b\u8f91\u8fd0\u7b97\u7b26\u96c6\u662f\u529f\u80fd\u5b8c\u5907\u7684(functionally complete)</p> <p>e.g. \\(\\{ \\neg, \\wedge, \\vee, \\rightarrow, \\leftrightarrow\\}, \\{ \\neg, \\wedge, \\vee\\}, \\{ \\neg, \\wedge\\}, \\{ \\neg, \\vee\\}, \\{ | \\}, \\{ \\downarrow\\}\\)\u5747\u53ef\u4e3a\u5168\u529f\u80fd\u96c6</p> <p>\u62d3\u5c55\u2014\u2014\u6781\u5c0f\u5168\u529f\u80fd\u96c6\uff1a\u6ca1\u6709\u5197\u4f59\uff08\u6307\u4ece\u6765\u6ca1\u7528\u8fc7\u7684\uff09\u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u5168\u529f\u80fd\u96c6</p>"},{"location":"notebooks/dm/1/#normal-forms","title":"\ud83c\udf1f Normal Forms","text":"<p>\u6ce8\uff1a\u53ef\u4ee5\u628a\u8fd9\u91cc\u7684\u6982\u5ff5\u770b\u4f5c\u6362\u76ae\u7684dld\u7684[[Chap 2 Combinational Logic Circuit#^214fa6|\u6807\u51c6\u5f62\u5f0f]]</p> <ul> <li> <p>\u6790\u53d6\u8303\u5f0f(disjunctive normal form, DNF) = \u5b57\u9762\u91cf\u548c==\u5408\u53d6==\u4ece\u53e5\u7684\u6790\u53d6</p> <ul> <li>literal(\u5b57\u9762\u91cf)\uff1a\u547d\u9898\u53d8\u91cf\u53ca\u5176\u5426\u5b9a</li> <li>conjunctive clauses(\u5408\u53d6\u4ece\u53e5)\uff1ae.g. \\(p \\wedge q, p \\wedge \\neg q, \\neg p \\wedge q, \\neg p \\wedge \\neg q\\) ^d7f017 <p>\u7c7b\u6bd4dld\u7684[[Chap 2 Combinational Logic Circuit#^2bdc1c|SOP]]</p> </li> </ul> </li> <li> <p>\u5408\u53d6\u8303\u5f0f(conjunctive normal form, CNF) = \u5b57\u9762\u91cf\u548c==\u6790\u53d6==\u4ece\u53e5\u7684\u5408\u53d6</p> </li> </ul> <p>\ud83c\udf30 </p> <p>\u5b9a\u7406\uff1a\u6240\u6709\u7684\u903b\u8f91\u547d\u9898\u90fd\u6709\u4e0e\u4e4b\u5bf9\u5e94\u7684\u7b49\u4ef7\u7684DNF\u6216CNF</p> <p>\u5982\u4f55\u5f97\u5230\u8303\u5f0f\uff1f 1. \u5148\u6d88\u53bb\\(\\rightarrow , \\leftrightarrow\\)(\u516c\u5f0f\u89c1\u4e0a\u56fe) 2. \u4f7f\\(\\neg\\)\u7684\u4f7f\u7528\u8303\u56f4\u7f29\u5c0f\u81f3\u5355\u4e2a\u539f\u5b50\u547d\u9898\uff08\u547d\u9898\u53d8\u91cf\uff09\uff0c\u8fd9\u91cc\u5e38\u7528\u5230\u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b\u548c\u53cc\u91cd\u5426\u5b9a\u5f8b 3. \u518d\u4f7f\u7528\u4ea4\u6362\u5f8b\u3001\u5206\u914d\u5f8b\u548c\u7ed3\u5408\u5f8b\u5f97\u5230\u8303\u5f0f</p> <p>\ud83c\udf30\uff08\u8ba1\u7b97\u91cf\u6709\u70b9\u5927\u2026\uff09 </p> <p>\u4e3b\u6790\u53d6\u8303\u5f0f(Full Disjunctive Normal Form) = \u6781\u5c0f\u9879\u7684\u6790\u53d6 + Minterm(\u6700\u5c0f\u9879)\uff1a\u6240\u6709\u53d8\u91cf\u7684\u5408\u53d6\uff0c\u4e14\u6bcf\u4e2a\u53d8\u91cf\u90fd\u4ec5\u51fa\u73b0\u4e00\u6b21</p> <p>\u6ce8\uff1a 1. \\(n\\)\u4e2a\u547d\u9898\u53d8\u91cf\u5c31\u4f1a\u4ea7\u751f\\(2^n\\)\u200b\u4e2a\u6781\u5c0f\u9879 2. \u5047\u8bbe\u6709\u4e09\u4e2a\u53d8\u91cf\\(p, q, r\\)\uff0c\u5219\\(p \\wedge \\neg q \\wedge r\\)\u662f\u6781\u5c0f\u9879\uff0c\u4f46\\(p \\wedge \\neg q\\)\u5c31\u4e0d\u662f\u4e86 ^e1accd 3. \u5177\u4f53\u53ef\u89c1dld\u7684[[Chap 2 Combinational Logic Circuit#^3f6dc3|SOM]]</p> <ul> <li>Maxterm(\u6700\u5927\u9879)</li> </ul> <p>\u5982\u4f55\u83b7\u5f97\uff1f 1.  \u8ba1\u7b97\u6cd5     + \u5148\u5c06\u547d\u9898\u8f6c\u5316\u81f3DNF\u7684\u5f62\u5f0f     + \u5982\u679c\u67d0\u4e2a\u6790\u53d6\u4ece\u53e5\u7684\u53d8\u91cf\u5c0f\u4e8e\\(n\\)\u4e2a\uff0c\u5219\u5229\u7528\u5426\u5b9a\u5f8b\u548c\u5206\u914d\u5f8b\u8865\u4e0a\u7f3a\u5c11\u7684\u53d8\u91cf\uff0c\u518d\u8ba1\u7b97\u6574\u7406     \ud83c\udf30     </p> <ol> <li>\u771f\u503c\u8868\u6cd5<ul> <li>\u5217\u771f\u503c\u8868</li> <li>\u627e\u5230\u6240\u6709\u590d\u5408\u547d\u9898\u4e3aT\u7684\u8d4b\u503c\u60c5\u51b5</li> <li>\u5bf9\u4e8e\u6bcf\u79cd\u8d4b\u503c\u60c5\u51b5\uff0c\u5982\u679c\u53d8\u91cf\u4e3aT\u4fdd\u6301\u4e0d\u53d8\uff0cF\u5219\u53d6\\(\\neg\\)\uff0c\u7136\u540e\u8fdb\u884c\u5408\u53d6</li> <li>\u5bf9\u6240\u6709\u5f97\u5230\u7684\u5408\u53d6\u518d\u6790\u53d6\uff0c\u4fbf\u5f97\u5230\u4e86Full DNF</li> </ul> </li> </ol> <p>\u6ce8\uff1a\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u6c42Full CNF\u2014\u2014\u53ea\u4e0d\u8fc7\u8981\u98a0\u5012\u4e00\u4e0b\u3002\u8fd9\u6837\u8bf4\u4e0d\u597d\u7406\u89e3\uff0c\u90a3\u5c31\u9644\u4e0a\u56fe\u7247\u5427</p> <p></p>"},{"location":"notebooks/dm/1/#14-predicates-and-quantifiers","title":"1.4 Predicates and Quantifiers","text":""},{"location":"notebooks/dm/1/#predicates","title":"Predicates","text":"<p>\u547d\u9898\u51fd\u6570(Propositional Function)\uff1a\\(P(x_1, x_2, \\dots , x_n)\\)\uff0c\u662f\u4e00\u79cd\u5bf9\u547d\u9898\u7684\u6cdb\u5316(generalization)\u3002\u5f53\u5b83\u7684==\u6240\u6709==\u53d8\u91cf\u88ab\u66ff\u6362\u4e3a\u57df(domain)\u91cc\u7684\u5177\u4f53\u503c\uff0c\u6216\u53d7\u91cf\u8bcd(quantifier) \u7ea6\u675f\u65f6\uff0c\u547d\u9898\u51fd\u6570\u5c31\u6210\u4e3a\u4e00\u4e2a\u547d\u9898\uff08\u6709\u771f\u503c\uff09</p> <p>\u5f53\u547d\u9898\u51fd\u6570\u6709\\(n\\)\u4e2a\u53d8\u91cf\u65f6\uff0c\\(P\\)\u88ab\u79f0\u4e3a \\(n\\)\u4f4d\u8c13\u8bcd(\\(n\\)\u200b-ary predicate)</p> <p>\u8fde\u63a5\u7b26(Connective) \u4e5f\u53ef\u4ee5\u7528\u4e8e\u8c13\u8bcd\u903b\u8f91\u4e2d\u3002\u5982\u679c\u6574\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u7684\u53d8\u91cf\u90fd\u662f\u547d\u9898\uff08\u8fd9\u91cc\u7279\u6307\u8d4b\u6709\u5177\u4f53\u503c\u7684\u547d\u9898\u51fd\u6570\uff09\uff0c\u90a3\u4e48\u8be5\u8868\u8fbe\u5f0f\u5c31\u662f\u4e00\u4e2a\u547d\u9898\uff0c\u5426\u5219\u5c31\u4e0d\u662f\u547d\u9898\u3002</p> <ul> <li>\u524d\u7f6e\u6761\u4ef6(Preconditions)\uff1a\u63cf\u8ff0\u5408\u6cd5\u8f93\u5165\u7684\u8bed\u53e5</li> <li>\u540e\u7f6e\u6761\u4ef6(Postconditions)\uff1a\u5f53\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8f93\u51fa\u5f97\u5230\u6ee1\u8db3\u7684\u6761\u4ef6 <p>\u6ce8\uff1a\u53ef\u7528\u4e8e\u68c0\u6d4b\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u6b63\u786e\u6027</p> </li> </ul> <p>\ud83c\udf30\u5bf9\u4e8e\u4ee5\u4e0b\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u503c\u7684\u7a0b\u5e8f\uff1a <pre><code>temp := c\nx := y\ny := temp\n</code></pre> \u524d\u7f6e\u6761\u4ef6\\(P(x) \\equiv (x = a, y = b)\\)\uff08\u5373\u8f93\u5165\uff09\uff0c\u540e\u7f6e\u6761\u4ef6\\(Q(x) \\equiv (x = b, y = a)\\)\uff08\u5373\u8f93\u51fa\uff09\u3002</p>"},{"location":"notebooks/dm/1/#quantifiers","title":"Quantifiers","text":"<ul> <li> <p>\u5168\u79f0\u91cf\u8bcd(Universal quantifiers)\uff1a\u7b26\u53f7\\(\\forall\\) \\(\\forall xP(x)\\)\u610f\u601d\u662f\u201cfor all/ every/ arbitrary /\u2026 \\(x\\), \\(P(x)\\)\u201d     \\(\\forall xP(x) \\equiv P(x_1) \\wedge P(x_2) \\wedge \\dots \\wedge P(x_n)\\)     &gt; \u8fd9\u91cc\u5047\u5b9a\\(x\\)\u5b9a\u4e49\u57df\u975e\u7a7a\uff0c\u5426\u5219\\(\\forall x P(x) \\equiv T\\)\u200b</p> </li> <li> <p>\u5b58\u5728\u91cf\u8bcd(Existential quantifiers)\uff1a\u7b26\u53f7\\(\\exists\\) \\(\\exists x P(x)\\)\u610f\u601d\u662f\u201cthere exists / for some / for at least one / there is /\u2026 an \\(x\\), \\(P(x)\\)\u200b\u201d     \\(\\exists xP(x) \\equiv P(x_1) \\vee P(x_2) \\vee \\dots \\vee P(x_n)\\)     &gt; \u8fd9\u91cc\u5047\u5b9a\\(x\\)\u5b9a\u4e49\u57df\u975e\u7a7a\uff0c\u5426\u5219\\(\\exists x P(x) \\equiv F\\)\u200b</p> </li> <li> <p>\u552f\u4e00\u91cf\u8bcd(Uniqueness quantifiers)\uff1a\u7b26\u53f7\\(\\exists !\\) \\(\\exists !xP(x)\\)\u610f\u601d\u662f\u201c\\(P(x) \\text{ is true for one and only one }x \\text{ in the universe of discourse}\\)\u200b\u201d     \\(\\exists !P(x) \\equiv \\exists x (P(x) \\wedge \\forall y (P(y) \\rightarrow y = x))\\)\u200b     &gt;\u8fd9\u4e2a\u91cf\u8bcd\u53ef\u7531\u524d\u4e24\u79cd\u91cf\u8bcd\u8868\u793a\u51fa\u6765\uff0c\u56e0\u6b64==\u4e0d\u5e38\u7528==</p> </li> </ul> <p>^3d1155</p> <p>\u6ce8\uff1a\u91cf\u8bcd\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6240\u6709\u903b\u8f91\u8fd0\u7b97\u7b26</p>"},{"location":"notebooks/dm/1/#quantifiers-over-finite-domains","title":"Quantifiers over Finite Domains","text":"<p>\u8003\u8651\u5728\u6709\u9650\u57df(finite domain)\u7684\u60c5\u51b5\u2014\u2014\u53ef\u4ee5\u901a\u8fc7\u5faa\u73af(loop)\u9010\u4e00\u5224\u65ad\u5b9a\u4e49\u57df\u5185\u6bcf\u4e2a\u53d8\u91cf</p> <ul> <li>\u5bf9\u4e8e\\(\\forall x P(x)\\)\uff0c\u5982\u679c\u6bcf\u4e2a\\(P(x)\\)\u5747\u4e3a\u771f\uff0c\u5219\u4e3a\u771f\uff1b\u53ea\u8981\u6709\u4e00\u4e2a\u662f\u9519\u7684\u5219\u4e3a\u5047\uff0c\u5faa\u73af\u7ed3\u675f</li> <li>\u5bf9\u4e8e\\(\\exists xP(x)\\)\uff0c\u5982\u679c\u6709\u4e00\u4e2a\\(P(x)\\)\u4e3a\u771f\uff0c\u5219\u4e3a\u771f\uff0c\u5faa\u73af\u7ed3\u675f\uff1b\u5f53\u5faa\u73af\u7ed3\u675f\u540e\u4ecd\u627e\u4e0d\u5230\u503c\u4e3a\u771f\u7684\\(P(x)\\)\uff0c\u5219\u4e3a\u5047</li> </ul> <p>\u5728\u6709\u9650\u57df\u5185\uff0c\u8fd8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5408\u53d6\u548c\u6790\u53d6\u5c55\u5f00\u88ab\u91cf\u8bcd\u4fee\u9970\u7684\u547d\u9898\u3002\u5047\u8bbe\u6709\u9650\u57df\u5185\u6709\\(1, 2, \\dots, n\\)\u5171\\(n\\)\u4e2a\u53d8\u91cf</p> <ul> <li>\\(\\forall xP(x) \\equiv P(1) \\wedge P(2) \\wedge \\dots \\wedge P(n)\\)</li> <li>\\(\\exists xP(x) \\equiv P(1) \\vee P(2) \\vee \\dots \\vee P(n)\\)\u200b</li> </ul>"},{"location":"notebooks/dm/1/#binding-variables","title":"Binding Variables","text":"<p>\u5982\u679c\u4e00\u4e2a\u91cf\u8bcd\u7528\u4e8e\u53d8\u91cf\\(x\\)\uff0c\u6211\u4eec\u8bf4\u8fd9\u4e2a\u53d8\u91cf\u662f\u88ab\u7ed1\u5b9a(bound) \u7684\uff1b\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u6ca1\u6709\u88ab\u7ed1\u5b9a\u6216\u8005\u88ab\u8d4b\u4e88\u5177\u4f53\u503c\uff0c\u6211\u4eec\u8bf4\u8fd9\u4e2a\u53d8\u91cf\u65f6\u81ea\u7531(free) \u7684</p>"},{"location":"notebooks/dm/1/#logical-equivalence-involving-quantifiers","title":"Logical Equivalence Involving Quantifiers","text":"<p>\u8c13\u8bcd\u547d\u9898\u4e2d\u7684\u903b\u8f91\u7b49\u503c(Logical equivalence)\uff1a\u5145\u8981\u6761\u4ef6\u4e3a\u4e24\u4e2a\u547d\u9898\u6709\u76f8\u540c\u7684\u771f\u503c\uff0c\u4e0d\u8bba\u5b83\u4eec\u8c13\u8bcd\u548c\u53d8\u91cf\u57df\u662f\u4ec0\u4e48\u3002</p>"},{"location":"notebooks/dm/1/#negating-quantified-expressions","title":"Negating Quantified Expressions","text":"<p>\ud83c\udf1f\u91cf\u8bcd\u7684\u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b </p> <p>\u8865\u5145\uff1a 1. </p> \\[ \\forall x (A(x) \\wedge B(x)) \\equiv \\forall xA(x) \\wedge \\forall xB(x)  $$ $$ \\exists x (A(x) \\vee B(x)) \\equiv \\exists xA(x) \\vee \\exists xB(x) $$ \u200b   \u4f46\u662f $$ \\forall x (A(x) \\vee B(x)) \\nLeftrightarrow \\forall xA(x) \\vee \\forall xB(x)  \\\\ $$ $$ \\exists x (A(x) \\wedge B(x)) \\nLeftrightarrow \\exists xA(x) \\wedge \\exists xB(x) \\\\ $$ \u200b   \u7136\u800c $$ \\forall x (A(x) \\vee B(x)) \\Leftarrow \\forall xA(x) \\vee \\forall xB(x)  \\\\ $$ $$ \\exists x (A(x) \\wedge B(x)) \\Rightarrow \\exists xA(x) \\wedge \\exists xB(x) \\\\ \\] <ol> <li>\u6ce8\uff1a\u8fd9\u91cc\u7684\\(x\\)\u4e0e\\(P\\)\u65e0\u5173 $$   \\forall xA(x) \\vee P \\equiv \\forall x(A(x) \\vee P)   \\ $$ $$   \\forall xA(x) \\wedge P \\equiv \\forall x(A(x) \\wedge P)   \\ $$ $$   \\exists xA(x) \\vee P \\equiv \\exists x(A(x) \\vee P)   \\ $$ $$   \\exists xA(x) \\wedge P \\equiv \\exists x(A(x) \\wedge P)   \\ $$</li> </ol> <p>\u4e0b\u9762\u56db\u4e2a\u516c\u5f0f\u53ef\u7531\u4e0a\u9762\u56db\u4e2a\u516c\u5f0f\u63a8\u5bfc\u5f97\u6765 $$   \\forall x (B \\rightarrow A(x)) \\equiv B \\rightarrow \\forall xA(x)   \\ $$ $$   \\exists x (B \\rightarrow A(x)) \\equiv B \\rightarrow \\exists xA(x)   \\ $$ $$   \\forall x(A(x) \\rightarrow B) \\equiv \\exists xA(x) \\rightarrow B   \\ $$ $$ \\exists x(A(x) \\rightarrow B) \\equiv \\forall xA(x) \\rightarrow B   \\ $$</p>"},{"location":"notebooks/dm/1/#translating-from-english-into-logical-expressions","title":"Translating from English into Logical Expressions","text":"<p>\ud83c\udf1fTips: + \\(\\text{All } P(x) \\text{ are } Q(x) \\text{: } \\forall x(P(x) \\rightarrow Q(x))\\) + \\(\\text{No } P(x) \\text{ are } Q(x) \\text{: } \\forall x(P(x) \\rightarrow \\neg Q(x))\\) + \\(\\text{Some } P(x) \\text{'s are } Q(x) \\text{: } \\exists x(P(x) \\wedge Q(x))\\) + \\(\\text{Some } P(x) \\text{'s are not } Q(x) \\text{: } \\exists x(P(x) \\wedge \\neg Q(x))\\)</p> <p>\ud83c\udf30 \\(U = \\{\\text{lions}, \\text{mammals}, \\text{carnivorous animals}\\}\\) + L(x): x is a lion + M(x): x is a mammal + C(x): x is a carnivorous animal \u9898\u76ee + \u201cNo mammal is a carnivorous animal. \u201d $$  \\neg \\exists x(M(x) \\wedge C(x)) $$ + \u2757 \u201cIf any lion is a mammal then it is also a carnivorous animal. \u201d $$  \\forall x ((L(x) \\wedge M(x)) \\rightarrow C(x)) $$</p>"},{"location":"notebooks/dm/1/#logic-programming","title":"Logic Programming","text":"<p>\u89c1\u4e66\u672c\\(P_{55-56}\\)</p>"},{"location":"notebooks/dm/1/#15-nested-quantifiers","title":"1.5 Nested Quantifiers","text":"<p>\u5d4c\u5957\u91cf\u8bcd(Nested Quatifiers)\uff1a\u4e00\u4e2a\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u91cf\u8bcd\u7684\u91cf\u8bcd</p> <p>\u5faa\u73af(loop)\u601d\u60f3\uff1a\u5bf9\u4e8e\u547d\u9898\\(P(x, y)\\)\uff0c\u5c31\u6709\u4e24\u91cd\u5faa\u73af\uff0c\u904d\u5386\\(x\\)\u548c\\(y\\)\u3002\u4ee5\u4e0b\u4f8b\u5b50\u5747\u5916\u5c42\u5faa\u73af\\(x\\)\uff0c\u5185\u5c42\u5faa\u73af\\(y\\) + \u5bf9\u4e8e\\(\\forall x\\forall y P(x, y)\\)\uff0c\u5f53\u6240\u6709\u60c5\u51b5\u5747\u4e3a\u771f\u65f6\uff0c\u7ed3\u679c\u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047 + \u5bf9\u4e8e\\(\\forall x \\exists yP(x, y)\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u904d\u5916\u5c42\u5faa\u73af\uff0c\u53ea\u8981\u6709\u4e00\u79cd\u60c5\u51b5\u4e3a\u771f\uff0c\u7ed3\u679c\u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047 + \u5bf9\u4e8e\\(\\exists x \\forall y P(x, y)\\)\uff0c\u5982\u679c\u5b58\u5728\u4e00\u904d\u5916\u5c42\u5faa\u73af\uff0c\u5176\u6240\u6709\u60c5\u51b5\u5747\u4e3a\u771f\uff0c\u7ed3\u679c\u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047 + \u5bf9\u4e8e\\(\\exists x \\exists y P(x, y)\\)\uff0c\u53ea\u8981\u6709\u4e00\u79cd\u60c5\u51b5\u4e3a\u771f\uff0c\u7ed3\u679c\u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047</p>"},{"location":"notebooks/dm/1/#order-of-quantifiers","title":"Order of Quantifiers","text":"<p>\u91cf\u8bcd\u7684==\u987a\u5e8f\u4e0d\u5f97\u968f\u610f\u66f4\u6539==\uff0c\u9664\u975e\u6240\u6709\u91cf\u8bcd\u90fd\u662f\u540c\u4e00\u79cd\u91cf\u8bcd </p>"},{"location":"notebooks/dm/1/#translations","title":"Translations","text":""},{"location":"notebooks/dm/1/#the-conversion-between-nested-quantifiers-and-english","title":"The Conversion between Nested Quantifiers and English","text":"<p>Nested Quantifiers \\(\\rightarrow\\) English</p> <p></p> <p></p> <p>English \\(\\rightarrow\\) Nested quantified logical expressions</p> <p></p> <p></p>"},{"location":"notebooks/dm/1/#translating-mathematical-statements-into-statements-involving-nested-quantifiers","title":"Translating Mathematical Statements into Statements involving Nested Quantifiers","text":"<p> $$ \\text{solution1: }\\forall x \\forall y ((x &gt; 0) \\wedge (y &gt; 0) \\rightarrow (x + y &gt; 0)) $$ $$ \\text{solution2: }\\forall x &gt; 0 \\forall y &gt; 0 (x + y &gt;0) $$</p> <p></p>"},{"location":"notebooks/dm/1/#negating-nested-quantifiers","title":"Negating Nested Quantifiers","text":"<p>\u5305\u542b\u5d4c\u5957\u91cf\u8bcd\u7684\u8bed\u53e5\uff0c\u53ef\u4ee5\u901a\u8fc7==\u8fde\u7eed\u4f7f\u7528==\u5bf9\u4e8e\u5177\u6709\u5355\u4e2a\u91cf\u8bcd\u7684\u8bed\u53e5\u7684\u5426\u5b9a\u89c4\u5219\uff0c\u6765\u5b9e\u73b0\u5426\u5b9a\u3002</p> <p>\u8fd9\u4e48\u8bf4\u592a\u7ed5\u53e3\u4e86\uff0c\u770b\u4e00\u4e0b\u4f8b\u5b50\u4fbf\u9a6c\u4e0a\u7406\u89e3\u4e86</p> <p></p> <p></p>"},{"location":"notebooks/dm/1/#supplementsfrom-exercises_1","title":"Supplements(from Exercises)","text":""},{"location":"notebooks/dm/1/#prenex-normal-form","title":"Prenex Normal Form","text":"<p>\u524d\u675f\u8303\u5f0f(Prenex normal form, PNF)\uff1a\u5b83\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a $$ Q_1x_1Q_2x_2\\dots Q_kx_kP(x_1, x_2,\\dots, x_k) $$ \u5176\u4e2d\\(Q_i, i = 1, 2, \\dots, k\\)\u4ec5\u4ee3\u8868==\u5168\u79f0\u91cf\u8bcd\\(\\forall\\)\u6216==\u5b58\u5728\u91cf\u8bcd\\(\\exists\\)\uff0c\\(P(x_1, x_2, \\dots, x_n)\\)\u662f\u6ca1\u6709\u91cf\u8bcd\u4fee\u9970\u7684\u8c13\u8bcd\u3002</p> <p>\u6ce8\u610f\uff1a 1. PNF\u53ef\u4ee5\u6ca1\u6709\u91cf\u8bcd\u4fee\u9970 2. \u6240\u6709\u5426\u5b9a\u7b26\u53f7\\(\\neg\\)\u53ea\u80fd\u51fa\u73b0\u5728\\(P()\\)\u62ec\u53f7\u91cc\u9762</p> <p>\u600e\u4e48\u5f97\u5230PNF: 1. \u6d88\u9664\u6240\u6709\\(\\rightarrow\\)\u548c\\(\\leftrightarrow\\) 2. \u5c06\u6240\u6709\u5426\u5b9a\u53f7\\(\\neg\\)\u79fb\u5230\u6700\u5185\u5c42\uff0c\u5373\\(\\neg\\)\u76f4\u63a5\u4fee\u9970\u5355\u4e2a\u8c13\u8bcd\u6216\u547d\u9898 3. \u2b50\u5982\u679c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u53d8\u91cf\u6709\u4e0d\u540c\u7684\u91cf\u8bcd\u4fee\u9970\uff08\u89c1\u4e0b\u9762eg\u4e2d\u6253\u7ea2\u5708\u7684\u90e8\u5206\uff09\uff0c\u5219\u53ea\u4fdd\u7559\u5176\u4e2d\u4e00\u4e2a\uff0c\u5269\u4e0b\u7684\u66ff\u6362\u4e3a\u4e0d\u540c\u7684\u53d8\u91cf\uff0c\u8fd9\u6837\u65b9\u4fbf\u6700\u540e\u4e00\u6b65\u7684\u8fdb\u884c 4. \u5c06\u6240\u6709\u91cf\u8bcd\u63d0\u5230\u6700\u524d\u9762</p> <p></p>"},{"location":"notebooks/dm/1/#16-rules-of-inference","title":"1.6 Rules of Inference","text":""},{"location":"notebooks/dm/1/#valid-arguments-in-propositional-logic","title":"Valid Arguments in Propositional Logic","text":"<p>\u4e00\u4e9b\u5b9a\u4e49\uff1a + \u8bba\u8bc1(Argument)\uff1a\u5728\u547d\u9898\u903b\u8f91\u4e2d\uff0c\u6307\u4e00\u7cfb\u5217\u7684\u547d\u9898 + \u524d\u63d0(Premises)\uff1a\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u4ee5\u5916\u7684\u6240\u6709\u547d\u9898 + \u7ed3\u8bba(Conclusion)\uff1a\u6700\u540e\u7684\u547d\u9898 + \u8bba\u8bc1\u5f62\u5f0f(Argument form)\uff1a\u5728\u547d\u9898\u903b\u8f91\u4e2d\uff0c\u6307\u7684\u662f\u4e00\u7cfb\u5217\u5305\u542b\u547d\u9898\u53d8\u91cf\u7684\u590d\u5408\u547d\u9898</p> <p>\u4e24\u79cd\u5f62\u5f0f\uff1a + \\((p_1 \\wedge p_2 \\wedge \\dots \\wedge p_n) \\rightarrow q\\)\u200b +    \\(p_1\\) \\(p_2\\) \\(\\dots\\) \\(\\underline{p_n}\\) \\(q\\)</p> <p>\u5408\u6cd5(valid)\uff1a + \u5f53\u6240\u6709\u524d\u63d0\u4e3a\u771f\u65f6\u7ed3\u8bba\u4e3a\u771f\uff0c\u79f0\u4e00\u4e2a\u8bba\u8bc1\u662f\u5408\u6cd5\u7684 + \u5f53\u6240\u6709\u524d\u63d0\u5747\u4e3a\u771f\u65f6\u7ed3\u8bba\u4e3a\u771f\uff0c\u4e0d\u8bba\u524d\u63d0\u4e2d\u67d0\u4e9b\u7279\u5b9a\u547d\u9898\u662f\u5426\u88ab\u547d\u9898\u53d8\u91cf\u53d6\u4ee3\uff0c\u79f0\u4e00\u4e2a\u8bba\u8bc1\u5f62\u5f0f\u662f\u5408\u6cd5\u7684\uff0c\u5373\\((p_1 \\wedge p_2 \\wedge \\dots \\wedge p_n) \\rightarrow q\\)\u6c38\u771f</p>"},{"location":"notebooks/dm/1/#rules-of-inference-for-propositional-logic","title":"\ud83c\udf1fRules of Inference for Propositional Logic","text":"<p>\u6ce8\uff1a 1. \u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\u9664\u4e86\u4f7f\u7528\u63a8\u7406\u89c4\u5219\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u5b66\u8fc7\u7684==\u903b\u8f91\u7b49\u503c== 2. \u63a8\u7406\u7684\u6709\u6548\u6027 \\(\\ne\\)\u200b \u7ed3\u8bba\u7684\u771f\u5b9e\u6027\uff08\u53ef\u4ee5\u4ece\u540e\u9762\u7684\u4f8b\u5b50\u4e2d\u770b\u51fa\u6765\uff09\uff0c\u56e0\u4e3a\u5408\u6cd5\u7684\u8bba\u8bc1\u4e2d\u5982\u679c\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5047\u8bbe\u662f\u9519\u8bef\u7684\uff0c\u5c06\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7ed3\u8bba\uff0c\u4f46\u5b83\u4ecd\u662f\u5408\u6cd5\u7684\u8bba\u8bc1(valid arguments)</p>"},{"location":"notebooks/dm/1/#resolution","title":"Resolution","text":"<p>\u8003\u8651\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5 1. \u4ee4\\(r = q\\)\uff0c\u5219\\((p \\vee q) \\wedge (\\neg p \\vee q) \\rightarrow q\\) 2. \u4ee4\\(r = F\\)\uff0c\u5219\\((p \\vee q) \\wedge \\neg p \\rightarrow q\\)\uff08\u6790\u53d6\u4e09\u6bb5\u8bba\uff09</p> <p>\u7531\u4e8e\u4e0a\u8ff0\u7279\u6027\uff0c\u5f52\u7ed3(resolutions) \u5e38\u7528\u4e8e\u81ea\u52a8\u63a8\u7406\u6216\u6784\u5efa\u81ea\u52a8\u5b9a\u7406\u8bc1\u660e\u7cfb\u7edf</p> <p>\u4f7f\u7528\u5f52\u7ed3\u4f5c\u4e3a\u552f\u4e00\u7684\u63a8\u7406\u65b9\u6cd5\u6765\u6784\u5efa\u547d\u9898\u903b\u8f91\u4e2d\u7684\u8bc1\u660e\uff0c\u524d\u63d0\u548c\u5047\u8bbe\u5fc5\u987b\u88ab\u8868\u8fbe\u4e3a==\u6790\u53d6\u4ece\u53e5==(\u4ec5\u901a\u8fc7\u6790\u53d6\u5c06\u5355\u4e2a\u53d8\u91cf\u6216\u5176\u5426\u5b9a\u8fde\u63a5\u8d77\u6765\uff0c\u7c7b\u6bd4[[Chap 1 The Foundations--Logic and Proofs#^d7f017|\u5408\u53d6\u4ece\u53e5]]) ^2bd0c4</p>"},{"location":"notebooks/dm/1/#using-rules-of-inference-to-build-arguments","title":"Using Rules of Inference to Build Arguments","text":"<p>\u89e3\u9898\u65b9\u6cd5\uff1a 1. \u5047\u8bbe\u9898\u4e2d\u7ed9\u7684\u6240\u6709\u524d\u63d0\u5747\u4e3a\u771f 2. \u4f7f\u7528==\u63a8\u7406\u89c4\u5219==\u548c==\u903b\u8f91\u7b49\u503c==\u6c42\u89e3\u7ed3\u8bba\u7684\u503c\u4e3a\u771f</p> <p>\u6ce8\u610f\u683c\u5f0f\u89c4\u8303\uff01\uff08\u4e00\u5217Step\uff0c\u4e00\u5217Reason\uff09</p> <p>\ud83c\udf30 </p> <p></p> <p> \u4e0b\u9762\u8fd9\u4e2a\u65b9\u6cd5\u5728\u67d0\u4e9b\u60c5\u51b5(\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50)\u4e0b\u5f88\u6709\u7528\uff1a $$ (p_1 \\wedge p_2 \\wedge \\dots \\wedge p_n \\wedge p) \\rightarrow q \\equiv (p_1 \\wedge p_2 \\wedge \\dots \\wedge p_n) \\rightarrow (p \\rightarrow q) $$</p> <p></p>"},{"location":"notebooks/dm/1/#fallacies","title":"Fallacies","text":"<p>\u8c2c\u8bef(Fallacy)\u5206\u7c7b2\u7c7b + \u80af\u5b9a\u7ed3\u8bba(affirming the conclusion)\uff1a\\(((p \\rightarrow q) \\wedge q) \\rightarrow p\\) + \u5426\u5b9a\u5047\u8bbe(denying the hypothesis)\uff1a\\(((p \\rightarrow q) \\wedge \\neg p) \\rightarrow \\neg q\\)</p>"},{"location":"notebooks/dm/1/#rules-of-inference-for-quantified-statements","title":"Rules of Inference for Quantified Statements","text":"<p> Example  </p>"},{"location":"notebooks/dm/1/#combining-rules-of-inference-for-propostions-and-quantified-statements","title":"Combining Rules of Inference for Propostions and Quantified Statements","text":"<ul> <li> <p>\u5168\u79f0\u5047\u8a00\u63a8\u7406(universal modus ponens)</p> <p>\\(\\begin{align*}\\forall x (P(x) \\rightarrow Q(x)) \\end{align*}\\) \\(P(a) \\text{ , where a is a particular}\\) \\(\\underline{\\quad \\text{element in the domain} \\quad}\\) \\(\\therefore Q(a)\\)</p> </li> <li> <p>\u5168\u79f0\u62d2\u53d6\u5f0f(universal modus tollens) \\(\\forall x (P(x) \\rightarrow Q(x))\\) \\(\\neg Q(a) \\text{ , where a is a particular}\\) \\(\\underline{\\quad \\text{element in the domain} \\quad}\\) \\(\\therefore \\neg P(a)\\)</p> </li> </ul>"},{"location":"notebooks/dm/1/#17-introduction-to-proofs","title":"1.7 Introduction to Proofs","text":""},{"location":"notebooks/dm/1/#some-terminology","title":"Some Terminology","text":"<ul> <li>\u5b9a\u7406(theorem)\uff1a\uff08\u5df2\u77e5\uff09\u503c\u4e3a\u771f\u7684\u8bed\u53e5     &gt;\u5728\u6570\u5b66\u7684\u4f20\u7edf\u4e2d\uff0c\u5b9a\u7406\u4e2d\u7684\u5168\u79f0\u91cf\u8bcd\u5f80\u5f80\u4f1a\u7701\u7565</li> <li>\u547d\u9898(proposition)\uff1a\u4e0d\u90a3\u4e48\u91cd\u8981\u7684\u5b9a\u7406\uff0c\u6709\u65f6\u4e5f\u79f0\u4e3afacts\u6216result</li> <li>\u8bc1\u660e(proof)\uff1a\u901a\u8fc7\u5408\u6cd5\u7684\u8bba\u8bc1\u6765\u8bc1\u660e\u5b9a\u7406\u7684\u6b63\u786e\u6027</li> <li>\u516c\u7406(axiom)\uff1a\u5173\u4e8e\u6570\u5b66\u7684\u6f5c\u5728\u7684\u5047\u8bbe\uff08\u503c\u4e3a\u771f\uff09\uff0c\u6216\u5df2\u88ab\u8bc1\u660e\u7684\u5b9a\u7406\u7684\u5047\u8bbe\uff0c\u6216\u5148\u524d\u8bc1\u660e\u8fc7\u7684\u5b9a\u7406</li> <li>\u5f15\u7406(lemma)\uff1a\u6709\u52a9\u4e8e\u8bc1\u660e\u5176\u4ed6\u7ed3\u679c\u7684\u4e0d\u90a3\u4e48\u91cd\u8981\u7684\u5b9a\u7406</li> <li>\u63a8\u8bba(corollary)\uff1a\u53ef\u76f4\u63a5\u4ece\u5df2\u8bc1\u7684\u5b9a\u7406\u4e2d\u5f97\u5230\u7684\u7ed3\u679c</li> <li>\u731c\u60f3(conjecture)\uff1a\u4e0d\u6e05\u695a\u771f\u5047\u7684\u8bed\u53e5\uff0c\u901a\u5e38\u57fa\u4e8e\u90e8\u5206\u8bc1\u636e\u3001\u542f\u53d1\u5f0f\u7684\u8bba\u8bc1\u6216\u4e13\u5bb6\u7684\u76f4\u89c9\uff0c\u6709\u5f85\u8bc1\u660e</li> </ul>"},{"location":"notebooks/dm/1/#methods-of-proving-theorems","title":"Methods of Proving Theorems","text":""},{"location":"notebooks/dm/1/#direct-proofs","title":"Direct Proofs","text":"<p>\u4e3a\u4e86\u8bc1\u660e\\(p \\rightarrow q\\)\u662f\u6b63\u786e\u7684(\\(p\\)\u662f\u6307\u6240\u6709\u524d\u63d0\u7684\u5408\u53d6)\uff0c\u6211\u4eec\u9700\u8981 + \u5047\u8bbe\u6240\u6709\u524d\u63d0\u5747\u4e3a\u771f + \u4f7f\u7528==\u63a8\u7406\u89c4\u5219(rules of inference)\u3001==\u516c\u7406\u3001\u5b9a\u4e49\u3001==\u5148\u524d\u8bc1\u660e\u8fc7\u7684\u5b9a\u7406==\u548c==\u4efb\u4f55\u903b\u8f91\u7b49\u503c\u5173\u7cfb==\u6765\u8bc1\u660e\u7ed3\u8bba\u7684\u6b63\u786e\u6027</p> <p>\u6b63\u5f0f\u8bc1\u660e(Formal Proofs) vs. \u975e\u6b63\u5f0f\u8bc1\u660e(Informal Proofs) F\uff1a\u6bcf\u4e00\u6b65\u53ca\u5176\u91c7\u7528\u7684\u89c4\u5219\u90fd\u5199\u51fa\u6765 I\uff1a\u6bcf\u6b65\u53ef\u91c7\u7528\u4e0d\u6b62\u4e00\u6761\u63a8\u7406\u89c4\u5219\uff0c\u53ef\u4ee5\u8df3\u6b65\uff0c\u4e00\u4e9b\u516c\u7406\u548c\u8bba\u8bc1\u89c4\u5219\u53ef\u80fd\u6ca1\u6709\u660e\u786e\u8868\u793a\u51fa\u6765</p> <p>\u5f53\u6211\u4eec\u5229\u7528\u524d\u63d0\u6761\u4ef6\u4e00\u6b65\u6b65\u63a8\u4e0b\u53bb\u65f6\u53d1\u73b0\u8d70\u4e0d\u4e0b\u53bb\u4e86\uff0c\u8fd9\u65f6\u6211\u4eec\u8981\u91c7\u7528\u95f4\u63a5\u8bc1\u660e\u6cd5</p>"},{"location":"notebooks/dm/1/#indirect-proofs","title":"Indirect Proofs","text":"<p>\u53cd\u8bc1\u6cd5(Proofs by Contraposition) \u5229\u7528\\(p \\rightarrow q \\equiv \\neg q \\rightarrow \\neg p\\) + \u5047\u8bbe\u7ed3\u8bba\u9519\u8bef\uff08\u5373\\(\\neg q\\)\u4e3a\u771f\uff09 + \u4f7f\u7528==\u63a8\u7406\u89c4\u5219(rules of inference)\u3001==\u516c\u7406\u3001\u5b9a\u4e49\u3001==\u5148\u524d\u8bc1\u660e\u8fc7\u7684\u5b9a\u7406==\u548c==\u4efb\u4f55\u903b\u8f91\u7b49\u503c\u5173\u7cfb==\u6765\u8bc1\u660e\u524d\u63d0\u4e5f\u662f\u9519\u8bef\u7684\uff08\u5373\\(\\neg p\\)\u4e3a\u771f\uff09</p> <p>\u6ce8\uff1a\u5982\u679c\u6709\u591a\u4e2a\u524d\u63d0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bc1\u51fa\u4e00\u4e2a\u524d\u63d0\u4e3a\u5047\u5373\u53ef</p> <p>\u7279\u6b8a\u60c5\u51b5\uff1a 1. \u7a7a\u8bc1\u660e(Vacuous Proof)\uff1a\u53ea\u8981\u8bc1\u51fa==\\(p\\)\u4e3a\u5047==\uff0c\\(p \\rightarrow q\\)\u5373\u4e3a\u771f ^2db241 2. \u5e73\u51e1\u8bc1\u660e(Trivial Proof)\uff1a\u53ea\u8981\u8bc1\u51fa==\\(q\\)\u4e3a\u771f==\uff0c\\(p \\rightarrow q\\)\u5373\u4e3a\u771f\uff08\u6570\u5b66\u5f52\u7eb3\u6cd5\u5e38\u7528\u5230\uff09</p> <p>\u5f52\u8c2c\u6cd5(Proofs by Contradiction) 1. \u8bc1\u660e\u5355\u4e2a\u5b9a\u7406\\(p\\)\u4e3a\u771f     + \u5047\u8bbe\\(p\\)\u4e3a\u5047\uff0c\u5373\\(\\neg p\\)\u4e3a\u771f     + \u5f97\u5230\u4e00\u7ec4\u77db\u76fe\u5173\u7cfb\\(q \\wedge \\neg q (\\equiv F)\\)\uff0c\u4f7f\u5f97\\(\\neg p \\rightarrow (q \\wedge \\neg q)\\)\u4e3a\u5047\uff0c\u8fd9\u6837\u5c31\u80fd\u8bf4\u660e\\(p\\)\u4e3a\u771f  2. \u8bc1\u660e\u6761\u4ef6\u8bed\u53e5\\(p \\rightarrow q\\)\u4e3a\u771f     + \u5047\u8bbe\\(p\\)\u4e3a\u771f\uff0c\\(q\\)\u4e3a\u5047     + \u8bc1\u660e\\(\\neg p\\)\u4e5f\u4e3a\u771f\uff0c\u5f97\u5230\u77db\u76fe\uff08\\(p \\wedge \\neg p\\)\u4e00\u76f4\u4e3a\u5047\uff09\uff0c\u56e0\u6b64\\(q\\)\u4e3a\u771f </p> <p>\u7b49\u4ef7\u8bc1\u660e(Proof of Equivalence)\uff1a 1. \u8bc1\u660e\\(p \\leftrightarrow q\\)\u4e3a\u771f\uff0c\u5229\u7528\\(p \\leftrightarrow q \\equiv (p \\rightarrow q) \\wedge (q \\rightarrow p)\\) 2. \u8bc1\u660e\u591a\u4e2a\u547d\u9898\\(p_1 \\leftrightarrow p_2 \\leftrightarrow \\dots \\leftrightarrow p_n\\)\u7b49\u4ef7\uff0c\u5229\u7528\u5176\u7b49\u4ef7\u4e8e\\((p_1 \\rightarrow p_2) \\wedge (p_2 \\rightarrow p_3) \\wedge \\dots \\wedge (p_n \\rightarrow p_1)\\)</p>"},{"location":"notebooks/dm/1/#mistakes-in-proofs","title":"Mistakes in Proofs","text":"<p>\u5f88\u591a\u9519\u8bef\u7ed3\u679c\u6765\u81ea\u4e8e\u4e00\u4e9b\u6ca1\u6709\u6309\u903b\u8f91\u9075\u5faa\u5148\u524d\u6b65\u9aa4\u7684\u6b65\u9aa4</p> <p>\u5faa\u73af\u8bba\u8bc1(Circular reasoning(begging the question)\uff1a\u67d0\u4e9b\u6b65\u9aa4\u7684\u6b63\u786e\u6027\u5efa\u7acb\u5728\u81ea\u8eab\u652f\u6301\u7684\u57fa\u7840\u4e0a ^da89c4</p> <p>\u5f88\u7b80\u5355\u7684\ud83c\udf30\uff1a\u5c0f\u660e\u6709\u7f6a\uff0c\u56e0\u4e3a\u4ed6\u6709\u7f6a \u66f4\u591a\u7684\u4f8b\u5b50\u89c1wiki</p>"},{"location":"notebooks/dm/1/#18-proof-methods-and-strategy","title":"1.8 Proof Methods and Strategy","text":""},{"location":"notebooks/dm/1/#exhaustive-proof-and-proof-by-cases","title":"Exhaustive Proof and Proof by Cases","text":"<p>\u524d\u63d0\\(p\\)\u53ef\u80fd\u7531\u4e00\u7cfb\u5217\u60c5\u51b5\u7684\u6790\u53d6(\\(p_1 \\vee p_2 \\vee \\dots \\vee p_n\\))\u6784\u6210\uff0c\u8fd9\u65f6\u53ef\u4ee5\u91c7\u7528\u5206\u7c7b\u8bc1\u660e(Proof by cases) \u7684\u65b9\u6cd5\uff0c\u5229\u7528\\((p_1 \\vee p_2 \\vee \\dots \\vee p_n) \\rightarrow q \\equiv (p_1 \\rightarrow q) \\wedge (p_2 \\rightarrow q) \\wedge \\dots \\wedge (p_n \\rightarrow q)\\)</p> <p>\u56e0\u6b64\uff0c\u5bf9\u4e8e\u89c4\u6a21\u76f8\u5bf9\u8f83\u5c0f\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u7a77\u4e3e\u6cd5\u8bc1\u660e(Exhuastive Proof)</p> <p>\u6709\u65f6\uff0c\u76f4\u63a5\u8bc1\u660e\u53ef\u80fd\u4e0d\u77e5\u4ece\u4f55\u5f00\u59cb\uff0c\u8fd9\u65f6\u53ef\u4ee5\u91c7\u7528\u5206\u7c7b\u8bc1\u660e\u7684\u65b9\u6cd5\u2014\u2014\u6bcf\u79cd\u60c5\u51b5\u53ef\u80fd\u4f1a\u63d0\u4f9b\u989d\u5916\u7684\u4fe1\u606f\uff0c\u6709\u52a9\u4e8e\u8bc1\u660e\u7684\u63a8\u52a8</p> <p>\u4e0d\u5931\u4e00\u822c\u6027(Without loss of generality, WLOG)\uff1a\u6709\u65f6\uff0c\u8bc1\u660e\u51fa\u4e00\u79cd\u60c5\u51b5\uff0c\u4fbf\u53ef\u8bc1\u660e\u51fa\u5176\u4ed6\u7279\u5b9a\u60c5\u51b5</p>"},{"location":"notebooks/dm/1/#existence-proofs","title":"Existence Proofs","text":"<p>\u8bc1\u660e\\(\\exists xP(x)\\)\u4e3a\u771f + \u6784\u9020\u5b58\u5728\u8bc1\u660e(Constructive Existence Proof)\uff1a     + \u8bc1\u660e\u5bf9\u4e8e\u5b9a\u4e49\u57df\u5185\u7684\u67d0\u4e9b\\(c\\)\uff0c\\(P(c)\\)\u4e3a\u771f     + \u901a\u8fc7==Existential Generalization(\u5b58\u5728\u63a8\u5e7f)==\u5f97\u5230\\(\\exists xP(x)\\)\u4e3a\u771f + \u975e\u6784\u9020\u5b58\u5728\u8bc1\u660e(Nonconstructive Existence Proof)\uff1a     + \u5047\u8bbe\u5b9a\u4e49\u57df\u5185\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u4e2a\\(c\\)\uff0c\u4f7f\u5f97\\(P(c)\\)\u4e3a\u771f\uff0c\u63a8\u51fa\u77db\u76fe</p>"},{"location":"notebooks/dm/1/#uniqueness-proofs","title":"Uniqueness Proofs","text":"<p>[[Chap 1 The Foundations--Logic and Proofs#^3d1155|\u5148\u56de\u987e\u4e00\u4e0b]]\u3002\u552f\u4e00\u6027\u8bc1\u660e\u5229\u7528\\(\\exists x(P(x) \\wedge \\forall y(y \\ne x \\rightarrow \\neg P(y)))\\)</p>"},{"location":"notebooks/dm/1/#disproof-by-counterexample","title":"Disproof by Counterexample","text":"<p>\u4e3a\u4e86\u8bc1\u660e\\(\\neg \\forall xP(x)\\)\uff08\u5373\\(\\exists x \\neg P(x)\\)\uff09\u4e3a\u771f\uff0c\u53ea\u8981\u627e\u5230\u4e00\u4e2a\\(c\\)\uff0c\u4f7f\u5f97\\(P(c)\\)\u4e3a\u5047</p>"},{"location":"notebooks/dm/1/#noexistence-proofs","title":"Noexistence Proofs","text":"<p>\u4e3a\u4e86\u8bc1\u660e\\(\\neg \\exists xP(x)\\)\uff08\u5373\\(\\forall x \\neg P(x)\\)\uff09\u4e3a\u771f\uff0c\u53ea\u8981\u5047\u8bbe\u4e00\u4e2a\\(c\\)\uff0c\u4f7f\u5f97\\(P(c)\\)\u4e3a\u771f</p>"},{"location":"notebooks/dm/1/#universally-quantified-assertions","title":"Universally Quantified Assertions","text":"<p>\u4e3a\u4e86\u8bc1\u660e\\(\\forall xP(x)\\)\u4e3a\u771f\uff0c\u8981\u627e\u5230\u5bf9\u4e8e\u4efb\u610f\\(x\\)\uff0c\\(P(x)\\)\u4e3a\u771f\uff0c\u7136\u540e\u4f7f\u7528UG(\u5168\u79f0\u63a8\u5e7f) \u5373\u53ef</p>"},{"location":"notebooks/dm/1/#proof-strategies","title":"Proof Strategies","text":"<ul> <li>\u6b63\u5411\u63a8\u7406(Forward reasoning)\uff1a\u901a\u8fc7\u524d\u63d0\u3001\u516c\u7406\u548c\u5df2\u77e5\u5b9a\u7406\u5f97\u5230\u7ed3\u8bba</li> <li>\u53cd\u5411\u63a8\u7406(Backward reasoning)\uff1a\u8981\u8bc1\u8bed\u53e5\\(q\\)\u4e3a\u771f\uff0c\u627e\u5230\u53e6\u5916\u4e00\u4e2a\u8bed\u53e5\\(p\\)\uff0c\u4f7f\u5f97\\(p \\rightarrow q\\)\uff08\u4e5f\u5c31\u662f\u6240\u8c13\u8981\u8bc1\\(\\dots\\)\uff0c\u5373\u8bc1\\(\\dots\\)\uff09</li> </ul> <p>\u8fd9\u4e00\u8282\u8fd8\u6709\u597d\u591a\u4f8b\u5b50\u6ca1\u6765\u5f97\u53ca\u770b\uff0c\u770b\u770b\u6691\u5047\u6709\u6ca1\u6709\u7a7a\u8865\u4e0a\ud83e\udd14</p>"},{"location":"notebooks/dm/10/","title":"Chap 10 Graph","text":":material-circle-edit-outline: \u7ea6 9687 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 32 \u5206\u949f  <p>\u6ce8\uff1a\u672c\u7ae0\u53ef\u4e0efds\u7684[[Chap 9 Graph Algorithm|\u540c\u540d\u7ae0\u8282]]\u5bf9\u6bd4\u9605\u8bfb</p>"},{"location":"notebooks/dm/10/#101-graphs-and-graph-models","title":"10.1 Graphs and Graph Models","text":"<p>\u56fe\u8bba\u53d1\u5c55\u53f2</p> <p>\u5b9a\u4e49\uff1a\u56fe(graph)\\(G = (V, E)\\)\uff0c\u5176\u4e2d\\(V\\)\u8868\u793a\u9876\u70b9(vertice/nodes) \u7684\u975e\u7a7a\u96c6\u5408\uff0c\\(E\\)\u8868\u793a\u8fb9(edge) \u7684\u96c6\u5408\u3002\u6bcf\u6761\u8fb9\u8054\u7cfb1-2\u4e2a\u9876\u70b9\uff0c\u8fd9\u4e9b\u9876\u70b9\u79f0\u4e3a\u7aef\u70b9(endpoint)\uff0c\u79f0\u4e00\u6761\u8fb9\u8fde\u63a5\u5b83\u7684\u7aef\u70b9</p> <ul> <li> <p>\u65e0\u9650\u56fe(infinite graph)\uff1a\u5305\u542b\u65e0\u9650\u4e2a\u9876\u70b9==\u6216==\u65e0\u9650\u6761\u8fb9\u7684\u56fe</p> </li> <li> <p>\u6709\u9650\u56fe(finite graph)\uff1a\u5305\u542b\u6709\u9650\u4e2a\u9876\u70b9==\u548c==\u6709\u9650\u6761\u8fb9\u7684\u56fe\u3002\u672c\u7ae0\u53ea\u8003\u8651\u6709\u9650\u56fe\u7684\u95ee\u9898</p> </li> <li> <p>\u7b80\u5355\u56fe(simple graph)\uff1a\u6bcf\u6761\u8fb9\u8fde\u63a5\u4e0d\u540c\u7684\u9876\u70b9\uff0c\u4e14\u4e0d\u5b58\u5728\u8fde\u63a5\u540c\u4e00\u5bf9\u9876\u70b9\u7684\u4e24\u6761\u8fb9\u7684\u56fe\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u9876\u70b9\u5bf9{u, v}\u8868\u793a\u4e00\u6761\u8fb9\uff0c\u800c\u4e0d\u4ea7\u751f\u6b67\u4e49 </p> </li> <li>\u591a\u91cd\u56fe(multigraph)\uff1a\u5b58\u5728\u591a\u6761\u8fb9(multiple edges) \u8fde\u63a5\u540c\u4e00\u5bf9\u9876\u70b9\u7684\u56fe\u3002\u5982\u679c\u9876\u70b9u, v\u95f4\u6709m\u6761\u8fb9\uff0c\u79f0{u, v}\u662f\u91cd\u6570\u4e3am\u7684\u8fb9 </li> <li>\u4f2a\u56fe(pseudograph)\uff1a\u5b58\u5728\u73af\uff0c\u4e14\u53ef\u80fd\u6709\u591a\u6761\u8fb9\u8fde\u63a5\u540c\u4e00\u5bf9\u9876\u70b9\u6216\u8fde\u63a5\u9876\u70b9\u81ea\u8eab\u7684\u56fe <p>\u73af(loop)\uff1a\u4ece\u67d0\u4e2a\u9876\u70b9\u51fa\u53d1\u8fde\u63a5\u81ea\u8eab\u7684\u8fb9</p> </li> </ul> <p></p> <p>\u4e0a\u8ff0\u7684\u56fe\u5747\u4e3a\u65e0\u5411\u56fe(undirected graph)</p> <p>\u5b9a\u4e49\uff1a\u6709\u5411\u56fe(directed graph, digraph)\\((V, E)\\)\u5305\u542b\u9876\u70b9\u7684\u975e\u7a7a\u96c6\u5408\\(V\\)\u548c\u6709\u5411\u8fb9(directed edges/arc) \u7684\u96c6\u5408\\(E\\)\u3002\u6bcf\u6761\u6709\u5411\u8fb9\u4e0e\u6709\u5e8f\u9876\u70b9\u5bf9(u, v)\u6709\u8054\u7cfb\uff0c\u79f0v\u4e3a\u8d77\u70b9(start)\uff0cv\u4e3a\u7ec8\u70b9(end)</p> <ul> <li>\u6709\u5411\u56fe\u4e5f\u5b58\u5728\u73af\u548c\u591a\u6761\u6709\u5411\u8fb9\u7684\u60c5\u51b5</li> <li> <p>\u6709\u5411\u56fe\u4e2d\u5b58\u5728\u4e00\u4e9b\u6709\u5411\u8fb9\uff0c\u4f7f\u5f97u\u548cv\u4e4b\u95f4\u5efa\u7acb\u4e86\u53cc\u5411\u7684\u8fde\u63a5\uff0c\u5373\u5982\u679c\u6709\u8fb9u \\(\\rightarrow\\) v\uff0c\u90a3\u4e48\u4e5f\u5b58\u5728\u4e00\u6761\u6216\u591a\u6761\u8fb9v \\(\\rightarrow\\) u</p> </li> <li> <p>\u7b80\u5355\u6709\u5411\u56fe(simple directed graph)\uff1a\u6ca1\u6709\u73af\uff0c\u4e5f\u6ca1\u6709\u591a\u6761\u6709\u5411\u8fb9\u7684\u56fe </p> </li> <li>\u6709\u5411\u591a\u91cd\u56fe(directed multigraph)\uff1a\u5bf9\u4e8e\u540c\u4e00\u6709\u5e8f\u9876\u70b9\u5bf9(\u6216\u540c\u4e00\u9876\u70b9)\u5b58\u5728\u591a\u6761\u6709\u5411\u8fb9(multiple directed edges)\u3002\u5982\u679c\u9876\u70b9u, v\u95f4\u6709m\u6761\u6709\u5411\u8fb9\uff0c\u79f0(u, v)\u662f\u91cd\u6570(multiplicity) \u4e3am\u7684\u6709\u5411\u8fb9 </li> <li>\u6df7\u5408\u56fe(mixed graph)\uff1a\u65e2\u5305\u542b\u6709\u5411\u8fb9\uff0c\u4e5f\u5305\u542b\u65e0\u5411\u8fb9\u7684\u56fe</li> </ul> <p>\u603b\u7ed3\uff1a</p> <p>\u6ce8\uff1a\u5982\u679c\u9898\u76ee\u6ca1\u6709\u660e\u786e\u8bf4\u660e\uff0c\u9ed8\u8ba4\u5c06\u56fe\u5f53\u4f5c==\u65e0\u5411\u56fe==</p>"},{"location":"notebooks/dm/10/#graph-models","title":"Graph Models","text":"<p>\u6ce8\uff1a\u8fd9\u90e8\u5206\u5185\u5bb9\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u7b80\u5355\u5217\u4e3e\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5177\u4f53\u5185\u5bb9\u89c1\u4e66\u672c</p>"},{"location":"notebooks/dm/10/#social-networks","title":"Social Networks","text":"<p>\u793e\u4ea4\u7f51\u7edc(social networks)\uff1a\u7528\u9876\u70b9\u8868\u793a\u4e2a\u4f53\u6216\u7ec4\u7ec7\uff0c\u7528\u8fb9\u8868\u793a\u4e2a\u4f53\u6216\u7ec4\u7ec7\u4e4b\u95f4\u7684\u8054\u7cfb</p> <ul> <li>\u719f\u4eba/\u670b\u53cb\u5173\u7cfb\u56fe(acquaintanceship and friendship graphs)\uff1a\u65e0\u5411\u56fe\uff0c\u65e0\u73af\uff0c\u6ca1\u6709\u591a\u91cd\u8fb9 </li> <li>\u5f71\u54cd\u529b\u56fe(influence graphs)\uff1a\u6709\u5411\u56fe\uff0c\u65e0\u73af\uff0c\u6ca1\u6709\u591a\u91cd\u8fb9 </li> <li>\u5408\u4f5c\u56fe(collaboration graphs)\uff1a\u65e0\u5411\u56fe\uff0c\u65e0\u73af\uff0c\u6ca1\u6709\u591a\u91cd\u8fb9<ul> <li>\u597d\u83b1\u575e\u56fe(Hollywood graph)</li> <li>\u5b66\u672f\u5408\u4f5c\u56fe(academic collaboration graph)</li> </ul> </li> </ul>"},{"location":"notebooks/dm/10/#communication-networks","title":"Communication Networks","text":"<ul> <li>\u7535\u8bdd\u56fe(call graphs)\uff1a\u6709\u5411/\u65e0\u5411\u5747\u53ef\uff0c\u6709\u591a\u91cd\u8fb9 </li> </ul>"},{"location":"notebooks/dm/10/#information-networks","title":"Information Networks","text":"<ul> <li>\u7f51\u7edc\u56fe(the web graph)\uff1a\u6709\u5411\u56fe</li> <li>\u5f15\u7528\u56fe(citation graphs)\uff1a\u6709\u5411\u56fe\uff0c\u65e0\u73af\uff0c\u6ca1\u6709\u591a\u91cd\u8fb9</li> </ul>"},{"location":"notebooks/dm/10/#software-design-applications","title":"Software Design Applications","text":"<ul> <li>\u6a21\u5757\u4f9d\u8d56\u56fe(module dependency graphs)\uff1a\u6709\u5411\u56fe </li> <li>\u4f18\u5148\u7ea7\u56fe(precedence graphs)\u548c\u5e76\u884c\u5904\u7406(concurrent processing) </li> </ul>"},{"location":"notebooks/dm/10/#transportation-networks","title":"Transportation Networks","text":"<ul> <li>\u822a\u7a7a\u8def\u7a0b(airline routes)\uff1a\u6709\u5411\u591a\u91cd\u56fe</li> <li>\u8def\u7ebf\u7f51\u7edc(road networks)\uff1a\u6df7\u5408\u56fe</li> </ul>"},{"location":"notebooks/dm/10/#biological-networks","title":"Biological Networks","text":"<ul> <li>\u751f\u6001\u4f4d\u91cd\u53e0\u56fe(niche overlap graphs)\uff1a\u65e0\u5411\u7b80\u5355\u56fe </li> <li>\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528\u56fe(protein interaction graphs)\uff1a\u65e0\u5411\u56fe\uff08\u4e0b\u56fe\u8868\u793aRNA\u7684\u86cb\u767d\u8d28\uff09 </li> </ul>"},{"location":"notebooks/dm/10/#semantic-networks","title":"Semantic Networks","text":"<ul> <li>\u81ea\u7136\u8bed\u8a00\u7406\u89e3(natural language understanding, NLU)\uff1a\u673a\u5668\u5206\u62c6\u5e76\u89e3\u6790\u4eba\u7c7b\u7684\u8bdd\u8bed <p>\u6ce8\uff1aNLU\u662f\u81ea\u7136\u8bed\u8a00\u5904\u7406(NLP)\u7684\u5b50\u96c6\uff0c\u4e5f\u662fNLP\u4e2d\u6700\u56f0\u96be\u7684\u90e8\u5206</p> </li> <li>\u4fe1\u606f\u68c0\u7d22(information retrieval, IR)\uff1a\u4ece\u57fa\u4e8e\u5404\u79cd\u7c7b\u578b\u7684\u641c\u7d22\u7684\u4e00\u7ec4\u6e90\u4e2d\u83b7\u53d6\u4fe1\u606f</li> </ul> <p>\u8bed\u4e49\u5173\u7cfb(semantic relation)\uff1a\u4e24\u4e2a\u6216\u591a\u4e2a\u5355\u8bcd\u57fa\u4e8e\u610f\u601d\u7684\u8054\u7cfb</p> <p></p>"},{"location":"notebooks/dm/10/#tournaments","title":"Tournaments","text":"<ul> <li>\u5faa\u73af\u8d5b(round-robin tournament)\uff1a\u6bcf\u4e2a\u961f\u4f0d\u90fd\u548c\u5176\u4ed6\u961f\u4f0d\u6709\u4e00\u6b21\u6bd4\u8d5b\uff0c\u4e14\u4e0d\u5141\u8bb8\u5e73\u5c40 </li> <li>\u5355\u6dd8\u6c70\u8d5b(single-elimination tournament)\uff1a\u5982\u679c\u8f93\u4e00\u6b21\u5c31\u88ab\u6dd8\u6c70 </li> </ul>"},{"location":"notebooks/dm/10/#others","title":"Others","text":"<ol> <li>\u4e00\u7b14\u753b\u95ee\u9898(one-stroke drawing problem)\uff1a\u753b\u4e00\u5e45\u753b\uff0c\u786e\u4fdd\u8fde\u7eed\u79fb\u52a8\u800c\u4e0d\u63d0\u7b14\uff0c\u4f7f\u5f97\u753b\u4e2d\u6240\u6709\u90e8\u5206\u4ec5\u753b\u4e00\u904d </li> <li>[[Chap 6 Counting#^c8f5b8|\u62c9\u59c6\u9f50\u95ee\u9898(Ramsey problem)]]\uff1a\u6bcf\u4e24\u4e2a\u4eba\u8981\u4e48\u662f\u670b\u53cb\uff0c\u8981\u4e48\u662f\u654c\u4eba\uff0c\u90a3\u4e48\u516d\u4e2a\u4eba\u4e2d\u6709\u4e09\u5bf9\u670b\u53cb\u548c\u4e09\u5bf9\u654c\u4eba</li> <li>\u6392\u5ea7\u95ee\u9898(seating problem) </li> <li>\u516c\u5171\u8d44\u6e90\u95ee\u9898(utilities problem)\uff1a\u5177\u4f53\u89c1wiki\uff0c\u8fd9\u91cc\u4ec5\u4e3e\u4e2a\ud83c\udf30 </li> <li>\u94bb\u5b54\u95ee\u9898 \\(\\rightarrow\\) \u6700\u77ed\u8def\u95ee\u9898     \u95ee\u9898\uff1a\u627e\u5230\u4e00\u79cd\u94bb\u5b54\u987a\u5e8f\uff0c\u4f7f\u5f97\u7528\u65f6\u6700\u5c11</li> </ol>"},{"location":"notebooks/dm/10/#supplementsfrom-exercises","title":"Supplements(from Exercises)","text":"<p>\u5173\u4e8e\u4e00\u7ec4\u96c6\u5408\\(A_1, A_2, \\dots, A_n\\)\u7684\u4ea4\u96c6\u56fe(intersection graph)\uff1a\u5b83\u7684\u9876\u70b9\u8868\u793a\u8fd9\u4e9b\u5143\u7d20\uff0c\u5b83\u7684\u8fb9\u8868\u793a\u67d0\u4e24\u4e2a\u96c6\u5408\u5b58\u5728\u975e\u7a7a\u4ea4\u96c6\u7684\u5173\u7cfb</p>"},{"location":"notebooks/dm/10/#102-graph-terminology-and-special-types-of-graphs","title":"10.2 Graph Terminology and Special Types of Graphs","text":""},{"location":"notebooks/dm/10/#basic-terminology","title":"Basic Terminology","text":"<p>\u5173\u4e8e\u65e0\u5411\u56fe\uff1a</p> <p>\u5b9a\u4e49\uff1a + \u5982\u679c\u9876\u70b9u, v\u662f\u65e0\u5411\u56feG\u7684\u8fb9e\u4e0a\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u79f0\u8fd9\u4e24\u4e2a\u9876\u70b9\u662f\u76f8\u90bb\u7684(adjacent/neighbors)\uff0c\u8fd9\u6837\u7684\u8fb9e\u8fde\u63a5\u4e86u\u548cv + \u56fe\\(G = (V, E)\\)\u4e0a\u7684\u9876\u70b9v\u7684\u6240\u6709\u76f8\u90bb\u9876\u70b9\u6784\u6210\u7684\u96c6\u5408\u79f0\u4e3av\u7684\u90bb\u5c45(neighborhood)\uff0c\u8bb0\u4f5c\\(N(v)\\) + \u5982\u679cA\u662fV\u7684\u5b50\u96c6\uff0c\u7528\\(N(A)\\)\u8868\u793a\u6240\u6709\u4e0eA\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\u9876\u70b9\u76f8\u90bb\u7684\u6240\u6709\u9876\u70b9\u6784\u6210\u7684\u96c6\u5408\uff0c\u6240\u4ee5\uff0c\\(N(A) = \\bigcup\\limits_{v \\in A}N(v)\\) + \u65e0\u5411\u56fe\u4e2d\u9876\u70b9v\u7684\u5ea6(degree) = \u8be5\u9876\u70b9\u7684\u8fb9\u6570(\u9664\u4e86\u73af = 2\u4e2a\u5ea6)\uff0c\u8bb0\u4f5c\\(deg(v)\\)     + \u5ea6\u4e3a0\u7684\u9876\u70b9\u662f\u5b64\u7acb\u7684(isolated)     + \u5ea6\u4e3a1\u7684\u9876\u70b9\u662f\u4e0b\u5782\u7684(pendant)</p> <p>\u5b9a\u74061\u2014\u2014\u63e1\u624b\u5b9a\u7406(THE HANDSHAKING THEOREM)\uff1a\u4ee4\\(G = (V, E)\\)\u662f\u8fb9\u6570\u4e3am\u7684\u65e0\u5411\u56fe\uff0c\u5219\uff1a\u6240\u6709\u9876\u70b9\u7684\u5ea6\u4e4b\u548c = \u8fb9\u6570 \\(\\times\\) 2\uff0c\u5373\uff1a\\(2m = \\sum\\limits_{v \\in V}deg(v)\\)\uff08\u8be5\u5b9a\u7406\u540c\u6837\u9002\u7528\u4e8e\u91cd\u8fb9\uff09 \ud83c\udf30\uff1a</p> <p>\u5b9a\u74062\uff1a\u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u5ea6\u4e3a\u5947\u6570\u7684\u9876\u70b9\u4e2a\u6570\u4e3a\u5076\u6570</p> <p>\u8bc1\u660e\uff1a\u4ee4\\(V_1, V_2\\)\u5206\u522b\u8868\u793a\u5ea6\u4e3a\u5076\u6570\u548c\u5ea6\u4e3a\u5947\u6570\u7684\u9876\u70b9\uff0c\u7531\u5b9a\u74061\uff0c\u6709\uff1a $$ 2m = \\sum\\limits_{v \\in V}deg(v) = \\sum\\limits_{v \\in V_1}deg(v) + \\sum\\limits_{v \\in V_2}deg(v) $$ \u663e\u7136\uff1a\u7b49\u5f0f\u5de6\u8fb9\u7684\u6570\u4e3a\u5076\u6570\uff0c\u4e14\u6700\u53f3\u8fb9\u7684\u7b49\u5f0f\u4e2d\u7b2c1\u9879\u4e3a\u5076\u6570\u3002\u56e0\u6b64\u7b2c2\u9879\uff0c\u5373\u5ea6\u4e3a\u5947\u6570\u7684\u9876\u70b9\u4e2a\u6570\u4e00\u5b9a\u662f\u5076\u6570</p> <p>\u5173\u4e8e\u6709\u5411\u56fe\uff1a</p> <p>\u5b9a\u4e49\uff1a + \u5f53(u, v)\u8868\u793a\u56feG\u7684\u6709\u5411\u8fb9\u65f6\uff0c\u6211\u4eec\u79f0u\u5230v\u662f\u76f8\u90bb\u7684\uff0cv\u6765\u81eau\u662f\u76f8\u90bb\u7684\u3002u\u79f0\u4e3a(u, v)\u7684\u8d77\u70b9(initial vertex)\uff0cv\u79f0\u4e3a(u, v)\u7684\u7ec8\u70b9(terminal/end vertex)\u3002\u81ea\u73af\u7684\u8d77\u70b9\u3001\u7ec8\u70b9\u662f\u76f8\u540c\u7684 + v\u7684\u5165\u5ea6(in-degree) = v\u4f5c\u4e3a\u8fb9\u7684\u7ec8\u70b9\u65f6\u7684\u8fb9\u6570\uff0c\u8bb0\u4f5c\\(deg^-(v)\\) + v\u7684\u51fa\u5ea6(out-degree) = v\u4f5c\u4e3a\u8fb9\u7684\u8d77\u70b9\u65f6\u7684\u8fb9\u6570\uff0c\u8bb0\u4f5c\\(deg^+(v)\\)</p> <p>\u6ce8\uff1av\u7684\u81ea\u73af\u4f7fv\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u5747+1</p> <p>\u5b9a\u74063\uff1a\u4ee4\\(G = (V, E)\\)\u4e3a\u6709\u5411\u56fe\uff0c\u5219 $$ \\sum\\limits_{v \\in V} deg^-(v) = \\sum\\limits_{v \\in V}deg^+(v) = |E| $$</p> <p>\u6f5c\u5728\u65e0\u5411\u56fe(underlying undirected graph)\uff1a\u65e0\u89c6\u6709\u5411\u56fe\u4e2d\u8fb9\u7684\u65b9\u5411\uff0c\u5f97\u5230\u4e00\u5f20\u65e0\u5411\u56fe</p>"},{"location":"notebooks/dm/10/#some-special-simple-graphs","title":"Some Special Simple Graphs","text":"<ul> <li> <p>\u5b8c\u5168\u56fe(complete graph) \u662f\u4e00\u4e2a\u7b80\u5355\u56fe\uff0c\u6ee1\u8db3\u6bcf\u4e00\u5bf9\u4e0d\u540c\u7684\u9876\u70b9\u4e4b\u95f4\u4ec5\u6709\u4e00\u6761\u8fb9\uff0c\u8bb0\u4f5c\\(K_n\\)\u3002\u5982\u679c\u81f3\u5c11\u6709\u4e00\u5bf9\u4e0d\u540c\u7684\u9876\u70b9\u6ca1\u6709\u8fde\u63a5\u8d77\u6765\uff0c\u79f0\u8fd9\u6837\u7684\u56fe\u662f\u4e0d\u5b8c\u5168\u7684(noncomplete) </p> <p>\u6ce8\uff1a\u8fb9\u6570m = C(n, 2)</p> </li> <li> <p>\u73af(cycle)\uff1a\u4e00\u5f20\u5305\u542bn(n \\(\\ge\\) 3)\u4e2a\u9876\u70b9\uff0c\u8fb9\u4e3a\\(\\{v_1, v_2\\}, \\{v_2, v_3\\}, \\dots, \\{v_{n-1}, v_n\\}\\)\u548c\\(\\{v_n, v_1\\}\\)\uff0c\u8bb0\u4f5c\\(C_n\\) </p> </li> <li> <p>\u8f6e(wheel)\uff1a\u5728\u73af\\(C_n\\)\u7684\u57fa\u7840\u4e0a\u591a\u4e00\u4e2a\u9876\u70b9\uff0c\u4e14\u8be5\u9876\u70b9\u4e0e\u539f\u6765n\u4e2a\u9876\u70b9\u95f4\u90fd\u6709\u4e00\u6761\u8fb9\uff0c\u8bb0\u4f5c\\(W_n\\) </p> </li> <li> <p>n\u7ef4\u8d85\u7acb\u65b9\u4f53/n\u7acb\u65b9(n-dimensional hypercube/n-cube)\uff1a\u8bb0\u4f5c\\(Q_n\\)\u3002\u56fe\u7684\u9876\u70b9\u8868\u793a\\(2^n\\)\u4e2a\u957f\u5ea6\u4e3an\u7684\u4f4d\u4e32\u3002\u5f53\u4e14\u4ec5\u5f532\u4e2a\u9876\u70b9\u7684\u4f4d\u4e32\u53ea\u76f8\u5dee1\u4f4d\u65f6\uff0c\u4e24\u4e2a\u9876\u70b9\u662f\u76f8\u90bb\u7684\u3002      \u6211\u4eec\u53ef\u4ee5\u6839\u636en\u7acb\u65b9\u6784\u9020\u51fa(n+1)\u7acb\u65b9\uff1a\u5f97\u5230\u4e24\u4e2a\u76f8\u540c\u7684\\(Q_n\\)\uff0c\u5bf9\u7b2c1\u4e2a\\(Q_n\\)\u7684\u6240\u6709\u4f4d\u4e32\u7684\u6700\u5de6\u8fb9\u6dfb0\uff0c\u5bf9\u7b2c2\u4e2a\\(Q_n\\)\u7684\u6240\u6709\u4f4d\u4e32\u7684\u6700\u5de6\u8fb9\u6dfb1\uff0c\u7136\u540e\u5c06\u4ec5\u76f8\u5dee1\u4f4d\u7684\u4e24\u4e2a\u4f4d\u4e32(\u9876\u70b9)\u7528\u8fb9\u8fde\u63a5\u8d77\u6765 \uff0c\u5982\u56fe\u6240\u793a\uff1a  \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\\(Q_n\\)\u7684\u8fb9\u6570\\(m_n\\)\u7684\u9012\u63a8\u5173\u7cfb\uff1a $$ m_n = 2m_{n-1} + 2^{n-1} $$ \u89e3\u5f97\\(m_n = n \\cdot 2^{n-1}\\)\uff08\u5229\u7528[[Chap 8 Advanced Counting Techniques#Linear Nonhomogeneous Recurrence Relations with Constant Coefficients|\u7ebf\u6027\u975e\u9f50\u6b21\u9012\u63a8\u5173\u7cfb]]\u7684\u77e5\u8bc6\u6c42\u89e3\uff09</p> </li> </ul>"},{"location":"notebooks/dm/10/#bipartite-graphs","title":"Bipartite Graphs","text":"<p>\u5b9a\u4e49\uff1a\u5982\u679c\u4e00\u4e2a\u7b80\u5355\u56feG\u7684\u9876\u70b9\u96c6V\u80fd\u88ab\u5206\u6210\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\\(V_1, V_2\\)\uff0c\u4f7f\u5f97\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9\u8fde\u63a5\\(V_1\\)\u76841\u4e2a\u9876\u70b9\u548c\\(V_2\\)\u76841\u4e2a\u9876\u70b9(\u6ca1\u6709\u8fb9\u8fde\u63a5\\(V_1\\)\u7684\u4e24\u4e2a\u9876\u70b9\u6216\\(V_2\\)\u7684\u4e24\u4e2a\u9876\u70b9)\uff0c\u79f0G\u662f\u4e8c\u5206\u7684(bipartite)\uff0c\u79f0\\((V_1, V_2)\\)\u662fG\u7684\u9876\u70b9\u96c6V\u7684\u4e8c\u5206(bipartition)</p> <p>\ud83c\udf30\uff1a 1.  2. \u56feG\u548c\u56feH\u662f\u4e8c\u5206\u7684\u5417\uff1f \u5b9a\u74064\uff1a\u5f53\u4e14\u4ec5\u5f53\u7528\u4e24\u79cd\u4e0d\u540c\u989c\u8272\u6d82\u9876\u70b9\uff0c\u53ef\u4ee5\u6ee1\u8db3\u76f8\u90bb\u7684\u9876\u70b9\u4e0d\u540c\u8272\u65f6\uff0c\u8be5\u7b80\u5355\u56fe\u662f\u4e8c\u5206\u7684</p> <p>\u6ce8\uff1a\u8fd9\u91cc\u7528\u5230\u4e86\u56fe\u8bba\u7684\u91cd\u8981\u5206\u652f\uff1a</p> <p>\u8bc1\u660e\uff1a \u5224\u65ad\u4e8c\u5206\u56fe\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a\u4e8c\u5206\u56fe\u7684\u5145\u8981\u6761\u4ef6\u662f\u2014\u2014\u4e0d\u53ef\u80fd\u901a\u8fc7\u904d\u5386\u5947\u6570\u6761\u4e0d\u540c\u7684\u8fb9\uff0c\u5b9e\u73b0\u4ece\u67d0\u4e2a\u9876\u70b9\u53c8\u56de\u5230\u8be5\u9876\u70b9</p> <p>\u5b8c\u5168\u4e8c\u5206\u56fe(complete bipartite graph)\uff1a\u4e00\u5f20\u56fe\u88ab\u5206\u6210\u9876\u70b9\u6570\u5206\u522b\u4e3am\u548cn\u7684\u4e24\u4e2a\u5b50\u96c6\uff0c\u8fb9\u6ee1\u8db3\u8fde\u63a51\u4e2a\u4f4d\u4e8e\u7b2c1\u4e2a\u5b50\u96c6\u7684\u9876\u70b9\uff0c\u548c1\u4e2a\u4f4d\u4e8e\u7b2c2\u4e2a\u5b50\u96c6\u7684\u9876\u70b9\uff0c\u8bb0\u4f5c\\(K_{m, n}\\) </p>"},{"location":"notebooks/dm/10/#bipartite-graphs-and-matchings","title":"Bipartite Graphs and Matchings","text":"<p>\ud83c\udf30\uff1a\u4e8c\u5206\u56fe\u7684\u5e94\u7528\u2014\u2014\u5de5\u4f5c\u5b89\u6392</p> <p>\u6ce8\uff1a\u5177\u4f53\u5185\u5bb9\u89c1\u4e66\u672c\\(P_{692-693}\\)(\u5185\u5bb9\u6709\u70b9\u591a\uff0c\u61d2\u5f97\u5199\u4e86)</p> <p>\u4e0a\u8ff0\u95ee\u9898\u53ef\u88ab\u89c6\u4e3a\u627e\u7b80\u5355\u56feG = (V, E)\u7684\u5339\u914d(matching) M\uff0c\u5b83\u662f\u8fb9\u96c6\u5408E\u7684\u5b50\u96c6\uff0c\u6ee1\u8db3\u6ca1\u6709\u4e24\u6761\u8fb9\u6709\u5171\u540c\u7684\u9876\u70b9\uff0c\u5373\u5bf9\u4e8e\u4e0d\u540c\u7684\u8fb9{s, t}\u548c{u, v}\uff0c\u9876\u70b9s, t, u, v\u662f\u4e0d\u540c\u7684\u3002</p> <p>\u5982\u679c\u6709\u9876\u70b9\u662f\u5339\u914d\u5173\u7cfbM\u4e0a\u7684\u67d0\u6761\u8fb9\u7684\u4e00\u4e2a\u7aef\u70b9\uff0c\u79f0\u8be5\u9876\u70b9\u5728M\u4e2d\u662f\u5339\u914d\u7684(matched)\uff1b\u5426\u5219\u662f\u4e0d\u5339\u914d\u7684(unmatched)</p> <p>\u6700\u5927\u5339\u914d(maximum matching) \u662f\u5177\u6709\u6700\u5927\u8fb9\u6570\u7684\u5339\u914d</p> <p>\u5bf9\u4e8e\u4e8c\u5206\u56feG = (V, E)\uff0c\u5b83\u7684\u4e8c\u5206\u4e3a(\\(V_1, V_2\\))\uff0c\u5982\u679c\\(V_1\\)\u7684\u6bcf\u4e2a\u9876\u70b9\u662f\u5339\u914dM\u67d0\u6761\u8fb9\u7684\u7aef\u70b9\uff0c\u5373\\(|M| = |V_1|\\)\uff0c\u79f0M\u662f\\(V_1\\)\u5230\\(V_2\\)\u7684\u5b8c\u5168\u5339\u914d(complete matching)</p> <p>\ud83c\udf30\uff1a \u5b9a\u74065\u2014\u2014\u970d\u5c14\u5a5a\u914d\u5b9a\u7406(HALL'S MARRIAGE THEOREM)\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe\\(G = (V, E)\\)\uff0c\u5b83\u7684\u4e8c\u5206\u4e3a\\((V_1, V_2)\\)\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\\(V_1\\)\u7684\u6240\u6709\u5b50\u96c6\\(A\\)\uff0c\u6ee1\u8db3\\(|N(A)| \\ge |A|\\)\u65f6\uff0c\u8be5\u4e8c\u5206\u56fe\u6709\u4ece\\(V_1\\)\u5230\\(V_2\\)\u7684\u5b8c\u5168\u5339\u914d</p> <p>\u8bc1\u660e\uff1a(\u6709\u70b9\u96be)</p>"},{"location":"notebooks/dm/10/#some-applications-of-special-types-of-graphs","title":"Some Applications of Special Types of Graphs","text":"<p>\u5c40\u57df\u7f51(local area network)\uff1a + \u661f\u578b\u62d3\u6251(star topology)\uff1a\\(K_{1, n}\\) + \u73af\u5f62\u62d3\u6251(ring topology)\uff1a\\(C_n\\) + \u6df7\u5408(hybrid)\u62d3\u6251\uff1a\\(W_n\\) </p> <p>\u5e76\u884c\u8ba1\u7b97\u4e2d\u7684\u4e92\u8054\u7f51(interconnection networks for parallel computation)\uff1a</p> <p>\u4e32\u884c(serial) \u7b97\u6cd5\uff1a\u7b97\u6cd5\u5728\u4e00\u4e2a\u65f6\u523b\u5185\u6267\u884c\u4e00\u4e2a\u6b65\u9aa4(\u4e66\u4e0a\u7ed9\u51fa\u7684\u7b97\u6cd5\u5747\u662f\u4e32\u884c\u7684)\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u7b97\u6cd5\u65e0\u6cd5\u5e94\u5bf9\u9ad8\u5f3a\u5ea6\u8ba1\u7b97\u7684\u95ee\u9898\u3002</p> <p>\u56e0\u6b64\u5c31\u6709\u4e86\u5e76\u884c\u5904\u7406(parallel processing)\uff0c\u4f7f\u7528\u5305\u542b\u591a\u4e2a\u81ea\u5e26\u5185\u5b58\u7684\u5904\u7406\u5668\u7684\u8ba1\u7b97\u673a\uff0c\u514b\u670d\u53ea\u6709\u5355\u4e2a\u5904\u7406\u5668\u7684\u8ba1\u7b97\u673a\u7684\u5c40\u9650\u3002</p> <p>\u5e76\u884c\u7b97\u6cd5(parallel algorithm)\uff1a\u5c06\u95ee\u9898\u5206\u89e3\u6210\u80fd\u591f\u540c\u65f6\u89e3\u51b3\u7684\u4e00\u4e9b\u5b50\u95ee\u9898\uff0c\u4f7f\u7528\u591a\u5904\u7406\u5668\u7684\u7535\u8111\u80fd\u591f\u5feb\u901f\u89e3\u51b3\u95ee\u9898\u3002</p> <p>\u5728\u5e76\u884c\u5904\u7406\u4e2d\uff0c\u5904\u7406\u5668\u4e4b\u95f4\u9700\u8981\u76f8\u4e92\u8fde\u63a5\u3002\u56e0\u6b64\u8981\u9009\u62e9\u5408\u7406\u7684\u8fde\u63a5\u65b9\u6cd5\uff1a + \u6bcf\u5bf9\u5904\u7406\u5668\u90fd\u53cc\u5411\u8fde\u63a5\uff0c\u5f62\u6210\u5b8c\u5168\u56fe\\(K_n\\)\u2014\u2014\u6700\u7b80\u5355\uff0c\u4f46\u4e5f\u662f\u6700\u8d35\u7684\u65b9\u6cd5 + \u7ebf\u6027\u6570\u7ec4(linear array)     + \u4f18\u70b9\uff1a\u6bcf\u4e2a\u5904\u7406\u5668\u4e0e\u5176\u4ed6\u5904\u7406\u5668\u95f4\u81f3\u591a\u6709\u4e24\u6761\u76f4\u63a5\u8fde\u63a5     + \u7f3a\u70b9\uff1a\u6709\u65f6\u9700\u8981\u5927\u91cf\u7684\u4e2d\u95f4\u8fde\u63a5(\u79f0\u4e3a\u8df3(hop))\u6765\u5b9e\u73b0\u5904\u7406\u5668\u95f4\u7684\u901a\u4fe1  + \u7f51\u72b6\u7f51\u7edc(mesh network)\uff1an\u4e2a\u5904\u7406\u5668\u88ab\u6807\u8bb0\u4e3a\\(P(i, j)\\ (0 \\le i \\le m - 1, 0 \\le j \\le m - 1)\\)\u3002\u4e24\u4e2a\u65b9\u5411\u7684\u8fde\u63a5\u4f7f\\(P(i, j)\\)\u6700\u591a\u67094\u4e2a\u90bb\u5c45(\u5728\u7f51\u72b6\u7f51\u7edc\u4e2d\u7684\\(P(i \\pm 1, j)\\)\u548c\\(P(i, j \\pm 1)\\))\u3002\u6b64\u65f6\u4efb\u610f\u4e00\u5bf9\u5904\u7406\u5668\u95f4\u7684\u901a\u4fe1\u9700\u8981\\(O(\\sqrt n) = O(m)\\)\u4e2a\u4e2d\u95f4\u8fde\u63a5\u5373\u53ef\u3002  + \u8d85\u7acb\u65b9\u4f53(hypercube)\uff1a\u5904\u7406\u5668\u7684\u6570\u91cf\u4e3an = \\(2^m\\)\uff0c\u5904\u7406\u5668\u88ab\u6807\u8bb0\u4e3a\\(P_0, \\dots, P_{n-1}\\)\u3002\u6bcf\u4e2a\u5904\u7406\u5668\u4e0e\u5176\u4ed6m\u4e2a\u5904\u7406\u5668\u6709\u53cc\u5411\u8fde\u63a5\uff0c\u5373\\(P_i\\)\u8ddf\u4e0ei\u4ec5\u76f8\u5dee1\u4f4d\u7684\u5904\u7406\u5668\u4e4b\u95f4\u6709\u53cc\u5411\u8fde\u63a5\u3002\u8fd9\u79cd\u65b9\u6cd5\u6743\u8861\u4e86\u5904\u7406\u5668\u76f4\u63a5\u8fde\u63a5\u7684\u6570\u91cf\u548c\u4e2d\u95f4\u8fde\u63a5\u7684\u6570\u91cf\uff0c\u56e0\u6b64\u73b0\u5728\u5f88\u591a\u7535\u8111\u548c\u5e76\u884c\u7b97\u6cd5\u91c7\u7528\u8d85\u7acb\u65b9\u4f53\u7f51\u7edc\u3002\u53ef\u4ee5\u7528\u56fe\\(Q_m\\)\u8868\u793a </p>"},{"location":"notebooks/dm/10/#new-graphs-from-old","title":"New Graphs from Old","text":"<p>\u5b9a\u4e49\uff1a + \u56feG = (V, E)\u7684\u5b50\u56fe(subgraph) H = (W, F)\uff0c\u6ee1\u8db3W \\(\\subseteq\\) V\uff0cF \\(\\subseteq\\) E\u3002 + \u5982\u679cH\u662fG\u7684\u5b50\u56fe\u4e14H \\(\\ne\\) G\uff0c\u5219H\u662fG\u7684\u771f\u5b50\u56fe(proper subgraph) + \u5982\u679c\u6ee1\u8db3W = V, F \\(\\subseteq\\) E\uff0c\u79f0H\u662fG\u7684\u751f\u6210\u5b50\u56fe(spanning subgraph) + \u4ee4G = (V, E)\u4e3a\u7b80\u5355\u56fe\uff0c\u79f0\u5b50\u96c6(W, F)\u4e3a\u9876\u70b9\u96c6V\u7684\u5b50\u96c6W\u7684\u70b9\u8bf1\u5bfc\u5b50\u56fe(subgraph induced)\uff08\u8fb9\u96c6F\u5305\u542bE\u4e2d\u7684\u8fb9\uff09\uff0c\u5145\u8981\u6761\u4ef6\u4e3aF\u7684\u8fb9\u4e0a\u7684\u4e24\u4e2a\u7aef\u70b9\u90fd\u5728\u96c6\u5408W\u4e2d\u3002</p> <p>\u51e0\u79cd\u60c5\u51b5\uff1a\u5bf9\u4e8eG = (V, E) + \u79fb\u9664\u6216\u6dfb\u52a0\u4e00\u6761\u8fb9\uff1a     + \u79fb\u9664\u8fb9e \\(\\in\\) E\uff1a\\(G - e = (V, E - \\{e\\})\\)     + \u76f8\u4f3c\u5730\uff0c\u5982\u679c\u6211\u4eec\u8981\u79fb\u9664\u8fb9\u7684\u5b50\u96c6E'\uff0c\u5219\u5269\u4e0b\u7684G' = (V, E - E')     + \u6dfb\u52a0\u8fb9e\uff1a\\(G + e = (V, E \\cup \\{e\\})\\) + \u8fb9\u7684\u8054\u7cfb(edge contraction)\uff1a\u79fb\u9664\u7aef\u70b9\u4e3au, v\u7684\u8fb9e\uff0c\u7136\u540e\u5408\u5e76u, v\u4e3a\u65b0\u7684\u9876\u70b9w\uff0c\u63a5\u7740\u5c06\u6240\u6709\u539f\u6765\u4e0eu\u548cv\u76f8\u8fde\u7684\u8fb9\u6539\u6210\u8fde\u63a5\u5230w\u4e0a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u539f\u6765\u7684\u56feG = (V, E)\uff0c\u4ea7\u751f\u65b0\u56feG'\uff0c\u5b83\u7684\u9876\u70b9\u96c6V' = V - {u, v} \\(\\cup\\) {w}\uff0c\u5b83\u7684\u8fb9\u96c6E'\u5305\u542b\u9664\u4e86\u4ee5u\u6216v\u4e3a\u7aef\u70b9\u7684\u6240\u6709\u8fb9\uff0c\u518d\u52a0\u4e0a\u8fde\u63a5w\u7684\u8fb9(\u8fd9\u4e9b\u8fb9\u539f\u6765\u8fde\u63a5\u7684\u662fu\u6216v) + \u79fb\u9664\u9876\u70b9\uff1a\\(G - v = (V - \\{v\\}, E')\\)\uff0c\u5176\u4e2dE'\u662f\u9664\u4e86\u4e0ev\u76f8\u8fde\u7684\u6240\u6709\u8fb9     + \u79fb\u9664\u9876\u70b9\u96c6V'\uff1a(V - V', E\u2018)\uff0c\u5176\u4e2dE'\u662f\u9664\u4e86\u4e0eV'\u4e0a\u6240\u6709\u9876\u70b9\u76f8\u8fde\u7684\u6240\u6709\u8fb9  + \u56fe\u7684\u5e76\u96c6(union)\uff1a\u5bf9\u4e8e\u4e24\u5f20\u7b80\u5355\u56fe\\(G_1 = (V_1, E_1), G_2 = (V_2, E_2)\\)\uff0c\u5b83\u4eec\u7684\u5e76\u96c6\\(G_1 \\cup G_2 = (V_1 \\cup V_2, E_1 \\cup E_2)\\) </p>"},{"location":"notebooks/dm/10/#supplementsfrom-exercises_1","title":"Supplements(from Exercises)","text":"<ul> <li>\u5047\u8bbe\u4e8c\u5206\u56feG = (V, E)\uff0c\u5b83\u7684\u4e8c\u5206\u4e3a\\((V_1, V_2)\\)\uff0c\u4e14\\(A \\subseteq V_1\\)\uff0c\u5219\\(V_1\\)\u7684\u6700\u5927\u9876\u70b9\u6570\uff0c\u4e3aG\u7684\u5339\u914d\u7684\u7aef\u70b9 = \\(|V_1| - \\max\\limits_{A \\subseteq V_1}def(A)\\)\uff0c\u5176\u4e2d\\(def(A) = |A| - |N(A)|\\)\u79f0\u4e3aA\u7684\u7f3a\u9677(deficiency)</li> <li>\u56fe\u7684\u5ea6\u5e8f\u5217(degree sequence) \u662f\u6307\u5c06\u9876\u70b9\u7684\u5ea6\u6309\u975e\u9012\u589e\u987a\u5e8f\u6392\u5217\u7684\u5e8f\u5217</li> <li>\u5982\u679c\u5e8f\u5217\\(d_1, d_2, \\dots, d_n\\)\u662f\u7b80\u5355\u56fe\u7684\u5ea6\u5e8f\u5217\uff0c\u5219\u79f0\u8be5\u5e8f\u5217\u662f\u56fe\u5316\u7684(graphic)</li> <li>\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\u975e\u8d1f\u6570\u4e14\u975e\u9012\u589e\u5e8f\u5217\\(d_1, d_2, \\dots, d_n\\)\uff0c\u5c06\u5e8f\u5217\\(d_2 - 1, \\dots, d_{d_1 + 1} - 1, d_{d_1 + 2}, \\dots, d_n\\)\u91cd\u65b0\u6392\u5217\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u9879\u6309\u975e\u9012\u589e\u987a\u5e8f\u6392\u5217\u540e\u662f\u4e2a\u56fe\u5e8f\u5217(graphic sequence)\uff0c\u5219\u539f\u6765\u7684\u5e8f\u5217\u4e5f\u662f\u56fe\u5e8f\u5217</li> <li>\u6bcf\u4e2a\u975e\u8d1f\u6570\u4e14\u975e\u9012\u589e\u5e8f\u5217\uff0c\u82e5\u5b83\u7684\u548c\u662f\u5076\u6570\uff0c\u5219\u8be5\u5e8f\u5217\u662f\u4e00\u4e2a\u4f2a\u56fe(\u5141\u8bb8\u6709\u73af\u7684\u65e0\u5411\u56fe)\u7684\u5ea6\u5e8f\u5217</li> <li>\u5982\u679c\u7b80\u5355\u56fe\u4e0a\u7684\u6bcf\u4e2a\u9876\u70b9\u90fd\u6709\u76f8\u540c\u7684\u5ea6\uff0c\u79f0\u8fd9\u4e2a\u56fe\u662f\u6b63\u5219\u7684(regular)\u3002\u5982\u679c\u6bcf\u4e2a\u9876\u70b9\u7684\u5ea6\u5747\u4e3an\uff0c\u79f0\u8be5\u56fe\u662fn-regular<ul> <li>\\(K_n\\)\u662f(n-1)-regular</li> </ul> </li> <li>\u7b80\u5355\u56fe\\(G\\)\u7684\u8865\u56fe(complementary graph)\\(\\overline{G}\\)\u4e0e\\(G\\)\u6709\u76f8\u540c\u7684\u9876\u70b9\u3002\u5f53\u4e14\u4ec5\u5f53\\(G\\)\u4e0a\u7684\u4e24\u4e2a\u9876\u70b9\u4e0d\u76f8\u90bb\u65f6\uff0c\\(\\overline{G}\\)\u4e0a\u540c\u6837\u7684\u4e24\u4e2a\u9876\u70b9\u662f\u76f8\u90bb\u7684<ul> <li>\u5982\u679cG\u6709n\u4e2a\u9876\u70b9\uff0c\u5219\\(K_n = G \\cup \\overline{G}\\)</li> </ul> </li> <li>\u5982\u679c\u4e8c\u5206\u56feG\u6709v\u4e2a\u9876\u70b9\u548ce\u6761\u8fb9\uff0c\u5219\\(e \\le \\dfrac{v^2}{4}\\)</li> <li>\u6709\u5411\u56feG = (V, E)\u7684\u9006(converse) \u4e3a\u6709\u5411\u56fe\\(G^{conv}\\) = (V, F)\uff0c\u5176\u4e2dF\u901a\u8fc7\u9006\u8f6cE\u7684\u8fb9\u7684\u65b9\u5411\u5f97\u5230<ul> <li>\\((G^{conv})^{conv} = G\\)</li> <li>\u5f53\u4e14\u4ec5\u5f53\\(G\\)\u6709\u5bf9\u79f0\u5173\u7cfb\u65f6\uff0c\\(G\\)\u5b58\u5728\u9006</li> </ul> </li> </ul>"},{"location":"notebooks/dm/10/#103-representing-graphs-and-graph-isomorphism","title":"10.3 Representing Graphs and Graph Isomorphism","text":""},{"location":"notebooks/dm/10/#representing-graphs","title":"Representing Graphs","text":"<p>\u56fe\u7684\u8868\u793a\u6cd5\uff1a + \u5217\u51fa\u6240\u6709\u7684\u8fb9 + \u90bb\u63a5\u8868\uff1a\uff08\u524d\u63d0\uff1a\u56fe\u4e2d\u6ca1\u6709\u91cd\u8fb9\uff09\u8868\u793a\u51fa\u6bcf\u4e2a\u9876\u70b9\u7684\u76f8\u90bb\u9876\u70b9 \ud83c\udf30\uff1a 1. \u65e0\u5411\u56fe 2. \u6709\u5411\u56fe  + \u90bb\u63a5\u77e9\u9635 + \u5173\u8054\u77e9\u9635</p>"},{"location":"notebooks/dm/10/#adjacency-matrices","title":"Adjacency Matrices","text":"<p>\u5f53\u56fe\u7684\u8fb9\u6570\u5f88\u591a\u65f6\uff0c\u7528\u4e0a\u8ff0\u7684\u524d\u4e24\u79cd\u65b9\u6cd5\u5c31\u6bd4\u8f83\u9ebb\u70e6\u4e86\u3002\u4e3a\u4e86\u7b80\u5316\u8ba1\u7b97\uff0c\u901a\u5e38\u7528\u77e9\u9635\u8868\u793a\u56fe</p> <p>\u5047\u8bbe\u6709==\u65e0\u5411\u56fe==G = (V, E)\uff0c|V| = n\uff0c\u5b83\u7684\u9876\u70b9\u6309\u4efb\u610f\u6392\u5e8f\u6392\u5217\uff1a\\(v_1, v_2, \\dots, v_n\\)\uff0c\u5219\u5b83\u7684\u90bb\u63a5\u77e9\u9635(adjacency matrix)\\(\\mathbf{A}_G = [a_{ij}]\\)\u662f\u4e00\u4e2a\\(n \\times n\\)\u7684\u96f6\u4e00\u77e9\u9635\uff0c\u5b83\u7684\u5143\u7d20\u4e3a\uff1a $$ a_{ij} = \\begin{cases}1 &amp; \\text{if } {v_i, v_j} \\text{ is an edge of } G \\ 0 &amp; \\text{otherwise}\\end{cases} $$ \u6ce8\uff1a + \u5bf9\u4e8e\u540c\u4e00\u5f20n\u9876\u70b9\u7684\u56fe\uff0c\u5171\u6709n!\u79cd\u4e0d\u540c\u7684\u90bb\u63a5\u77e9\u9635\uff08\u56e0\u4e3a\u9876\u70b9\u987a\u5e8f\u4efb\u610f\uff09 + \u5bf9\u4e8e\u4e00\u5f20\u7b80\u5355\u56fe\uff0c\\(a_{ii} = 0, i = 1,2,3, \\dots, n\\) + \u9876\u70b9\\(v_i\\)\u7684\u73af\uff1a\\(a_{ii} = 1\\) + \\(v_i\\)\u548c\\(v_j\\)\u4e4b\u95f4\u7684\u91cd\u8fb9\uff1a\\(a_{ij}\\) = \\(\\{v_i, v_j\\}\\)\u7684\u91cd\u6570 + \u6240\u6709\u7684\u65e0\u5411\u56fe\uff0c\u5305\u62ec\u591a\u91cd\u56fe\u548c\u4f2a\u56fe\uff0c\u5176\u90bb\u63a5\u77e9\u9635\u90fd\u662f\u5bf9\u79f0\u7684 + \u7b2ci\u884c\u5143\u7d20\u4e4b\u548c = \u7b2ci\u5217\u5143\u7d20\u4e4b\u548c = \\(v_i\\)\u7684\u5ea6</p> <p>\ud83c\udf30\uff1a </p> <p>\u5bf9\u4e8e==\u6709\u5411\u56fe==\u7684\u90bb\u63a5\u77e9\u9635\\(\\mathbf{A} = [a_{ij}]\\)\uff0c\u5b83\u7684\u5143\u7d20\u4e3a\uff1a $$ a_{ij} = \\begin{cases}1 &amp; \\text{if } (v_i, v_j) \\text{ is an edge of } G \\ 0 &amp; \\text{otherwise}\\end{cases} $$ \u6ce8\uff1a + \u6709\u5411\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u4e0d\u4e00\u5b9a\u662f\u5bf9\u79f0\u7684 + \u6709\u5411\u591a\u91cd\u56fe\u4e5f\u53ef\u7528\u90bb\u63a5\u77e9\u9635\u8868\u793a\uff1a\\(a_{ij}\\) = \\((v_i, v_j)\\)\u7684\u91cd\u6570 + \u7b2ci\u884c\u5143\u7d20\u4e4b\u548c = \\(v_i\\)\u7684\u51fa\u5ea6\uff0c\u7b2ci\u5217\u5143\u7d20\u4e4b\u548c = \\(v_i\\)\u7684\u5165\u5ea6</p>"},{"location":"notebooks/dm/10/#incidence-matrices","title":"Incidence Matrices","text":"<p>\u5047\u8bbe\u6709==\u65e0\u5411\u56fe==G = (V, E)\uff0c\u9876\u70b9\u4e3a\\(v_1, v_2, \\dots, v_n\\)\uff0c\u8fb9\u4e3a\\(e_1, e_2, \\dots, e_m\\)\uff0c\u90a3\u4e48\u5b83\u7684\u5173\u8054\u77e9\u9635(incidence matrix) \u4e3a\\(\\mathbf{M} = [m_{ij}]\\)\uff0c\u662f\u4e00\u4e2a\\(m \\times n\\)\u7684\u77e9\u9635\uff0c\u5b83\u7684\u5143\u7d20\u4e3a\uff1a $$ m_{ij} = \\begin{cases}1 &amp; \\text{when edge } e_j \\text{ is incident with }v_i \\ 0 &amp; \\text{otherwise}\\end{cases} $$ \u6ce8\uff1a + \u7b2ci\u884c\u5143\u7d20\u4e4b\u548c = \\(v_i\\)\u7684\u5ea6\uff0c + \u7b2ci\u5217\u5143\u7d20\u4e4b\u548c = \\(\\begin{cases}1 &amp; \\text{loop} \\\\ 2 &amp; \\text{normal}\\end{cases}\\) + \u5173\u8054\u77e9\u9635\u53ef\u4ee5\u8868\u793a\u91cd\u8fb9\u548c\u73af\uff0c\u89c1\u4e0b\u9762\u7684\ud83c\udf30\uff1a </p>"},{"location":"notebooks/dm/10/#isomorphism-of-graphs","title":"Isomorphism of Graphs","text":"<p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4e24\u5f20\u7b80\u5355\u56fe\\(G_1 = (V_1, E_1), G_2 = (V_2, E_2)\\)\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u53cc\u5c04\u51fd\u6570\\(f: V_1 \\rightarrow V_2\\)\uff0c\u6ee1\u8db3\uff1a\\(\\forall a, b \\in V_1\\)\uff0c\u82e5\\(a, b\\)\u76f8\u90bb\uff0c\u5219\\(f(a), f(b) \\in V_2\\)\u4e14\\(f(a), f(b)\\)\u76f8\u90bb\uff0c\u5219\u79f0\u8fd9\u4e24\u5f20\u56fe\u662f\u540c\u6784\u7684(isomorphic)\uff0c\u8fd9\u6837\u7684\u51fd\u6570\\(f\\)\u79f0\u4e3a\u540c\u6784(isomorphism)\u3002\u5982\u679c\u4e24\u5f20\u7b80\u5355\u56fe\u4e0d\u540c\u6784\uff0c\u79f0\u5b83\u4eec\u662f\u975e\u540c\u6784\u7684(nonisomorphic)</p> <p>\u6ce8\uff1a\u4e24\u5f20\u7b80\u5355\u56fe\u7684\u540c\u6784\u662f\u4e00\u79cd\u7b49\u4ef7\u5173\u7cfb(equivalent relation)</p>"},{"location":"notebooks/dm/10/#determining-whether-two-simple-graphs-are-isomorphic","title":"Determining whether Two Simple Graphs are Isomorphic","text":"<p>\u5bf9\u4e8e\u4e24\u5f20n\u9876\u70b9\u7684\u7b80\u5355\u56fe\uff0c\u6709n!\u79cd\u53ef\u80fd\u7684\u53cc\u5c04\u5173\u7cfb\uff0c\u56e0\u6b64\u5f53n\u5f88\u5927\u65f6\uff0c\u76f4\u63a5\u6839\u636e\u9876\u70b9\u7684\u76f8\u90bb\u5173\u7cfb\u6765\u5224\u65ad\u540c\u6784\u662f\u4e0d\u5207\u5b9e\u9645\u7684\uff1b\u4f46\u662f\uff0c\u5224\u65ad\u4e24\u5f20\u56fe\u4e0d\u662f\u540c\u6784\u7684\u76f8\u5bf9\u6bd4\u8f83\u5bb9\u6613\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u5b83\u4eec\u7684\u4e0d\u53d8\u91cf(invariant) \u6765\u6c42\u89e3\u3002</p> <p>\u6709\u54ea\u4e9b\u4e0d\u53d8\u91cf\uff1a + \u9876\u70b9\u6570 + \u8fb9\u6570 + \u6240\u6709\u9876\u70b9\u7684\u603b\u5ea6\u6570</p> <p>\u7136\u800c\uff0c\u6211\u4eec\u53ea\u80fd\u7528\u4e0d\u53d8\u91cf\u5224\u65ad\u4e24\u5f20\u56fe\u7684\u975e\u540c\u6784\u5173\u7cfb\uff0c\u76ee\u524d\u6ca1\u6709\u5df2\u77e5\u7528\u6765\u5224\u65ad\u4e24\u5f20\u56fe\u662f\u540c\u6784\u7684</p> <p>\u53e6\u4e00\u79cd\u5224\u65ad\u540c\u6784\u7684\u65b9\u6cd5\uff1a\u6bd4\u8f83\u4e24\u5f20\u56fe\u7684\u90bb\u63a5\u77e9\u9635</p> <p>\ud83c\udf30\uff1a\u8bc1\u660e\u4e0b\u9762\u4e24\u5f20\u56fe\u662f\u540c\u6784\u7684 1.        2.  </p> <p> </p> <p>\u6c42\u89e3\u540c\u6784\u7684\u7b97\u6cd5\uff1a + \u76ee\u524d\uff0c\u5df2\u77e5\u7684\u6700\u4f73\u7b97\u6cd5\u5728\u6700\u574f\u60c5\u51b5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u6307\u6570\u7ea7 + 2017\u5e74\uff0c\u6709\u4eba\u627e\u5230\u4e00\u4e2a\u7b97\u6cd5\uff1a\u5bf9\u4e8en\u9876\u70b9\u7684\u56fe\uff0c\u8ba1\u7b97\u5b83\u7684\u540c\u6784\u7684\u6b21\u6570\u4e3a\\(2^{f(n)}\\)\uff0c\\(f(n)\\)\u4e3a\\(O((\\log n)^3)\\)\uff0c\u56e0\u6b64\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u51c6\u591a\u9879\u5f0f\u65f6\u95f4(quasi-polynomial time) + \u540c\u6784\u6d4b\u8bd5\u8f6f\u4ef6\uff1aNAUTY</p> <p>\u5e94\u7528\uff1a + \u5316\u5b66 + \u7535\u8def\u8bbe\u8ba1(the design of electronic circuits) + \u751f\u7269\u4fe1\u606f\u5b66(bioinformatics) + \u8ba1\u7b97\u673a\u89c6\u89c9(computer vision)</p>"},{"location":"notebooks/dm/10/#supplementsfrom-exercises_2","title":"Supplements(from Exercises)","text":"<ul> <li>n\u9876\u70b9\u7684\u65e0\u5411\u56fe\\(G_n\\) = (V, E)\u7684\u5bc6\u5ea6(density)\uff1a\\(\\dfrac{2|E|}{|V|(|V| - 1)}\\)<ul> <li>\u7a00\u758f(sparse)\u56fe\uff1a\\(\\lim\\limits_{n \\rightarrow \\infty} \\dfrac{2|E|}{|V|(|V| - 1)} = 0\\)</li> <li>\u7a20\u5bc6(dense)\u56fe\uff1a\\(\\lim\\limits_{n \\rightarrow \\infty} \\dfrac{2|E|}{|V|(|V| - 1)} = c(c \\in \\mathbf{R}^+)\\)</li> </ul> </li> <li>\u5047\u8bbeG\u548cH\u662f\u540c\u6784\u7684\uff0c\u5219\\(\\overline{G}\\)\u548c\\(\\overline{H}\\)\u662f\u540c\u6784\u7684</li> <li>\u67092\u4e2a\u6216\u591a\u4e2a\u9876\u70b9\u7684\u4e8c\u5206\u56fe\uff0c\u5bf9\u5b83\u7684\u9876\u70b9\u8fdb\u884c\u4e00\u5b9a\u6392\u5e8f\u540e\uff0c\u80fd\u591f\u5f62\u6210\u5982\u4e0b\u5f62\u5f0f\u7684\u90bb\u63a5\u77e9\u9635 $$ \\begin{bmatrix} \\mathbf{0} &amp; \\mathbf{A} \\ \\mathbf{B} &amp; \\mathbf{0} \\end{bmatrix} $$</li> <li>\u5982\u679c\u7b80\u5355\u56feG\u548c\u5b83\u7684\u8865\u56fe\\(\\overline{G}\\)\u662f\u540c\u6784\u7684\uff0c\u79f0G\u662f\u81ea\u8865\u7684(self-complementary)<ul> <li>\u5982\u679cG\u662fv\u9876\u70b9\u7684\u81ea\u8865\u7b80\u5355\u56fe\uff0c\u5219v \\(\\equiv\\) 0 or 1(mod 4)</li> </ul> </li> <li>\u9b54\u9b3c\u5bf9(devil's pair)\uff1a\u5728\u4e00\u4e2a\u6545\u610f\u7684\u540c\u6784\u6d4b\u8bd5\u4e2d\uff0c\u5b58\u5728\u4e00\u5bf9\u975e\u540c\u6784\u56fe\uff0c\u65e0\u6cd5\u68c0\u6d4b\u51fa\u8fd9\u4e24\u5f20\u56fe\u4e0d\u662f\u540c\u6784\u7684</li> </ul>"},{"location":"notebooks/dm/10/#104-connectivity","title":"10.4 Connectivity","text":""},{"location":"notebooks/dm/10/#paths","title":"Paths","text":"<p>\u5b9a\u4e49(\u65e0\u5411\u56fe)\uff1a + \u4ee4n\u4e3a\u975e\u8d1f\u6574\u6570\uff0cG\u4e3a\u65e0\u5411\u56fe\uff0cG\u4e2d\u4eceu\u5230v\uff0c\u957f\u5ea6\u4e3an\u7684\u8def\u5f84(path)\uff0c\u662fG\u4e0a\u7684n\u6761\u8fb9\u7684\u5e8f\u5217\\(e_1, \\dots, e_n\\)(\u5b58\u5728\u9876\u70b9\u5e8f\u5217\\(x_0 = u, x_1, \\dots, x_{n-1}, x_n = v\\)\uff0c\u4f7f\u5f97\\(e_i\\)\u7684\u7aef\u70b9\u4e3a\\(x_{i-1}\\)\u548c\\(x_i\\)\uff0c\\(i = 1, \\dots, n\\))\u3002 + \u5728\u7b80\u5355\u56fe\u4e2d\uff0c\u8def\u5f84\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a\u9876\u70b9\u7684\u5e8f\u5217\\(x_0, x_1, \\dots, x_n\\)\uff08\u56e0\u4e3a\u5217\u51fa\u7684\u9876\u70b9\u80fd\u591f\u8868\u793a\u552f\u4e00\u7684\u8def\u5f84\uff09 + \u5982\u679c\u8def\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c\uff0c\u5373u = v\uff0c\u4e14\u957f\u5ea6\u5927\u4e8e0\uff0c\u5219\u79f0\u8be5\u8def\u5f84\u4e3a\u73af(circuit) + \u8def\u5f84\u6216\u73af\u7ecf\u8fc7(pass through) \u9876\u70b9\\(x_1, x_2, \\dots, x_{n-1}\\)\uff0c\u904d\u5386(traverse) \u8fb9\\(e_1, e_2, \\dots, e_n\\) + \u65e0\u91cd\u590d\u8fb9\u51fa\u73b0\u7684\u8def\u5f84\u6216\u73af\u8ba4\u4e3a\u662f\u7b80\u5355\u7684(simple)</p> <p>\u6ce8\uff1a + \u5982\u679c\u4e0d\u533a\u5206\u91cd\u8fb9\uff0c\u5219\u8def\u5f84\u53ef\u4ee5\u8bb0\u4f5c\\(e_1, e_2, \\dots, e_n\\)\uff0c\u5176\u4e2d\\(e_i = \\{x_{i-1}, x_i\\}, i = 1, 2, \\dots, n\\) + \u957f\u5ea6\u4e3a0\u7684\u8def\u5f84\u5c31\u662f\u5355\u4e2a\u70b9 + \u5728\u522b\u7684\u4e66\u4e2d\uff1a     + \u8def\u5f84\u88ab\u79f0\u4e3awalk\uff0c\u5b83\u662f\u4ea4\u9519\u7684\u9876\u70b9\u548c\u8fb9\u7684\u5e8f\u5217\uff1a\\(v_0, e_1, v_1, e_2, \\dots, v_{n-1}, e_n, v_n\\)\uff0c\u5176\u4e2d\\(v_{i-1}, v_i\\)\u662f\\(e_i\\)\u7684\u7aef\u70b9(\\(i = 1, 2, \\dots, n\\))\u3002     + \u73af\u88ab\u79f0\u4e3aclosed walk     + \u7b80\u5355\u8def\u5f84\u88ab\u79f0\u4e3atrail     + \u65e0\u91cd\u590d\u9876\u70b9\u51fa\u73b0\u7684trail\u88ab\u79f0\u4e3apath\uff08\u4e0e\u4e0a\u9762\u7684\u5b9a\u4e49\u51b2\u7a81\uff09     \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u8bed\u5883\u5224\u65ad\u8fd9\u4e9b\u8bcd\u8bed\u7684\u610f\u601d</p> <p>\u5b9a\u4e49(\u6709\u5411\u56fe)\uff1a + \u4ee4n\u4e3a\u975e\u8d1f\u6574\u6570\uff0cG\u4e3a\u6709\u5411\u56fe\uff0cG\u4e2d\u4eceu\u5230v\uff0c\u957f\u5ea6\u4e3an\u7684\u8def\u5f84(path)\uff0c\u662fG\u4e0a\u7684n\u6761\u8fb9\u7684\u5e8f\u5217\\(e_1, \\dots, e_n\\)\uff0c\u4f7f\u5f97\\(e_i = (x_{i-1}, x_i)\\)\uff0c\\(i = 1, \\dots, n\\)\uff0c\u5176\u4e2d\\(x_0 = u, x_n = v\\)\u3002 + \u5f53\u6709\u5411\u56fe\u4e2d\u6ca1\u6709\u91cd\u8fb9\u65f6\uff0c\u8def\u5f84\u53ef\u4ee5\u7528\u9876\u70b9\u5e8f\u5217\\(x_0, x_1, x_2, \\dots, x_n\\)\u8868\u793a + \u73af(circuit/cycle)\uff1a\u957f\u5ea6\u4e3a1\uff0c\u8d77\u70b9 = \u7ec8\u70b9\u7684\u8def\u5f84 + \u65e0\u91cd\u590d\u8fb9\u51fa\u73b0\u7684\u8def\u5f84\u6216\u73af\u8ba4\u4e3a\u662f\u7b80\u5355\u7684(simple)</p> <p>\u6ce8\uff1a + \u4e0a\u9762\u7684\u201c\u6ce8\u201d\u4e2d\u63d0\u5230\u7684\u522b\u79f0(walk, closed walk...)\u4e5f\u9002\u7528\u4e8e\u6709\u5411\u56fe + \u5982\u679c\u4e0d\u8003\u8651\u91cd\u8fb9\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u8fb9\u7684\u5e8f\u5217\u8868\u793a\u8def\u5f84</p> <p>\ud83c\udf30\uff1a 1. \u719f\u4eba\u56fe(acquaintanceship graph)\u7684\u8def\u5f84\uff1a\u73b0\u5728\u5f88\u591a\u793e\u4f1a\u5b66\u5bb6\u731c\u60f3\uff1a\u4e16\u754c\u4e0a\u4efb\u610f\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u8def\u5f84\u5f88\u77ed\uff0c\u4ec5\u7ecf\u8fc75\u4e2a\u751a\u81f3\u66f4\u5c11\u7684\u4eba\u2014\u2014\u516d\u5ea6\u5206\u9694\u7406\u8bba(six degree of seperation) 2. \u5408\u4f5c\u56fe(collaboration graph)\u7684\u8def\u5f84     + Erdos number\uff1am\u4e0e\u6570\u5b66\u5bb6Paul Erdos\u4e4b\u95f4\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6     + Bacon number: c\u4e0e\u6f14\u5458Kevin Bacon\u4e4b\u95f4\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6 </p>"},{"location":"notebooks/dm/10/#connectedness-in-undirected-graphs","title":"Connectedness in Undirected Graphs","text":"<p>\u5b9a\u4e49\uff1a\u5728\u4e00\u5f20\u65e0\u5411\u56fe\u4e2d\uff0c\u5982\u679c\u6bcf\u5bf9\u4e0d\u540c\u7684\u9876\u70b9\u4e4b\u95f4\u90fd\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u79f0\u8fd9\u4e2a\u65e0\u5411\u56fe\u662f\u8fde\u901a\u7684(connected)\uff1b\u4e0d\u8fde\u901a\u7684\u65e0\u5411\u56fe\u79f0\u4e3a\u65ad\u5f00\u7684(disconnected)\u3002\u5982\u679c\u6211\u4eec\u79fb\u9664\u56fe\u7684\u9876\u70b9\u6216\u8fb9\uff0c\u4ea7\u751f\u4e86\u65ad\u5f00\u7684\u5b50\u56fe\uff0c\u90a3\u4e48\u6211\u4eec\u65ad\u5f00(disconnect) \u4e86\u8fd9\u5f20\u56fe</p> <p>\u5b9a\u74061\uff1a\u5728\u8fde\u901a\u7684\u65e0\u5411\u56fe\u4e2d\uff0c\u4efb\u610f\u4e00\u5bf9\u4e0d\u540c\u9876\u70b9\u4e4b\u95f4\u603b\u5b58\u5728\u4e00\u6761\u7b80\u5355\u8def\u5f84</p> <p>\u8fde\u901a\u5206\u91cf(connected component)\uff1a\u56feG\u7684\u6700\u5927\u8fde\u901a\u5b50\u56fe\u3002\u4e00\u5f20\u4e0d\u8fde\u901a\u7684\u56fe\u5305\u542b\u4e24\u4e2a\u6216\u591a\u4e2a\u4e0d\u76f8\u4ea4\u7684\u8fde\u901a\u5206\u91cf\uff0c\u5b83\u4eec\u7684\u5e76\u96c6\u6784\u6210\u4e86\u6574\u5f20\u56fe </p>"},{"location":"notebooks/dm/10/#how-connected-in-a-graph","title":"How Connected in a Graph?","text":"<ul> <li>\u5272\u70b9(cut vertices/articulation points) \u6ee1\u8db3\uff1a\u82e5\u79fb\u9664\u8be5\u9876\u70b9\u4ee5\u53ca\u4e0e\u5b83\u5173\u8054\u7684\u8fb9\uff0c\u5c31\u4f1a\u751f\u62101\u4e2a\u5305\u542b\u66f4\u591a\u8fde\u901a\u5206\u91cf\u7684\u5b50\u56fe(\u56e0\u4e3a\u79fb\u9664\u4e861\u4e2a\u9876\u70b9\u548c\u4e00\u4e9b\u8fb9\uff0c\u76f8\u8f83\u4e8e\u539f\u56fe\uff0c\u5269\u4f59\u7684\u56fe\u662f\u5b83\u7684\u5b50\u56fe)</li> <li>\u5272\u8fb9(cut edges/bridges) \u6ee1\u8db3\uff1a\u82e5\u79fb\u9664\u8be5\u8fb9\uff0c\u5c31\u4f1a\u751f\u62101\u4e2a\u5305\u542b\u66f4\u591a\u8fde\u901a\u5206\u91cf\u7684\u5b50\u56fe</li> </ul>"},{"location":"notebooks/dm/10/#vertex-connectivity","title":"Vertex Connectivity","text":"<p>\u5e76\u4e0d\u662f\u6240\u6709\u56fe\u90fd\u6709\u5272\u70b9\u3002\u6bd4\u5982\u5b8c\u5168\u56fe\\(K_n(n \\ge 3)\\)\uff0c\u4efb\u610f\u79fb\u96641\u4e2a\u9876\u70b9\u53ca\u5176\u5173\u8054\u8fb9\uff0c\u5269\u4e0b\u7684\u56fe\u4e3a\\(K_{n-1}\\)\uff0c\u5b83\u8fd8\u662f\u8fde\u901a\u56fe\u3002</p> <ul> <li>\u4e0d\u53ef\u5206\u5272\u56fe(nonseparable graph)\uff1a\u6ca1\u6709\u5272\u70b9\u7684\u8fde\u901a\u56fe</li> <li>\u70b9\u5272\u96c6(vertex cut/seperating set)\uff1a\u5bf9\u4e8e\u56feG = (V, E)\u7684\u9876\u70b9\u96c6V\u7684\u5b50\u96c6V'\uff0c\u6ee1\u8db3G - V'\u662f\u65ad\u5f00\u7684\u3002\u9664\u4e86\u5b8c\u5168\u56fe\u5916\u7684\u6240\u6709\u8fde\u901a\u56fe\uff0c\u90fd\u67091\u4e2a\u70b9\u5272\u96c6</li> <li>\u70b9\u8fde\u901a\u5ea6(vertex connectivity)\uff1a\u65e0\u5411\u56feG\u4e2d\uff0c\u70b9\u5272\u96c6\u5185\u9876\u70b9\u7684\u6700\u5c11\u6570\u91cf\uff0c\u8bb0\u4f5c\\(\\kappa(G)\\)<ul> <li>\u7531\u4e8e\u5b8c\u5168\u56fe\u6ca1\u6709\u70b9\u5272\u96c6\uff0c\u56e0\u6b64\u6309\u4e0a\u8ff0\u5b9a\u4e49\uff0c\u65e0\u6cd5\u5b9a\u4e49\\(\\kappa(K_n)\\)\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8bb0\\(\\kappa(G) = n - 1\\)\uff0c\u8868\u793a\u751f\u6210\u4ec5\u5305\u542b\u5355\u4e2a\u9876\u70b9\u7684\u56fe\u6240\u9700\u79fb\u9664\u9876\u70b9\u7684\u6570\u91cf</li> <li>\\(0 \\le \\kappa(G) \\le n - 1\\)</li> <li>\u5f53\u4e14\u4ec5\u5f53G\u662f\u65ad\u5f00\u7684\uff0c\u6216G = \\(K_1\\)\u65f6\uff0c\\(\\kappa(G) = 0\\)</li> <li>\u5f53\u4e14\u4ec5\u5f53G\u662f\u5b8c\u5168\u56fe\u65f6\uff0c\\(\\kappa(G) = n - 1\\)</li> <li>\u5982\u679c\\(\\kappa(G) \\ge k\\)\uff0c\u79f0\u56fe\u4e3ak\u70b9\u8fde\u901a(k-connected/k-vertex-connected)<ul> <li>\u5355\u70b9\u8fde\u901a(1-connected)\uff1a\u56fe\u662f\u8fde\u901a\u7684\u4e14\u9876\u70b9\u6570 &gt; 1</li> <li>\u53cc\u70b9\u8fde\u901a(2-connected/biconnected)\uff1a\u56fe\u662f\u4e0d\u53ef\u5206\u5272\u7684\u4e14\u9876\u70b9\u6570 &gt; 2</li> <li>\u5982\u679cG\u662fk\u70b9\u8fde\u901a\u7684\uff0c\u5219G\u4e5f\u662fj\u70b9\u8fde\u901a\u7684(\\(0 \\le j \\le k\\))</li> </ul> </li> </ul> </li> </ul> <p>\ud83c\udf30\uff1a  1. \u627e\u51fa\\(G_1\\)\u7684\u5272\u70b9\u548c\u5272\u8fb9  2. \u627e\u51fa\u6240\u6709\u56fe\u7684\u70b9\u8fde\u901a\u5ea6 </p>"},{"location":"notebooks/dm/10/#edge-connectivity","title":"Edge Connectivity","text":"<ul> <li>\u5982\u679c\u56fe\u6709\u5272\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u53bb\u9664\u5272\u8fb9\u5c31\u80fd\u65ad\u5f00\u8be5\u56fe</li> <li> <p>\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u9700\u8981\u5bfb\u627e\u6240\u9700\u53bb\u9664\u7684\u6700\u5c0f\u7684\u8fb9\u7684\u96c6\u5408\uff0c\u4f7f\u5f97\u8be5\u56fe\u662f\u65ad\u5f00\u7684</p> </li> <li> <p>\u8fb9\u5272\u96c6(edge cut)\uff1a\u8fb9\u96c6E'\uff0c\u6ee1\u8db3G - E'\u662f\u65ad\u5f00\u7684\u3002\u9664\u4e86\u5b8c\u5168\u56fe\u5916\u7684\u6240\u6709\u8fde\u901a\u56fe\uff0c\u90fd\u67091\u4e2a\u70b9\u5272\u96c6</p> </li> <li>\u8fb9\u8fde\u901a\u5ea6(edge connectivity)\uff1a\u65e0\u5411\u56feG\u4e2d\uff0c\u8fb9\u5272\u96c6\u5185\u6700\u5c0f\u7684\u8fb9\u6570\uff0c\u8bb0\u4f5c\\(\\lambda(G)\\)<ul> <li>\\(0 \\le \\lambda(G) \\le n - 1\\)</li> <li>\\(\\lambda(G) = 0\\)\uff1aG\u4e0d\u8fde\u901a\u6216\u4ec5\u5305\u542b1\u4e2a\u9876\u70b9</li> <li>\\(\\lambda(G) = n - 1\\)\uff1a\u5f53\u4e14\u4ec5\u5f53\\(G = K_n\\)</li> <li>\\(\\lambda(G) \\le n - 2\\)\uff1a\u5f53G\u4e0d\u662f\u5b8c\u5168\u56fe\u65f6</li> </ul> </li> </ul> <p>\ud83c\udf30\uff1a\u627e\u51fa\u4e0a\u97625\u5f20\u56fe\u7684\u8fb9\u8fde\u901a\u5ea6 </p> <p>\u5173\u4e8e\u70b9\u8fde\u901a\u5ea6\u548c\u8fb9\u8fde\u901a\u5ea6\u7684\u4e0d\u7b49\u5f0f\uff1a\u5bf9\u4e8eG = (V, E)\uff0c|V| &gt; 2\u65f6\uff0c $$ \\kappa(G) \\le \\lambda(G) \\le \\min\\limits_{v \\in V} deg(v) $$ \u5e94\u7528\uff1a + \u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u53ef\u9760\u6027\u5206\u6790\uff1a     + \u70b9\u8fde\u901a\u5ea6\uff1a\u80fd\u591f\u65ad\u5f00\u7f51\u7edc\u7684\u8def\u7531\u5668\u7684\u6700\u5c0f\u6570\u91cf     + \u8fb9\u8fde\u901a\u5ea6\uff1a\u80fd\u591f\u65ad\u5f00\u7f51\u7edc\u7684\u5149\u7ea4\u8fde\u63a5\u7684\u6700\u5c0f\u6570\u91cf + \u9ad8\u901f\u516c\u8def\u7f51\uff1a     + \u70b9\u8fde\u901a\u5ea6\uff1a\u80fd\u591f\u963b\u788d\u4efb\u610f\u4e24\u70b9\u901a\u884c\u7684\u5173\u95ed\u7684\u4ea4\u6c47\u70b9\u7684\u6700\u5c0f\u6570\u91cf     + \u8fb9\u8fde\u901a\u5ea6\uff1a\u80fd\u591f\u963b\u788d\u4efb\u610f\u4e24\u70b9\u901a\u884c\u7684\u5173\u95ed\u7684\u516c\u8def\u7684\u6700\u5c0f\u6570\u91cf</p>"},{"location":"notebooks/dm/10/#connectedness-in-directed-graphs","title":"Connectedness in Directed Graphs","text":"<p>\u5b9a\u4e49\uff1a\u5728\u6709\u5411\u56fe\u4e2d + \u5982\u679c\u5bf9\u4e8e\u56fe\u4e2d\u4efb\u610f\u4e24\u70b9a, b\u90fd\u5b58\u5728\u4e00\u6761\\(a \\rightarrow b\\)\u548c\\(b \\rightarrow a\\)\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u79f0\u8be5\u56fe\u662f\u5f3a\u8fde\u901a\u7684(strongly connected) + \u5982\u679c\u5bf9\u4e8e\u56fe\u4e2d\u4efb\u610f\u4e24\u70b9a, b\uff0c\u5728\u8be5\u56fe\u7684\u6f5c\u5728\u65e0\u5411\u56fe(underlying undirected graph) \u4e2d\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48\u79f0\u8be5\u56fe\u662f\u5f31\u8fde\u901a\u7684(weakly connected)</p> <p>\u6ce8\uff1a\u663e\u7136\u5f3a\u8fde\u901a\u7684\u56fe\u4e5f\u6ee1\u8db3\u5f31\u8fde\u901a + \u5f3a\u8fde\u901a\u5206\u91cf(strongly connected component/strong component)\uff1a\u6700\u5927\u5f3a\u8fde\u901a\u5b50\u56fe\u3002     + \u82e5a, b\u662f\u65e0\u5411\u56fe\u4e2d\u76842\u4e2a\u9876\u70b9\uff0c\u5219\u5b83\u4eec\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u8981\u4e48\u662f\u76f8\u540c\u7684\uff0c\u8981\u4e48\u662f\u4e0d\u76f8\u4ea4\u7684</p> <p>\u5e94\u7528\uff1a\u7f51\u7edc\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf</p> <p>\u5de8\u5f3a\u8fde\u901a\u5206\u91cf(giant strongly connected component, GSCC)\uff1a\u539f\u6765\u6709\u5411\u56fe\u4e2d\u4e0e\u5b83\u7684\u6f5c\u5728\u65e0\u5411\u56fe\u4e2d\u7684\u8fde\u901a\u5206\u91cf\u5bf9\u5e94\u7684\u5b50\u56fe\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4ee5\u53ca\u5f88\u591a\u5f88\u5c0f\u7684\u5206\u91cf\uff0c\u524d\u8005\u79f0\u4e3aGSCC</p> <p>\u5177\u4f53\u5185\u5bb9\u89c1\u6559\u6750\\(P_{722}\\)</p>"},{"location":"notebooks/dm/10/#paths-and-isomorphism","title":"Paths and Isomorphism","text":"<p>\u5176\u4ed6\u7684\u4e0d\u53d8\u91cf\uff1a + \u957f\u5ea6\u4e3ak\u7684\u7b80\u5355\u73af(k \\(\\ge\\) 2)\uff0c\u7528\u6765\u5224\u65ad2\u5f20\u56fe\u662f\u975e\u540c\u6784\u7684 + \u7528\u8def\u5f84\u6784\u5efa\u6f5c\u5728\u540c\u6784(\u51fd\u6570)\u7684\u6620\u5c04</p> <p>\ud83c\udf30\uff1a 1.   2.  </p>"},{"location":"notebooks/dm/10/#counting-paths-between-vertices","title":"Counting Paths between Vertices","text":"<p>\u5b9a\u74062\uff1a\u4ee4\u56feG\u6709\u90bb\u63a5\u77e9\u9635\\(\\mathbf{A}\\)\uff0c\u5176\u9876\u70b9\u987a\u5e8f\u4e3a\\(v_1, v_2, \\dots, v_n\\)\uff08\u6709\u5411\u8fb9\u3001\u65e0\u5411\u8fb9\u3001\u591a\u91cd\u8fb9\u3001\u73af\u5747\u5141\u8bb8\uff09\uff0c\u5219\u4ece\\(v_i\\)\u5230\\(v_j\\)\u957f\u5ea6\u4e3ar\u7684\u4e0d\u540c\u8def\u5f84\u6570 = \\(\\mathbf{A}^r\\)\u4e2d(i, j)\u9879</p> <p>\u8bc1\u660e\uff1a  </p> <p>[!note] \u8865\u5145\uff1a\u53ef\u8fbe\u6027\u77e9\u9635\\(\\mathbf{P} = [p_{ij}]_{n \\times n}\\) $$ p_{ij} = \\begin{cases}1 &amp; \\text{if there is a path between }i \\text{ and } j \\ 0 &amp; \\text{otherwise}\\end{cases} $$ \\(\\therefore\\ \\mathbf{P} = \\mathbf{A} \\vee \\mathbf{A}^2 \\vee \\dots \\vee \\mathbf{A}^n\\)</p> <p>\u610f\u4e49\uff1a\u5bf9\u4e8e\u6709\u5411\u56fe\uff0c\u5f53\\(\\mathbf{P}\\)\u4e2d\u6240\u6709\u5143\u7d20\u5747\u4e3a1\u65f6\uff0c\u8be5\u56fe\u662f\u5f3a\u8fde\u901a\u7684\uff1b\u4e5f\u53ef\u4ee5\u7528\u6765\u5bfb\u627e\u5f3a\u8fde\u901a\u5206\u91cf</p> <p>\u5b9a\u74062\u7684\u5e94\u7528\uff1a + \u627e\u5230\u4e24\u4e2a\u9876\u70b9\u95f4\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6 + \u5224\u65ad\u56fe\u662f\u5426\u8fde\u901a</p> <p>\ud83c\udf30\uff1a </p>"},{"location":"notebooks/dm/10/#supplementsfrom-exercises_3","title":"Supplements(from Exercises)","text":"<ul> <li>\u5047\u8bbeG = (V, E)\u662f\u6709\u5411\u56fe\uff0c\u5bf9\u4e8ev, w \\(\\in\\) V\uff0c\u5982\u679c\u5b58\u5728\u4ecev\u5230w\u7684\u6709\u5411\u8def\u5f84\uff0c\u79f0\u4ecev\u51fa\u53d1\uff0cw\u662f\u53ef\u5230\u8fbe\u7684(reachable)\u3002\u5982\u679c\u540c\u65f6\u5b58\u5728\u4ecev\u5230w\u548c\u4ecew\u5230v\u7684\u8def\u5f84\uff0c\u79f0v\u548cw\u662f\u76f8\u4e92\u53ef\u5230\u8fbe\u7684(mutually reachable)<ul> <li>\u5982\u679cu\u548cv\u662f\u76f8\u4e92\u53ef\u5230\u8fbe\u7684\uff0cv\u548cw\u662f\u76f8\u4e92\u53ef\u5230\u8fbe\u7684\uff0c\u5219u\u548cw\u662f\u76f8\u4e92\u53ef\u5230\u8fbe\u7684</li> </ul> </li> <li>\u6bcf\u4e2an\u9876\u70b9\u8fde\u901a\u56fe\u81f3\u5c11\u6709n-1\u6761\u8fb9</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u7b80\u5355\u56fe\uff0c\u5b58\u5728\u4ece\u4efb\u610f\u5ea6\u4e3a\u5947\u6570\u7684\u9876\u70b9\u51fa\u53d1\uff0c\u5230\u5176\u4ed6\u5ea6\u4e3a\u5947\u6570\u7684\u9876\u70b9\u7684\u8def\u5f84</li> <li>\u5047\u8bbev\u662f\u5272\u8fb9\u7684\u7aef\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53\u8be5\u70b9\u7684\u5ea6&gt;1\u65f6\uff0cv\u662f\u4e00\u4e2a\u5272\u70b9</li> <li>\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u9876\u70b9u, v(\u4e0d\u540c\u4e8e\u9876\u70b9c)\uff0c\u4f7f\u5f97\u6240\u6709\u4eceu\u5230v\u7684\u8def\u5f84\u90fd\u9700\u7ecf\u8fc7c\u65f6\uff0cc\u4e3a\u7b80\u5355\u56feG\u7684\u5272\u70b9</li> <li>\u81f3\u5c11\u67092\u4e2a\u9876\u70b9\u7684\u7b80\u5355\u56fe\uff0c\u81f3\u5c11\u67092\u4e2a\u9876\u70b9\u4e0d\u662f\u5272\u70b9</li> <li>\u5f53\u4e14\u4ec5\u5f53\u67d0\u6761\u8fb9\u4e0d\u662f\u7b80\u5355\u56fe\u4e2d\u4efb\u4f55\u7b80\u5355\u73af\u7684\u4e00\u90e8\u5206\u65f6\uff0c\u8be5\u8fb9\u4e3a\u5272\u8fb9</li> <li>\u6709\u5411\u56feG\u7684\u70b9\u57fa(vertex basis) \u662fG\u4e2d\u9876\u70b9\u7684\u6700\u5c0f\u96c6\u5408B\uff0c\u4f7f\u5f97G\u4e2d\u4efb\u610f\u4e0d\u5c5e\u4e8eB\u7684\u9876\u70b9v\uff0c\u5b58\u5728\u4e00\u6761\u4eceB\u7684\u67d0\u4e9b\u9876\u70b9\u51fa\u53d1\uff0c\u5230v\u7684\u8def\u5f84</li> <li>\u5982\u679c\u4e00\u4e2a\u7b80\u5355\u56fe\u6709k\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u4e14\u8fd9\u4e9b\u5206\u91cf\u5206\u522b\u6709\\(n_1, n_2, \\dots, n_k\\)\u4e2a\u9876\u70b9\uff0c\u90a3\u4e48G\u7684\u8fb9\u6570\u4e0d\u4f1a\u8d85\u8fc7\\(\\sum\\limits_{i=1}^kC(n_i, 2)\\)</li> <li>\u6709n\u4e2a\u9876\u70b9\uff0c\u4e14\u6709k\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u7b80\u5355\u56fe\uff0c\u81f3\u591a\u6709\\(\\dfrac{(n - k)(n - k + 1)}{2}\\)\u6761\u8fb9</li> <li>\u5982\u679cn\u9876\u70b9\u7684\u7b80\u5355\u56feG\u6709\u8d85\u8fc7\\(\\dfrac{(n - 1)(n - 2)}{2}\\)\u6761\u8fb9\uff0c\u5219\u8be5\u56fe\u662f\u8fde\u901a\u7684</li> <li>\u4ee4\\(P_1, P_2\\)\u4e3a\u7b80\u5355\u56feG\u4e2d\u4e24\u4e2a\u9876\u70b9u, v\u4e4b\u95f4\u7684\u4e24\u6761\u7b80\u5355\u8def\u5f84\uff0c\u4e14\u8fd9\u4e24\u6761\u8def\u5f84\u4e0d\u5305\u542b\u76f8\u540c\u7684\u8fb9\uff0c\u5219G\u4e2d\u5b58\u5728\u4e00\u4e2a\u7b80\u5355\u73af</li> </ul>"},{"location":"notebooks/dm/10/#105-euler-and-hamilton-paths","title":"10.5 Euler and Hamilton Paths","text":"<p>\u6ce8\uff1a\u8fd9\u4e00\u8282\u5bf9\u5e94fds\u7684[[Chap 9 Graph Algorithm#Euler Circuits|\u8fd9\u90e8\u5206]]</p>"},{"location":"notebooks/dm/10/#euler-paths-and-circuits","title":"Euler Paths and Circuits","text":"<p>[!info] History\uff1a\u4e03\u6865\u95ee\u9898 </p> <p>\u5b9a\u4e49\uff1a + \u6b27\u62c9\u73af(Euler circuit)\uff1a\u56feG\u4e2d\u5305\u542b\u6240\u6709\u8fb9\u7684\u7b80\u5355\u73af + \u6b27\u62c9\u8def(Euler path)\uff1a\u56feG\u4e2d\u5305\u542b\u6240\u6709\u8fb9\u7684\u7b80\u5355\u8def\u5f84 + \u6b27\u62c9\u56fe(Euler graph)\uff1a\u5177\u6709\u6b27\u62c9\u73af\u7684\u56fe </p> <p>\u5b9a\u74061\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u81f3\u5c11\u67092\u4e2a\u9876\u70b9\u7684\u8fde\u901a\u591a\u91cd\u56fe\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u6240\u6709\u9876\u70b9\u7684\u5ea6\u5747\u4e3a\u5076\u6570\u65f6\uff0c\u8be5\u56fe\u5177\u6709\u6b27\u62c9\u73af</p> <p>\u8bc1\u660e\uff1a (\u5fc5\u8981\u6027) \u6b27\u62c9\u73af \\(\\rightarrow\\) \u9876\u70b9\u7684\u5ea6\u5747\u4e3a\u5076\u6570 + \u6211\u4eec\u5047\u5b9a\u6b27\u62c9\u73af\u4ee5a\u4e3a\u8d77\u70b9\uff0c\u7b2c\u4e00\u6761\u8fb9\u4e3aa\u8d21\u732e1\u4e2a\u5ea6 + \u6b27\u62c9\u73af\u6bcf\u8fc7\u4e00\u4e2a\u9876\u70b9\uff0c\u5c31\u4f1a\u4e3a\u8be5\u9876\u70b9\u8d21\u732e2\u4e2a\u5ea6 + \u6b27\u62c9\u73af\u7ec8\u6b62\u4e8e\u8d77\u59cb\u9876\u70b9(\u5373a)\uff0c\u53c8\u4e3aa\u8d21\u732e1\u4e2a\u5ea6(\u52a0\u4e0a\u7b2c\u4e00\u6761\u8fb9\u76841\u4e2a\u5ea6\uff0c\u5c31\u4fdd\u8bc1a\u5177\u6709\u5076\u6570\u4e2a\u5ea6\u4e86) + \u7ed3\u5408\u6b27\u62c9\u73af\u7684\u5b9a\u4e49\uff0c\u6613\u77e5\u6240\u6709\u9876\u70b9\u7684\u5ea6\u5747\u4e3a\u5076\u6570</p> <p>(\u5145\u5206\u6027) \u9876\u70b9\u7684\u5ea6\u5747\u4e3a\u5076\u6570 \\(\\rightarrow\\) \u6b27\u62c9\u73af \u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u4eceG\u4e2d\u4efb\u610f\u9876\u70b9a\u51fa\u53d1\u7684\u4e00\u4e2a\u7b80\u5355\u73af\uff1a + \u7b80\u5355\u73af\u7ecf\u8fc7\\(x_0 = a, x_1, x_2, \\dots, x_n = a\\) + \u5728G\u7684\u5b50\u56feH\u4e2d\u6784\u5efa\u7b80\u5355\u8def\u5f84\uff1a\u4ee4w\u4e3a\u521a\u521a\u6784\u5efa\u7684\u73af\u548cH\u7684\u516c\u5171\u9876\u70b9\uff0c\u8d77\u59cb\u4e8ew\uff0c\u6784\u5efaH\u7684\u7b80\u5355\u8def\u5f84\u3002\u7531\u4e8e\u8be5\u8def\u5f84\u4e00\u5b9a\u7ec8\u6b62\u4e8ew\uff0c\u56e0\u6b64\u6211\u4eec\u5f97\u5230\u7684\u5176\u5b9e\u662fH\u7684\u4e00\u4e2a\u73af + \u901a\u8fc7\u62fc\u63a5H\u7684\u73af\u548c\u539f\u6765G\u7684\u73af\uff0c\u6784\u5efa\u4e00\u4e2a\u5728G\u4e2d\u7684\u5b8c\u6574\u7684\u73af + \u91cd\u590d\u8fd9\u4e2a\u6b65\u9aa4\uff0c\u76f4\u81f3\u6240\u6709\u8fb9\u90fd\u7528\u8fc7\u4e86(\u6839\u636e\u6b27\u62c9\u73af\u7684\u5b9a\u4e49\uff0c\u6b64\u65f6\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6b27\u62c9\u73af) </p> <p>\u6ce8\uff1a\u5145\u5206\u6027\u7684\u90e8\u5206\u8fd8\u662f\u8bb2\u7684\u4e0d\u592a\u6e05\u695a\uff0c\u56e0\u4e3a\u6211\u76ee\u524d\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\ud83d\ude05</p> <p>\u6b27\u62c9\u73af\u7b97\u6cd5\u7684\u4f2a\u4ee3\u7801\uff1a </p> <p>\u5b9a\u74062\uff1a\u4e00\u4e2a\u8fde\u901a\u591a\u91cd\u56fe\u5177\u6709\u6b27\u62c9\u8def\uff08\u4f46\u4e0d\u662f\u6b27\u62c9\u73af\uff09\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a\u6709\u4e14\u4ec5\u67092\u4e2a\u9876\u70b9\u7684\u5ea6\u4e3a\u5947\u6570</p> <p>\ud83c\udf30\uff1a </p> <p>[!note] \u8865\u5145\uff1a\u6709\u5411\u56fe\u4e2d\u7684\u6b27\u62c9\u73af\u548c\u6b27\u62c9\u8def + \u4e00\u4e2a\u6ca1\u6709\u5b64\u7acb\u9876\u70b9(\u5ea6\u4e3a0)\u7684\u6709\u5411\u591a\u91cd\u56fe\uff0c\u5177\u6709\u6b27\u62c9\u73af\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a   + \u56fe\u662f\u5f31\u8fde\u901a\u7684   + \u6bcf\u4e2a\u9876\u70b9\u7684\u5165\u5ea6 = \u51fa\u5ea6 + \u4e00\u4e2a\u6ca1\u6709\u5b64\u7acb\u9876\u70b9\u7684\u6709\u5411\u591a\u91cd\u56fe\uff0c\u5177\u6709\u6b27\u62c9\u8def(\u4f46\u4e0d\u662f\u6b27\u62c9\u73af)\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a   + \u56fe\u662f\u5f31\u8fde\u901a\u7684   + \u6bcf\u4e2a\u9876\u70b9\u7684\u5165\u5ea6 = \u51fa\u5ea6\uff0c\u9664\u4e862\u4e2a\u9876\u70b9\uff1a\u4e00\u4e2a\u9876\u70b9\u6ee1\u8db3\u5165\u5ea6 - \u51fa\u5ea6 = 1\uff0c\u53e6\u4e00\u4e2a\u9876\u70b9\u6ee1\u8db3\u51fa\u5ea6 - \u5165\u5ea6 = 1</p> <p>\ud83c\udf30\uff1a </p> <p>\u5e94\u7528\uff1a 1. \u4e00\u7c7b\u8c1c\u9898\u2014\u2014\u201c\u4e00\u7b14\u753b\u201d\u95ee\u9898 2. \u4e2d\u56fd\u90ae\u9012\u5458\u95ee\u9898 3. \u5176\u4ed6\u9886\u57df\uff1a\u8ba1\u7b97\u673a\u7f51\u7edc(\u7ec4\u64ad)\u3001\u5206\u5b50\u751f\u7269\u5b66\u2026\u2026</p>"},{"location":"notebooks/dm/10/#hamilton-paths-and-circuits","title":"Hamilton Paths and Circuits","text":"<p>[!info] History: Icosian puzzle </p> <p>\u5b9a\u4e49\uff1a + \u54c8\u5bc6\u987f\u8def(Euler path)\uff1a\u56feG\u4e2d\u5305\u542b\u6240\u6709\u9876\u70b9\u7684\u7b80\u5355\u8def\u5f84 + \u54c8\u5bc6\u987f\u73af(Euler circuit)\uff1a\u56feG\u4e2d\u5305\u542b\u6240\u6709\u9876\u70b9\u7684\u7b80\u5355\u73af</p> <p>\u6ce8\uff1a\u5bf9\u4e8e\u56feG = (V, E)\uff0c\u5982\u679c\\(V = \\{x_0, x_1, \\dots, x_{n-1}, x_n\\}\\)\uff0c\u4e14\u5bf9\u4e8e\\(0 \\le i &lt; j \\le n\\)\uff0c\\(x_i \\ne x_j\\)\uff0c\u90a3\u4e48\uff1a + \u54c8\u5bc6\u987f\u8def\u4e3a\u7b80\u5355\u8def\\(x_0, x_1, \\dots, x_{n-1}, x_n\\) + \u54c8\u5bc6\u987f\u73af\uff1a\\(x_0, x_1, \\dots, x_{n-1}, x_n, x_0(n &gt; 0)\\) + \u54c8\u5bc6\u987f\u56fe(Euler graph)\uff1a\u5177\u6709\u54c8\u5bc6\u987f\u73af\u7684\u56fe</p> <p>\u4e00\u4e9b\u4e8b\u5b9e\uff1a + \u76ee\u524d\uff0c\u6ca1\u6709\u5df2\u77e5\u7684\u54c8\u5bc6\u987f\u73af\u5b58\u5728\u6027\u7684\u5145\u8981\u6761\u4ef6\uff0c\u4f46\u662f\u6709\u8bb8\u591a\u5173\u4e8e\u54c8\u5bc6\u987f\u73af\u5b58\u5728\u6027\u7684\u5145\u5206\u6761\u4ef6\u7684\u5b9a\u7406\uff0c\u4ee5\u53ca\u8bc1\u660e\u54c8\u5bc6\u987f\u73af\u4e0d\u5b58\u5728\u7684\u6027\u8d28 + \u5982\u679c\u56fe\u7684\u4e00\u4e2a\u9876\u70b9\u7684\u5ea6\u4e3a1\uff0c\u90a3\u4e48\u8be5\u56fe\u4e0d\u5b58\u5728\u54c8\u5bc6\u987f\u73af + \u5982\u679c\u4e00\u4e2a\u9876\u70b9\u7684\u5ea6\u4e3a2\uff0c\u90a3\u4e48\u8fd9\u5bf9\u5e94\u7684\u4e24\u6761\u8fb9\u4e00\u5b9a\u540c\u65f6\u5b58\u5728\u4e8e\u4efb\u4f55\u54c8\u5bc6\u987f\u73af\u4e2d + \u5982\u679c\u54c8\u5bc6\u987f\u73af\u7ecf\u8fc7\u4e00\u4e2a\u9876\u70b9\uff0c\u9664\u4e86\u6784\u6210\u54c8\u5bc6\u987f\u73af\u76842\u6761\u8fb9\u5916\uff0c\u4e0e\u8be5\u9876\u70b9\u5173\u8054\u7684\u5176\u4ed6\u8fb9\u5747\u53ef\u4e0d\u4f5c\u8003\u8651 + \u54c8\u5bc6\u987f\u73af\u5185\u4e0d\u5305\u542b\u66f4\u5c0f\u7684\u73af + \u5f53\\(n \\ge 3\\)\u65f6\uff0c\\(K_n\\)\u6709\u4e00\u4e2a\u54c8\u5bc6\u987f\u73af + \u56fe\u7684\u8fb9\u8d8a\u591a\uff0c\u5177\u6709\u54c8\u5bc6\u987f\u73af\u7684\u53ef\u80fd\u6027\u8d8a\u5927 + \u5411\u6709\u54c8\u5bc6\u987f\u73af\u7684\u56fe\u6dfb\u52a0\u8fb9\u540e\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5177\u6709\u76f8\u540c\u54c8\u5bc6\u987f\u73af\u7684\u56fe</p> <p>\u5b9a\u74063\u2014\u2014\u72c4\u62c9\u514b\u5b9a\u7406(DIRAC'S THEOREM)\uff1a\u5982\u679cG\u662f\u4e00\u4e2a\u5177\u6709n(n \\(\\ge\\) 3)\u4e2a\u9876\u70b9\u7684\u7b80\u5355\u56fe\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u9876\u70b9\u7684\u5ea6\u81f3\u5c11\u4e3a\\(\\dfrac{n}{2}\\)\uff0c\u90a3\u4e48G\u5c31\u6709\u4e00\u4e2a\u54c8\u5bc6\u987f\u73af</p> <p>\u5b9a\u74064\u2014\u2014\u5965\u5c14\u5b9a\u7406(ORE'S THEOREM)\uff1a\u5982\u679cG\u662f\u4e00\u4e2a\u5177\u6709n(n \\(\\ge\\) 3)\u4e2a\u9876\u70b9\u7684\u7b80\u5355\u56fe\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u4e0d\u76f8\u90bb\u7684\u9876\u70b9\u5bf9u, v\u6ee1\u8db3deg(u) + deg(v) \\(\\ge\\) n\uff0c\u90a3\u4e48G\u5c31\u6709\u4e00\u4e2a\u54c8\u5bc6\u987f\u73af</p> <p>\u6ce8\uff1a\u4e0a\u8ff02\u4e2a\u5b9a\u7406\u63d0\u4f9b\u4e86\u54c8\u5bc6\u987f\u73af\u5b58\u5728\u6027\u7684\u5145\u5206\u6761\u4ef6</p> <p>\u76ee\u524d\uff0c\u5df2\u77e5\u5bfb\u627e\u54c8\u5bc6\u987f\u73af\u7684\u6700\u4f73\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u6307\u6570\u7ea7(\u5173\u4e8e\u9876\u70b9\u6570)\uff0c\u4e14\u8be5\u95ee\u9898\u662f\u4e00\u4e2aNP\u5b8c\u5168\u95ee\u9898</p>"},{"location":"notebooks/dm/10/#applications-of-hamilton-circuits","title":"Applications of Hamilton Circuits","text":"<p>\u5e94\u7528\uff1a + \u65c5\u884c\u5546\u95ee\u9898(traveling salesperson problem, TSP)\uff0c\u89c1[[Chap 10 Graph#The Traveling Saleperson Problem|\u4e0b\u4e00\u8282]] + \u683c\u96f7\u7801(gray codes)</p> <p>\u6ce8\uff1a\u5177\u4f53\u5185\u5bb9\u89c1dld[[Chap 1 Digital Systems and Information#Gray Codes|\u76f8\u5173\u90e8\u5206]]\uff0c\u8fd9\u91cc\u53ea\u8bb2\u56fe\u8bba\u4e2d\u7684\u5e94\u7528</p> <p>\u5bfb\u627e\u683c\u96f7\u7801\u7684\u95ee\u9898 \\(\\rightarrow\\) \u627e\u5230n\u7acb\u65b9\\(Q_n\\)\u7684\u54c8\u5bc6\u987f\u73af </p>"},{"location":"notebooks/dm/10/#supplementsfrom-exercises_4","title":"Supplements(from Exercises)","text":"<ul> <li>\u5f7c\u5f97\u68ee\u56fe(Petersen graph)\uff1a\u5982\u56fe\u6240\u793a\u3002\u5b83\u81ea\u8eab\u6ca1\u6709\u54c8\u5bc6\u987f\u73af\uff0c\u4f46\u5982\u679c\u5220\u6389\u4e00\u4e2a\u9876\u70b9\u53ca\u5176\u5173\u8054\u7684\u6240\u6709\u8fb9\u540e\uff0c\u5269\u4f59\u7684\u5b50\u56fe\u6709\u54c8\u5bc6\u987f\u73af </li> <li>\u5f17\u7f57\u83b1\u7b97\u6cd5(Fleury's algorithm)\uff1a\u6784\u5efa\u6b27\u62c9\u73af\u7684\u4e00\u79cd\u7b97\u6cd5\u3002(wiki)<ul> <li>\u9996\u5148\u5728\u8fde\u901a\u591a\u91cd\u56fe\u4e2d\u9009\u62e9\u4efb\u610f\u9876\u70b9</li> <li>\u7136\u540e\u901a\u8fc7\u8fde\u7eed\u6311\u9009\u8fb9\u6765\u6784\u5efa\u73af\u3002\u4e00\u65e6\u6709\u4e00\u6761\u8fb9\u88ab\u9009\u62e9\uff0c\u5c31\u5c06\u5176\u4ece\u539f\u6765\u7684\u56fe\u4e2d\u5220\u53bb\u3002\u8fde\u7eed\u6311\u9009\u8fb9\u662f\u4e3a\u4e86\u786e\u4fdd\u6bcf\u6761\u8fb9\u5f00\u59cb\u4e8e\u4e0a\u4e00\u6761\u8fb9\u7684\u7ed3\u675f\u4f4d\u7f6e\uff0c\u8fd9\u6837\u4fdd\u8bc1\u8fd9\u6761\u8fb9\u4e0d\u662f\u5272\u8fb9\uff0c\u9664\u975e\u6ca1\u6709\u53ef\u66ff\u4ee3\u7684\u8fb9</li> </ul> </li> <li>\u9a91\u58eb\u5de1\u903b(knight's tour) \u95ee\u9898 <p>\u6ce8\uff1a\u7531\u4e8e\u6211\u4e0d\u61c2\u56fd\u9645\u8c61\u68cb\u7684\u89c4\u5219\uff0c\u8fd9\u91cc\u5c31\u7565\u8fc7\u4e86(wiki)</p> </li> </ul>"},{"location":"notebooks/dm/10/#106-shortest-path-problems","title":"10.6 Shortest-Path Problems","text":"<p>\u6ce8\uff1a\u8fd9\u4e00\u8282\u5bf9\u5e94fds\u7684[[Chap 9 Graph Algorithm#Shortest Path Algorithms|\u8fd9\u90e8\u5206]]</p> <ul> <li>\u6743\u91cd\u56fe(weighted graph)\uff1a\u6bcf\u6761\u8fb9\u88ab\u8d4b\u4e88\u4e00\u4e2a\u6570\u5b57\u7684\u56fe</li> <li>\u6743\u91cd\u56fe\u7684\u8def\u5f84\u957f\u5ea6(length)\uff1a\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u6743\u91cd\u548c <p>\u6ce8\uff1a\u65e0\u6743\u56fe\u7684\u8def\u5f84\u957f\u5ea6\u4e3a\u8def\u5f84\u4e0a\u8fb9\u7684\u6761\u6570</p> </li> </ul> <p>\u6743\u91cd\u56fe\u7684\u5e94\u7528\uff1a </p>"},{"location":"notebooks/dm/10/#a-shortest-path-algorithm","title":"A Shortest-Path Algorithm","text":"<p>\u8fd9\u91cc\uff0c\u6211\u4eec\u4ecb\u7ecd\u7684\u6700\u77ed\u8def\u7b97\u6cd5\u662fDijkstra\u7b97\u6cd5\uff0c\u5b83\u662f\u4e00\u79cd\u8d2a\u5fc3\u7b97\u6cd5(greedy algorithm)\uff0c\u80fd\u591f\u627e\u5230\u4ee5\u67d0\u4e2a\u9876\u70b9a\u4e3a\u8d77\u59cb\u70b9\uff0c\u5230\u5176\u4ed6\u6240\u6709\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002</p> <p>\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u6d41\u7a0b(\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u89c1[[Chap 9 Graph Algorithm#Dijkstra's Algorithm(for weighted shortest paths)|\u8fd9\u91cc]])\uff1a + \u521d\u59cb\u72b6\u6001\uff1a\\(L_0(a) = 0, L_0(v) = \\infty, S_0 = \\emptyset\\)\uff0c</p> <p>\u6ce8\uff1a\u8fd9\u91cc\u7684a\u8868\u793a\u8d77\u59cb\u9876\u70b9\uff0cL\u8868\u793a\u5f53\u524d\u8ba1\u7b97\u7684\u4ecea\u51fa\u53d1\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5176\u4e0b\u6807\u8868\u793a\u5f53\u524d\u8fed\u4ee3\u6b21\u6570\uff0c\\(S_k\\)\u8868\u793a\u7ecf\u8fc7k\u6b21\u8fed\u4ee3\u540e\uff0c\u5df2\u7ecf\u6807\u6ce8\u8fc7\u7684\u9876\u70b9\u96c6\u5408 + \u6838\u5fc3\u90e8\u5206\uff1a\\(L_k(a, v) = \\min\\{L_{k-1}(a, v), L_{k-1}(a, u) + w(u, v)\\}\\)\uff0c\u5176\u4e2dw(u, v)\u8868\u793au, v\u95f4\u7684\u8fb9\u957f</p> <p>\u4f2a\u4ee3\u7801\uff1a </p> <p>\ud83c\udf30\uff1a  </p> <p>\u6ce8\uff1a\u6559\u6750\u7ed9\u51fa\u4e86Dijkstra\u7b97\u6cd5\u7684\u5f52\u7eb3\u8bc1\u660e(\\(P_{748}\\))</p> <p>\u5b9a\u74061\uff1aDijkstra\u7b97\u6cd5\u80fd\u591f\u5728\u8fde\u901a\u7684\u7b80\u5355\u65e0\u5411\u6743\u91cd\u56fe\u4e2d\u627e\u5230\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u5f84</p> <p>\u5b9a\u74062\uff1aDijkstra\u7b97\u6cd5\u7684\u8fd0\u7b97(\u52a0\u6cd5\u548c\u6bd4\u8f83)\u6b21\u6570\u4e3a\\(O(n^2)\\)</p>"},{"location":"notebooks/dm/10/#the-traveling-saleperson-problem","title":"The Traveling Saleperson Problem","text":"<p>\u9898\u76ee\uff1a\u4e00\u4e2a\u65c5\u884c\u5546\u60f3\u8981\u8bbf\u95ee\u6240\u6709n\u4e2a\u57ce\u5e02\uff0c\u4e14\u5bf9\u6bcf\u4e2a\u57ce\u5e02\u4ec5\u8bbf\u95ee1\u904d\uff0c\u6700\u540e\u8fd4\u56de\u8d77\u70b9\u3002\u95ee\uff1a\u4f55\u79cd\u8bbf\u95ee\u987a\u5e8f\u4f7f\u5f97\u8bbf\u95ee\u603b\u8ddd\u79bb\u6700\u77ed\uff1f</p> <p>\ud83c\udf30\uff1a  \u679a\u4e3e\u51fa\u6240\u6709\u8def\u5f84\uff1a  \u89c2\u5bdf\u5f97\uff0c\u6700\u77ed\u8def\u5f84 = 458</p> <p>\u6211\u4eec\u5c06\u539f\u95ee\u9898\u62bd\u8c61\u4e3a\uff1a\u5728\u5e26\u6743\u91cd\u7684\u3001\u5b8c\u5168\u7684\u65e0\u5411\u56fe\u4e2d\u627e\u5230\u6700\u5c0f\u603b\u6743\u91cd\u7684\u73af\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u9876\u70b9\u4ec5\u88ab\u8bbf\u95ee1\u6b21\uff0c\u4e14\u8fd4\u56de\u81f3\u8d77\u70b9\uff0c\u5373\uff1a\u5728\u5b8c\u5168\u56fe\u4e2d\u627e\u5230\u6700\u5c0f\u603b\u6743\u91cd\u7684\u54c8\u5bc6\u987f\u73af</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a + \u68c0\u6d4b\u6240\u6709\u7684\u54c8\u5bc6\u987f\u73af\uff1a\u4e00\u5171\u6709\\(\\dfrac{(n-1)!}{2}\\)\u4e2a\u73af\u2014\u2014\u4e0d\u5207\u5b9e\u9645</p> <p>\u6ce8\uff1a\u76ee\u524d\u6ca1\u6709\u591a\u9879\u5f0f\u7ea7\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u6765\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\u2014\u2014\u5b83\u662f\u4e2aNP\u5b8c\u5168\u95ee\u9898</p> <ul> <li>\u8fd1\u4f3c\u7b97\u6cd5(approximation algorithm)\uff1a\u5b83\u5e76\u4e0d\u627e\u51fa\u7cbe\u51c6\u89e3\uff0c\u800c\u662f\u627e\u5230\u5c3d\u53ef\u80fd\u63a5\u8fd1\u7cbe\u51c6\u89e3\u7684\u89e3\u3002\u6bd4\u5982\u6211\u4eec\u901a\u8fc7\u8fd1\u4f3c\u7b97\u6cd5\u627e\u5230\u67d0\u4e2a\u603b\u6743\u91cd\u4e3a\\(W'\\)\u7684\u54c8\u5bc6\u987f\u73af\uff0c\u4f7f\u5f97\\(W \\le W' \\le cW\\)\u3002\u76ee\u524d\u6709\u591a\u9879\u5f0f\u7ea7\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u4f7f\u5f97\\(c = \\dfrac{3}{2}\\)</li> </ul>"},{"location":"notebooks/dm/10/#supplementsfrom-exercises_5","title":"Supplements(from Exercises)","text":"<ul> <li>\u5f17\u6d1b\u4f0a\u5fb7\u7b97\u6cd5(Floyd's algorithm)\uff1a\u5728\u5e26\u6743\u8fde\u901a\u7b80\u5355\u56fe\u4e2d\u5bfb\u627e\u6240\u6709\u9876\u70b9\u5bf9\u7684\u6700\u77ed\u957f\u5ea6\uff0c\u4f46\u4e0d\u80fd\u7528\u5b83\u6765\u6784\u5efa\u6700\u77ed\u8def\u5f84\u3002\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a </li> <li>Dijkstra\u7b97\u6cd5\u65e0\u6cd5\u5728\u6709\u8d1f\u6743\u8fb9\u7684\u56fe\u4e2d\u6b63\u5e38\u8fd0\u884c</li> <li>\u6700\u957f\u8def\u95ee\u9898(longest path problem)\uff1a\u5728\u6ca1\u6709\u7b80\u5355\u73af\u7684\u5e26\u6743\u6709\u5411\u56fe\u4e2d\uff0c\u8981\u6c42\u627e\u5230\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u5f97\u5b83\u7684\u8fb9\u6743\u548c\u6700\u5927</li> </ul>"},{"location":"notebooks/dm/10/#107-planar-graphs","title":"10.7 Planar Graphs","text":""},{"location":"notebooks/dm/10/#108-graph-coloring","title":"10.8 Graph Coloring","text":""},{"location":"notebooks/dm/Glossary/","title":"\u7559\u8a00\u677f","text":":material-circle-edit-outline: \u7ea6 808 \u4e2a\u5b57 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f  <p>[!notice] \u8fd9\u91cc\u53ea\u9009\u5f55\u4e86\u90e8\u5206\u8bcd\u6c47\u548c\u7ed3\u8bba\uff0c\u4ec5\u4f9b\u8003\u524d\u5feb\u901f\u8bb0\u5fc6\u548c\u65b9\u4fbf\u67e5\u9605\u3002\u4e2d\u6587\u4e3b\u8981\u662f\u6211\u81ea\u5df1\u7ffb\u8bd1\u7684\uff0c\u672a\u6807\u6ce8\u4e2d\u6587\u7684\u8bcd\u6c47\u4e0d\u4f5c\u4e3a\u8003\u70b9</p>"},{"location":"notebooks/dm/Glossary/#chap-1","title":"Chap 1","text":""},{"location":"notebooks/dm/Glossary/#chap-2","title":"Chap 2","text":""},{"location":"notebooks/dm/Glossary/#chap-3","title":"Chap 3","text":""},{"location":"notebooks/dm/Glossary/#chap-4-number-theory-and-cryptography","title":"Chap 4 Number Theory and Cryptography","text":"<ul> <li>\\(a\\ |\\ b\\) (a divides b)\uff1a\u6574\u9664</li> <li>a and b are congruent module m: m divides a - b\uff1aa\u4e0eb\u6a21m\u540c\u4f59</li> <li>prime\uff1a\u8d28\u6570</li> <li>composite\uff1a\u5408\u6570</li> <li>Mersenne prime\uff1a\u6885\u68ee\u8d28\u6570\uff0c\\(2^p - 1\\)\uff0cp\u4e3a\u8d28\u6570</li> <li>gcd(a, b)\uff1aa, b\u7684\u6700\u5927\u516c\u7ea6\u6570</li> <li>relatively prime integers\uff1a\u4e92\u8d28\u6574\u6570</li> <li>pairwise relatively prime integers\uff1a\u4e24\u4e24\u4e92\u8d28\u6574\u6570</li> <li>lcm(a, b)\uff1aa, b\u7684\u6700\u5c0f\u516c\u500d\u6570</li> <li>a mod b\uff1aa\u6a21\u9664b</li> <li>\\(a \\equiv b(\\text{mod } m)\\)\uff1aa\u4e0eb\u6a21m\u540c\u4f59</li> <li>\\(n = (a_ka_{k-1}\\dots a_1a_0)_b\\)\uff1an\u7684b\u8fdb\u5236\u8868\u793a\u6cd5</li> <li>binary representation\uff1a\u4e8c\u8fdb\u5236</li> <li>octal representation\uff1a\u516b\u8fdb\u5236</li> <li>hexadecimal representation\uff1a\u5341\u516d\u8fdb\u5236</li> <li>linear combination of a and b with integer coefficients\uff1a\u5e26\u6574\u7cfb\u6570\u7684a, b\u7684\u7ebf\u6027\u7ec4\u5408</li> <li>Bezout coefficients of a and b\uff1a\u4f7fBezout identity sa + tb = gcd(a, b)\u6210\u7acb</li> <li>inverse of a modulo m\uff1aa\u6a21m\u7684\u9006\uff0c\u6ee1\u8db3\\(a\\overline{a} \\equiv 1(\\text{mod } m)\\)</li> <li>linear congurence\uff1a\u7ebf\u6027\u540c\u4f59\uff0c\\(ax \\equiv b(\\text{mod } m)\\)</li> <li>pseudoprime to the base b\uff1a\u57fa\u5e95b\u7684\u4f2a\u8d28\u6570\uff0c\u5408\u6570n\u6ee1\u8db3\\(b^{n-1} \\equiv 1 (\\text{mod } n)\\)</li> <li>Carmichael number\uff1a\u5361\u8fc8\u514b\u5c14\u6570</li> <li>primitive root of a prime p</li> <li> <p>discrete logarithm of a to the base r modulo p</p> </li> <li> <p>division algorithm\uff1a\u9664\u6cd5\u7b97\u6cd5</p> </li> <li>b\u8fdb\u5236\u8868\u8fbe\u6269\u5c55</li> <li>fast modular exponentiation algorithm\uff1a\u5feb\u901f\u6307\u6570\u6a21\u7b97\u6cd5</li> <li>Euclidean algorithm\uff1a\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5</li> <li>Bezout's theorem\uff1a\u88f4\u8700\u5b9a\u7406</li> <li>sieve of Eratosthenes\uff1a\u57c3\u6c0f\u7b5b</li> <li>fundamental theorem of arithmetic\uff1a\u7b97\u672f\u57fa\u672c\u5b9a\u7406</li> <li>Chinese remainder theorem\uff1a\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406</li> <li>Fermat's little theorem\uff1a\u8d39\u9a6c\u5c0f\u5b9a\u7406</li> </ul>"},{"location":"notebooks/dm/Glossary/#chap-5-induction-and-recursion","title":"Chap 5 Induction and Recursion","text":"<ul> <li>sequence\uff1a\u5e8f\u5217</li> <li>geometric progression\uff1a\u51e0\u4f55\u7ea7\u6570/\u7b49\u6bd4\u6570\u5217</li> <li>arithmetic progression\uff1a\u7b97\u672f\u7ea7\u6570/\u7b49\u5dee\u6570\u5217</li> <li>the principle of mathematical induction\uff1a\u6570\u5b66\u5f52\u7eb3\u6cd5</li> <li>basis step\uff1a\u57fa\u672c\u6b65\u9aa4</li> <li>inductve step\uff1a\u9012\u5f52\u6b65\u9aa4</li> <li>strong induction\uff1a\u5f3a\u5f52\u7eb3\u6cd5</li> <li>well-ordering property\uff1a\u826f\u5e8f\u6027</li> <li>recursive definition of a function\uff1a\u51fd\u6570\u7684\u9012\u5f52\u5b9a\u4e49</li> <li>recursive definition of a set\uff1a\u96c6\u5408\u7684\u9012\u5f52\u5b9a\u4e49</li> <li>structural induction\uff1a\u7ed3\u6784\u5316\u5f52\u7eb3</li> <li>recursive algorithm\uff1a\u9012\u5f52\u7b97\u6cd5</li> <li>merge sort</li> <li>iteration\uff1a\u8fed\u4ee3</li> <li>program correctness</li> <li>loop invariant</li> <li>initial assertion</li> <li>final assertion</li> </ul>"},{"location":"notebooks/dm/Glossary/#chap-6-counting","title":"Chap 6 Counting","text":"<ul> <li>combinatorics\uff1a\u7ec4\u5408\u5b66</li> <li>enumeration\uff1a\u679a\u4e3e</li> <li>tree diagram\uff1a\u6811\u5f62\u56fe</li> <li>r-permutation\uff1ar\u6392\u5217\uff0cP(n, r)</li> <li>r-combination\uff1ar\u7ec4\u5408\uff0cC(n, r)</li> <li>binomial coefficient\\(\\left(\\begin{array}{a} n \\\\ r\\end{array}\\right)\\)\uff1a\u4e8c\u9879\u5f0f\u7cfb\u6570</li> <li>combinatorial proof\uff1a\u7ec4\u5408\u8bc1\u660e</li> <li>Pascal's triangle\uff1a\u5e15\u65af\u5361\u4e09\u89d2\u5f62</li> <li> <p>S(n, j)\uff1a(\u7b2c\u4e8c\u7c7b)\u65af\u7279\u6797\u6570</p> </li> <li> <p>product rule for counting(sets)\uff1a\u8ba1\u6570(\u6216\u96c6\u5408)\u7684\u4e58\u79ef\u6cd5\u5219</p> </li> <li>sum rule for counting(sets)\uff1a\u8ba1\u6570(\u6216\u96c6\u5408)\u7684\u548c\u6cd5\u5219</li> <li>subtraction rule or inclusion-exclusion for counting(sets)\uff1a\u8ba1\u6570(\u6216\u96c6\u5408)\u7684\u51cf\u6cd5\u6cd5\u5219\uff0c\u6216\u8005\u5bb9\u65a5\u539f\u7406</li> <li>division rule for counting(sets)\uff1a\u8ba1\u6570(\u6216\u96c6\u5408)\u7684\u9664\u6cd5\u6cd5\u5219</li> <li>the pigeonhole principle\uff1a\u9e3d\u5de2\u539f\u7406</li> <li>the generalized pigeonhole principle\uff1a\u5e7f\u4e49\u9e3d\u5de2\u539f\u7406</li> <li>Pascal's identity\uff1a\u5e15\u65af\u5361\u6052\u7b49\u5f0f</li> <li>the binomial theorem\uff1a\u4e8c\u9879\u5f0f\u5b9a\u7406</li> </ul>"},{"location":"notebooks/dm/Glossary/#chap-8-advanced-counting-techniques","title":"Chap 8 Advanced Counting Techniques","text":"<ul> <li>recurrence relation\uff1a\u9012\u63a8\u5173\u7cfb</li> <li>initial conditions for a recurrence relation\uff1a\u9012\u63a8\u5173\u7cfb\u7684\u9996\u6761\u4ef6</li> <li>dynamic programming</li> <li>linear homogenous recurrence relation with constant coefficients\uff1a\u5e38\u7cfb\u6570\u7ebf\u6027\u9f50\u6b21\u9012\u63a8\u5173\u7cfb</li> <li>characteristic roots of a linear homogenous recurrence relation with constant efficients\uff1a\u5e38\u7cfb\u6570\u7ebf\u6027\u9f50\u6b21\u9012\u63a8\u5173\u7cfb\u7684\u7279\u5f81\u6839</li> <li>linear nonhomogenous recurrence relation with constant coefficients\uff1a\u5e38\u7cfb\u6570\u7ebf\u6027\u975e\u9f50\u6b21\u9012\u63a8\u5173\u7cfb</li> <li>divide-and-conquer algorithm</li> <li>generating funcition of a sequence\uff1a\u5e8f\u5217\u7684\u751f\u6210\u51fd\u6570</li> <li>sieve of Eratosthenes\uff1a\u57c3\u6c0f\u7b5b(\u53c8\u51fa\u73b0\u4e86\u4e00\u904d)</li> <li> <p>derangement\uff1a\u9519\u6392</p> </li> <li> <p>the principle of inclusion-exclusion\uff1a\u5bb9\u65a5\u539f\u7406</p> </li> <li>\u6ee1\u5c04\u51fd\u6570\u7684\u4e2a\u6570</li> <li>\u9519\u6392\u7684\u4e2a\u6570</li> </ul>"},{"location":"notebooks/fds/2/","title":"Chap 2 Algorithm Analysis","text":":material-circle-edit-outline: \u7ea6 1963 \u4e2a\u5b57 :fontawesome-solid-code: 188 \u884c\u4ee3\u7801 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f  <p>\u7b97\u6cd5(Algorithm)\uff1a\u5b8c\u6210\u7279\u5b9a\u4efb\u52a1\u7684\u6709\u9650\u4e2a\u6307\u4ee4\u3002\u6240\u6709\u7684\u7b97\u6cd5\u90fd\u5177\u5907\u4ee5\u4e0b\u7279\u5f81\uff1a</p> <ul> <li>\u8f93\u5165(Input)\uff1a0\u4e2a\u6216\u591a\u4e2a\u8f93\u5165</li> <li>\u8f93\u51fa(Output)\uff1a\u81f3\u5c11\u67091\u4e2a\u8f93\u51fa</li> <li>\u786e\u5b9a\u6027(Definiteness)\uff1a\u6bcf\u6761\u6307\u4ee4\u90fd\u662f\u6e05\u695a\u7684</li> <li>\u6709\u9650\u6027(Finiteness)\uff1a\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u7b97\u6cd5\u5728\u7ecf\u8fc7\u6709\u9650\u6b65\u540e\u7ec8\u6b62</li> <li>\u6709\u6548\u6027(Effectiveness)\uff1a\u6bcf\u6761\u6307\u4ee4\u8db3\u591f\u7b80\u5355\u53ef\u884c\uff0c\u539f\u5219\u4e0a\u4f7f\u7528\u7eb8\u548c\u7b14\u4fbf\u80fd\u8868\u8fbe\u51fa\u6765\u3002</li> </ul> <p>\u6ce8\uff1a</p> <ul> <li>\u7a0b\u5e8f\u7531\u7f16\u7a0b\u8bed\u8a00\u4e66\u5199\uff0c\u5e76\u4e14\u4e0d\u5fc5\u662f\u6709\u9650\u6b65\uff0c\u6bd4\u5982\u64cd\u4f5c\u7cfb\u7edf\uff08\u7684\u65f6\u949f\uff09</li> <li>\u7b97\u6cd5\u80fd\u7531\u4ee5\u4e0b\u65b9\u6cd5\u63cf\u8ff0\uff1a</li> <li>\u4eba\u7c7b\u8bed\u8a00human languages</li> <li>\u6d41\u7a0b\u56feflow charts</li> <li>\u7f16\u7a0b\u8bed\u8a00programming languages</li> <li>\u4f2a\u4ee3\u7801pseudo-code</li> </ul>"},{"location":"notebooks/fds/2/#what-to-analyze","title":"What to Analyze","text":"<p>\u6211\u4eec\u9700\u8981\u5206\u6790\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6(time &amp; space complexity)</p> <p>\u5728\u5206\u6790\u590d\u6742\u5ea6\u524d\uff0c\u6211\u4eec\u4f5c\u51fa\u4ee5\u4e0b\u5047\u8bbe\uff1a 1. \u6bcf\u6761\u6307\u4ee4\u6309\u987a\u5e8f\u6267\u884c 2. \u6bcf\u6761\u6307\u4ee4\u5f88\u7b80\u5355\uff0c\u4e14\u6267\u884c\u4e00\u6761\u6307\u4ee4\u4ec5\u82b1\u8d39\u4e00\u4e2a\u65f6\u95f4\u5355\u5143 3. \u6574\u6570\u89c4\u6a21\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u6211\u4eec\u6709\u65e0\u9650\u7684\u5185\u5b58</p> <p>\u901a\u5e38\uff0c\u6211\u4eec\u5206\u6790\u4e0b\u5217\u4e24\u4e2a\u51fd\u6570\uff0c\u4ed6\u4eec\u7684\u8f93\u5165\u89c4\u6a21\u5747\u4e3a\\(N\\)\uff1a + \\(T_{avg}(N)\\)\uff1a\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 + \\(T_{worst}(N)\\)\u200b\u200b\uff1a\u6700\u5dee\u65f6\u95f4\u590d\u6742\u5ea6\u2714\ufe0f</p>"},{"location":"notebooks/fds/2/#asympotic-notation","title":"Asympotic Notation","text":"<p>^3c2e18</p>"},{"location":"notebooks/fds/2/#definition","title":"Definition","text":"<ul> <li>\ud83c\udf1f\\(T(N) = O(f(N))\\)\uff1a\u5b58\u5728\u6b63\u5e38\u6570\\(c\\)\u548c\\(n_0\\)\uff0c\\(\\forall N \\ge n_0\\)\uff0c\u90fd\u6709\\(T(N) \\le c \\cdot f(N)\\)\u200b</li> </ul> <p>\u4e00\u822c\u53d6\u6700\u5c0f\u7684\\(f(N)\\)\uff0c\u4ee3\u8868\\(T(N)\\)\u7684\u4e0a\u754c\u3002\u4fd7\u79f0\u201c\\(Big-Oh\\)\u200b\u201d \u2757 \u8bf7\u5ffd\u7565 \u5927O\u9636\u91cc\u9762\u7684\u5e38\u6570\u9879\u548c\u4f4e\u9636\u9879</p> <ul> <li> <p>\\(T(N) = \\Omega(g(N))\\) \uff1a\u5b58\u5728\u6b63\u5e38\u6570\\(c\\)\u548c\\(n_0\\)\uff0c\\(\\forall N \\ge n_0\\)\uff0c\u90fd\u6709\\(T(N) \\ge c \\cdot g(N)\\)\u200b</p> <p>\u4e00\u822c\u53d6\u6700\u5927\u7684\\(g(N)\\)\uff0c\u4ee3\u8868\\(T(N)\\)\u7684\u4e0b\u754c</p> </li> <li> <p>\\(T(N) = \\Theta(h(N))\\)\uff1a\u5f53\u4e14\u4ec5\u5f53\\(T(N) = O(h(N))\\) \u4e14 \\(T(N) = \\Omega(h(N))\\)</p> </li> <li> <p>\\(T(N) = o(p(N))\\)\uff1a\u5f53\\(T(N) = O(p(N))\\) \u4e14 \\(T(N) \\ne \\Omega(p(N))\\)\u200b</p> </li> </ul>"},{"location":"notebooks/fds/2/#rules","title":"Rules","text":"<ol> <li>\u5982\u679c\\(T_1(N) = O(f(N))\\) \u4e14 \\(T_2(N) = O(g(N))\\) \uff0c\u90a3\u4e48\uff1a<ul> <li>\\(T_1(N) +T_2(N) = max(O(f(N)), O(g(N)))\\)</li> <li>\\(T_1(N) \\cdot T_2(N) = O(f(N) \\cdot g(N))\\)</li> </ul> </li> <li>\u5982\u679c\\(T(N)\\)\u662f\\(k\\)\u6b21\u591a\u9879\u5f0f\uff0c\u90a3\u4e48\\(T(N) = \\Theta(N^k)\\)</li> <li>\u5bf9\u4e8e\u4efb\u610f\u5e38\u6570\\(k\\)\uff0c\\(log^kN = O(N)\\)\u200b\u3002\u8fd9\u8bf4\u660e==\u5bf9\u6570\u589e\u957f\u901f\u5ea6\u975e\u5e38\u6162==</li> </ol> <p>\u6ce8\uff1a\u5982\u679c\u4f7f\u7528\u6e10\u8fdb\u7b26\u53f7\u6bd4\u8f83\u4e24\u4e2a\u7a0b\u5e8f\u7684\u590d\u6742\u5ea6\uff0c\u786e\u4fdd\\(N\\)\u200b\u200b\u8db3\u591f\u5927</p> <p>\u589e\u957f\u901f\u5ea6\u56fe </p> <p></p> <p>Example</p> <p></p> <p>\u6ce8: 1. \u6ce8\u610f\u5185\u90e8\u5faa\u73af\u7684\u6307\u4ee4\u6267\u884c\u6b21\u6570 2. \u5f53\\(rows \\text{ }\\gg \\text{ }cols\\)\u65f6\uff0c\u53ef\u8003\u8651\u884c\u5217\u8f6c\u7f6e  3. \\(T(rows, cols) = \\Theta(rows \\cdot cols)\\)</p>"},{"location":"notebooks/fds/2/#general-rules","title":"General Rules","text":"<ul> <li>for\u5faa\u73af(FOR LOOPS)\uff1afor\u5faa\u73af\u7684\u8fd0\u884c\u65f6\u95f4\u4e0d\u8d85\u8fc7\u201c\u5faa\u73af\u4f53\u5185\u90e8\u8bed\u53e5 \\(\\times\\) \u8fed\u4ee3\u6b21\u6570\u201d</li> <li>\u5d4c\u5957for\u5faa\u73af(NESTED FOR LOOPS)\uff1a\u5728\u4e00\u7ec4\u5d4c\u5957\u5faa\u73af\u5185\u7684\u4e00\u6761\u8bed\u53e5\u7684\u6267\u884c\u65f6\u95f4\u4e3a \u201c\u8be5\u8bed\u53e5 \\(\\times\\) \u6240\u6709\u7684for\u5faa\u73af\u89c4\u6a21\u7684\u4e58\u79ef\u201d</li> <li>\u8fde\u7eed\u7684\u8bed\u53e5(CONSECUTIVE STATEMENTS)\uff1a\u7b80\u5355\u5730\u76f8\u52a0\u8d77\u6765\uff08\u8fd9\u610f\u5473\u7740\u5176\u4e2d\u8fd0\u884c\u6b21\u6570\u6700\u591a\u7684\u4e00\u6761\u8bed\u53e5\u6700\u91cd\u8981\uff09</li> <li> <p>\u6761\u4ef6\u8bed\u53e5(IF / ELSE)\uff1a\u5bf9\u4e8e\u4e0b\u9762\u4ee3\u7801\u5757</p> <pre><code>if (condition) S1;\nelse S2\n</code></pre> <p>\u5b83\u7684\u8fd0\u884c\u65f6\u95f4\u4e0d\u4f1a\u8d85\u8fc7\u201c\u6d4b\u8bd5\u6761\u4ef6 + S1 \u548c S2 \u4e2d\u8fd0\u884c\u65f6\u95f4\u7684\u6700\u957f\u8005\u201d</p> </li> <li> <p>\u2757RECURSION </p> <p>\u7531\u6b64\u53ef\u89c1\uff0c\\(Fib(N)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7684\u5413\u4eba(\u6307\u6570\u9636)</p> </li> </ul> <p>\u8865\u5145\uff1a  + \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N)\\)\uff0c\u9012\u5f52\u7684\u5806\u6808\u8c03\u7528\uff08\u4e32\u884c\u7a0b\u5e8f\uff09\u3002\u6bd4\u5982\u8981\u7b97\\(Fib(N)\\)\uff0c\u4e00\u5b9a\u662f\u5148\u7b97\u5b8c\\(Fib(N - 1)\\)\u518d\u7b97\\(Fib(N - 2)\\)\uff0c\u4e0d\u4f1a\u540c\u65f6\u8ba1\u7b97\u4e24\u8005\uff0c\u6240\u4ee5\u662f\u7ebf\u6027\u590d\u6742\u5ea6 + \u51c6\u786e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T = \\Theta((\\dfrac{1 + \\sqrt 5}{2})^n)\\)\uff0c\u8bc1\u660e\u8fc7\u7a0b\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0</p>"},{"location":"notebooks/fds/2/#compare-the-algorithms","title":"Compare the Algorithms","text":"<p>\u4e0b\u9762\u6709\u56db\u79cd\u6c42\u89e3\u6700\u5927\u8fde\u7eed\u5b50\u5217\u548c\u7684\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9010\u4e00\u9012\u51cf\uff08\u4e0d\u5305\u62ec\u8bfb\u53d6\u6570\u636e\u7684\u65f6\u95f4\uff01\uff09</p> <p>Algorithm 1 (\\(O(N^3)\\)) <pre><code>int MaxSubsequenceSum(const int A[ ], int N)\n{\nint ThisSum, MaxSum, i, j, k;\nMaxSum = 0;\nfor (i = 0; i &lt; N; i++)\nfor (j = i; j &lt; N; j++)\n{\nThisSum = 0;\nfor (k = i; k &lt;= j; k++)// \u8fd9\u91cc\u6d6a\u8d39\u4e86\u65f6\u95f4\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u4ecei\u5f00\u59cb\nThisSum += A[k];\nif (ThisSum &gt; MaxSum)\nMaxSum = ThisSum;\n}\nreturn MaxSum;\n}\n</code></pre></p> <p>Algorithm 2 (\\(O(N^2)\\)) <pre><code>int MaxSubsequenceSum(const int A[ ], int N)\n{\nint ThisSum, MaxSum, i, j, k;\nMaxSum = 0;\nfor (i = 0; i &lt; N; i++)\n{\nThisSum = 0;\nfor (j = i; j &lt; N; j++)\n{\nThisSum += A[j];\nif (ThisSum &gt; MaxSum)\nMaxSum = ThisSum;\n}\n}\nreturn MaxSum;\n}\n</code></pre></p> <p>Algorithm 3(\\(O(NlogN)\\))</p> <p>\u91c7\u7528==\u5206\u6cbb(divide-and-conquer)\u7b97\u6cd5==\uff0c\u53ea\u9700\u9012\u5f52\u6bd4\u8f83\u5de6\u534a\u8fb9\u5b50\u5217\u3001\u53f3\u534a\u8fb9\u5b50\u5217\u548c\u4e2d\u95f4\u7684\u5b50\u5217\uff0c\u9009\u62e9\u5176\u4e2d\u6700\u5927\u7684\u4f5c\u4e3a\u6700\u5927\u503c\u3002\u4e0b\u9762\u653e\u4e0a\u793a\u610f\u56fe\uff0c\u770b\u8d77\u6765\u66f4\u52a0\u76f4\u89c2\ud83d\udc47</p> <p></p> <pre><code>static int MaxSubSum(const int A[ ], int Left, int Right)\n{\nint MaxLeftSum, MaxRightSum;\nint MaxLeftBorderSum, MaxRightBorderSum;\nint LeftBorderSum, RightBorderSum;\nint Center, i;\n// Base Case\nif (Left == Right)\nif (A[Left] &gt; 0)\nreturn A[Left];\nelse\nreturn 0;\n// \u5904\u7406\u5de6\u53f3\u4e24\u534a\nCenter = (Left + Right) / 2;\nMaxLeftSum = MaxSubSum(A, Left, Center);\nMaxRightSum = MaxSubSum(A, Center + 1, Right);\n// \u5904\u7406\u4e2d\u95f4\u90e8\u5206\n// \u4ece\u4e2d\u95f4\u5f00\u59cb\u5de6\u534a\u90e8\u5206\nMaxLeftBorderSum = 0;\nLeftBorderSum = 0;\nfor (i = Center; i &gt;= Left; i--)\n{\nLeftBorderSum += A[i];\nif (LeftBorderSum &gt; MaxLeftBorderSum)\nMaxLeftBorderSum = LeftBorderSum; }\n// \u4ece\u4e2d\u95f4\u5f00\u59cb\u53f3\u534a\u90e8\u5206\nMaxRightBorderSum = 0;\nRightBorderSum = 0;\nfor (i = Center + 1; i &lt;= Right; i++)\n{\nRightBorderSum += A[i];\nif (RightBorderSum &gt; MaxRightBorderSum)\nMaxRightBorderSum = RightBorderSum; }\nreturn Max3(MaxLeftSum, MaxRightSum, MaxLeftBorderSum + MaxRightBorderSum); // \u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u6bd4\u8f833\u4e2a\u6570\u7684\u5927\u5c0f\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\uff1a $$ \\text{Base case:  } T(1) = 1 \\quad T(N) = 2T(N/2) + O(N) $$ \\(\\begin{align}\\therefore T(N) = &amp; 2T(N/2) + cN\\\\ = &amp; 2[2T(N/2^2) + cN/2] + cN \\\\ = &amp; 2^kO(1) + ckN \\quad \\text{where } N/2^k = 1\\\\ = &amp; O(NlogN)\\end{align}\\)</p> <p>Algorithm 4 (\\(O(N)\\))</p> <p>\u91c7\u7528\u5728\u7ebf(on-line)\u7b97\u6cd5\uff0c\u5b83\u80fd\u5728\u4efb\u4f55\u65f6\u95f4\u70b9\u4e0a\u8ba1\u7b97\u5bf9\u4e8e\u5df2\u7ecf\u8bfb\u5165\u7684\u6570\u636e\u7684\u89e3</p> <p>^9fd2b7 <pre><code>int MaxSubsequenceSum(const int A[ ], int N)\n{\nint ThisSum, MaxSum, j;\nThisSum = MaxSum = 0;\nfor (j = 0; j &lt; N; j++)\n{\nThisSum += A[j];\nif (ThisSum &gt;= MaxSum)\nMaxSum = ThisSum;\nelse if (ThisSum &lt; 0)\nThisSum = 0;\n}\nreturn MaxSum;\n}\n</code></pre></p> <p>\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u8f83\uff1a</p> <p></p>"},{"location":"notebooks/fds/2/#logarithm-in-the-running-time","title":"Logarithm in the Running Time","text":"<p>\u4ee5\u4e0b\u7ed9\u51fa\u7684\u4e09\u4e2a\u4f8b\u5b50\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a\\(O(log N)\\)</p>"},{"location":"notebooks/fds/2/#binary-search","title":"Binary Search","text":"<p>\u4f7f\u7528\u524d\u63d0\u4e3a\u5728\u4e00\u7ec4\u6709\u5e8f\u7684\u5217\u8868\u4e2d\u67e5\u627e\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u800c\u6613\u89c1</p> <p>\u56fe\u793a\uff1a </p> <p>\u4ee3\u7801\uff1a <pre><code>int BinarySearch(const ElementType A[ ], ElementType X, int N)\n{\nint Low, Mid, High;\nLow = 0;\nHigh = N - 1;\nwhile (Low &lt;= High)\n{\nMid = (Low + High) / 2;\nif (A[Mid] &lt; X)\nLow = Mid + 1;\nelse if (A[Mid] &gt; X)\nHigh = Mid - 1;\nelse\nreturn Mid;\n}\nreturn NotFound;  // NotFound\u88ab\u5b9a\u4e49\u4e3a-1\n}\n</code></pre></p>"},{"location":"notebooks/fds/2/#euclids-algorithm","title":"Euclid\u2019s Algorithm","text":"<p>\u53c8\u79f0==\u8f97\u8f6c\u76f8\u9664\u6cd5==\uff0c\u7528\u4e8e\u6c42\u89e3\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570(greatest common divisor, gcd)</p> <p>\u5206\u6790\uff1a\u8981\u6c42\u89e3\u4e24\u4e2a\u6570\\(M, N(\\text{assume that } M \\ge N)\\)\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u5148\u7b97\u51fa\u4e24\u8005\u76f8\u9664\u5f97\u5230\u7684\u4f59\u6570\uff0c\u7136\u540e\u7528\u5c0f\u7684\u6570\\(N\\)\u9664\u4ee5\u4f59\u6570\u5f97\u5230\u65b0\u7684\u4f59\u6570\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5f53\u8f83\u5c0f\u6570\u4e3a0\u65f6\u7ed3\u675f\u3002\u6b64\u65f6\u5269\u4e0b\u7684\u975e0\u6570\uff08\u5373\u8f83\u5927\u6570\uff09\u5373\u4e3a\u6700\u5927\u516c\u7ea6\u6570\u3002</p> <p>\u8981\u8bf4\u660e\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(logN)\\)\uff0c\u5148\u8bc1\u660e\u4e0b\u9762\u8fd9\u4e2a\u5b9a\u7406\uff1a $$ \\text{If }M &gt; N\\text{ ,then }M\\text{ mod }N &lt; M / 2 $$</p> <p>\u63d0\u793a\uff1a\u5206\\(N \\le M/2\\) \u548c \\(N &gt; M/2\\)\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u6613\u8bc1\uff0c\u6545\u7565\u53bb\u8bc1\u660e\u8fc7\u7a0b</p> <p>\u6709\u4e86\u8fd9\u4e2a\u5b9a\u7406\u540e\uff0c\u81ea\u7136\u800c\u7136\u5c31\u80fd\u60f3\u5230\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5728\\(O(logN)\\)\u5de6\u53f3\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b9e\u9645\u7684\u590d\u6742\u5ea6\u8fd8\u7565\u5fae\u4f4e\u4e00\u4e9b\u3002</p> <p>\u4ee3\u7801\uff1a <pre><code>unsigned int Gcd(unsigned int M, unsigned int N)\n{\n// \u8fd9\u91cc\u5df2\u7ecf\u5047\u8bbe M &gt; N\u4e86\nunsigned int Rem;\nwhile (N &gt; 0)\n{\nRem = M % N;\nM = N;\nN = Rem;\n}\nreturn M;\n}\n</code></pre></p>"},{"location":"notebooks/fds/2/#exponentation","title":"Exponentation","text":"<p>\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u770b\u5b8c\u540e\u4fbf\u7406\u89e3\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u4ec0\u4e48\u4e3a\\(O(logN)\\) <pre><code>long Pow(long, X, unsigned int N)\n{\nif (N == 0)\nreturn 1;\nif (N == 1)  // 5,6\u4e24\u884c\u53ef\u4ee5\u4e0d\u5199\uff0c\u56e0\u4e3a\u7b2c10\u884c\u548c3,4\u884c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e00\u60c5\u51b5\nreturn X;\nif (IsEven(N))  // int IsEven(int N){return N % 2 == 0}\nreturn Pow(X * X, N / 2);\nelse\nreturn Pow(X * X, N / 2) * X;\n}\n// \u6700\u540e\u6ce8\u610f\u9012\u5f52\u7a0b\u5e8f\u7684\u4e66\u5199\u95ee\u9898\uff0c\u9519\u8bef\u7684\u4e66\u5199\u4f1a\u5f71\u54cd\u6548\u7387\uff0c\u751a\u81f3\u5bfc\u81f4\u6b7b\u5faa\u73af\uff08\u89c1\u4e66\u4e0a\u53cd\u4f8b\uff09\n</code></pre></p>"},{"location":"notebooks/fds/2/#cheking-your-analysis","title":"Cheking Your Analysis","text":"<p>\u5982\u679c\u7a0b\u5e8f\u8fc7\u4e8e\u590d\u6742\uff0c\u65e0\u6cd5\u76f4\u63a5\u770b\u51fa\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u8fd9\u79cd\u60c5\u51b5\u5e38\u5e38\u53d1\u751f\uff09\uff0c\u90a3\u4e48\u4e0b\u9762\u7684\u65b9\u6cd5\u4f1a\u5e2e\u5230\u6211\u4eec\uff1a $$ \\text{When }T(N) = O(f(N)) \\text{ , check if} \\ \\lim\\limits _{N \\rightarrow \\infty} \\frac{T(N)}{f(N)} \\approx \\text{ Constant} $$ \u5982\u679c\u662f\u5e38\u6570\u7684\u8bdd\uff0c\u8bf4\u660e\u6211\u4eec\u4f30\u8ba1\u7684\u65f6\u95f4\u590d\u6742\u5ea6\\(O(f(N))\\)\u57fa\u672c\u6b63\u786e</p>"},{"location":"notebooks/fds/2/#problems","title":"Problems","text":"<p>2.3 The recurrent equations for the time complexities of programs P1 and P2 are:</p> <ul> <li>\\(P1\\): \\(T(1)=1,T(N)=T(N/3)+1\\)</li> <li>\\(P2\\): \\(T(1)=1,T(N)=3T(N/3)+1\\)</li> </ul> <p>Then the correct conclusion about their time complexities is:</p> <ul> <li>\\(P1\\)\uff1a\\(O(logN)\\)\uff0c\u76f8\u5f53\u4e8e\u89e3\u51b3\u4e00\u4e2a\u89c4\u6a21\u4e3a\\(N\\)\u7684\u95ee\u9898\u65f6\uff0c\u53ea\u53d6\u5176\u4e2d\u7684\u4e09\u5206\u4e4b\u4e00\uff0c\u7c7b\u4f3c\u4e8c\u5206\u6cd5</li> <li>\\(P2\\)\uff1a\\(O(N)\\)\uff0c\u6211\u7684\u7406\u89e3\u662f\u76f8\u5f53\u4e8e\u628a\u95ee\u9898\u5206\u6210\u4e09\u4efd\uff0c\u4f46\u90fd\u8981\u505a\uff0c\u800c\u4e14\u8fd8\u8981\u989d\u5916\u505a\u4e00\u4e2a\u4efb\u52a1\uff0c\u6240\u4ee5\u662f\u7ebf\u6027\u589e\u957f\u5ea6\u3002</li> </ul> <p>\u8865\u5145\uff1a\u5bf9\u4e8e\\(T(N) = kT(N/k) + C\\)</p> <ul> <li>\u5982\u679c\\(C\\)\u4e3a\u5e38\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N)\\)</li> <li>\u5982\u679c\\(C = N\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(NlogN)\\)</li> </ul> <p>2.4 For the following piece of code</p> <pre><code> if ( A &gt; B ){     for ( i=0; i&lt;N*2; i++ )         for ( j=N*N; j&gt;i; j-- )             C += A; }\nelse {     for ( i=0; i&lt;N*N/100; i++ )         for ( j=N; j&gt;i; j-- ) for ( k=0; k&lt;N*3; k++)\nC += B; } </code></pre> <p>the lowest upper bound of the time complexity is \\(O(N^3)\\).</p> <p>\u8fd9\u662f\u5bf9\u7684\u3002\u5982\u679c\u5206\u6790\u6709\u8bef\u7684\u8bdd\uff0c\u5e94\u8be5\u6ca1\u6709\u7406\u89e3\u7b2c3\u884c\u7684trick\uff0c\u5c24\u5176\u662f<code>j &gt; i</code>\u90a3\u90e8\u5206\u3002\u4e0d\u96be\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6700\u5c0f\u4e0a\u754c\u4e3a\\(O(N^3)\\)(\u6267\u884c\u7b2c\u4e00\u4e2a<code>if</code>\u6761\u4ef6)</p> <p>7-1 Balloon Popping</p> <p>Balloon popping is a fun game for kids. Now\u00a0n\u00a0balloons are positioned in a line. The goal of the game is very simple: to pop as many balloons as possible. Here we add a special rule to this game -- that is, you can only make ONE jump. Assume that a smart baby covers his/her body by thorns\uff08\u523a\uff09, jumps to some position and lies down (as shown by the figures below), so that the balloons will be popped as soon as they are touched by any part of the baby's body. Now it is your job to tell the baby at which position he/she must jump to pop the most number of balloons.</p> <p>Input Specification:</p> <p>Each input file contains one test case. For each case, two positive integers are given in the first line:\u00a0n\u00a0(\u2264105), the number of balloons in a line, and\u00a0h\u00a0(\u2264103), the height of the baby with his/her arms stretched up. Then\u00a0n\u00a0integers are given in the next line, each corresponds to the coordinate of a balloon on the axis of the line. It is guaranteed that the coordinates are given in ascending order, and are all in the range\u00a0[\u2212106,106].</p> <p>Output Specification:</p> <p>Output in a line the coordinate at which the baby shall jump, so that if the baby jumps at this position and then lie down, the maximum number of the balloons can be popped beneath his/her body. Then also print the maximum number of balloons that can be popped. If the coordinate is not unique, output the smallest one.</p> <p>The numbers must be separated by 1 space, and there must be no extra space at the beginning or the end of the line.</p> <p>Sample Input:</p> <pre><code>11 120\n-120 -40 0 80 122 140 160 220 240 260 300\n</code></pre> <p>Sample Output:</p> <pre><code>120 5\n</code></pre> <p>Note:\u00a0jumping at any position from 120 to 140, or from 240 to 260 can pop 5 balloons, hence 120 is printed as the smallest one.</p> <p>my code: <pre><code>#include &lt;stdio.h&gt;\n#define SIZE 100001\nint main()\n{\nint n, h;                  // \u5750\u6807\u4e2a\u6570\uff0c\u5c0f\u5b69\u9ad8\u5ea6\nint coordinates[SIZE];     // \u5750\u6807\nint pos, far;              // \u6700\u4f73\u4f4d\u7f6e\uff0c\u6700\u8fdc\u4f4d\u7f6e\nint cnt, max = 0;          // \u5f53\u524d\u4e2a\u6570\uff0c\u6700\u5927\u4e2a\u6570\nint i, j, k;         // \u8f93\u5165\nscanf(\"%d%d\", &amp;n, &amp;h);\nfor (int k = 0; k &lt; n; k++)\nscanf(\"%d\", &amp;coordinates[k]);\n// \u627e\u6700\u4f73\u4f4d\u7f6e\nfor (i = 0; i &lt; n - max; i++)  // n - max \u53ef\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u67e5\u627e\n{\ncnt = 1;\n// \u6309\u4e00\u4e2a\u4e2a\u5177\u4f53\u5750\u6807\u627e\u66f4\u52a0\u9ad8\u6548\nfor (j = i + 1; coordinates[j] - coordinates[i] &lt;= h; j++)\n{\ncnt++;\n}\n// \u627e\u5230\u5f53\u524d\u6700\u4f73\u4f4d\u7f6e\uff0c\u8bb0\u5f55\u4e0b\u6765\nif (cnt &gt; max)\n{\nmax = cnt;\nfar = coordinates[j - 1];\n// printf(\"%d %d\\n\", temp_pos, max);\n}  }\npos = far - h;  // \u6c42\u51fa\u6700\u4f73\u4f4d\u7f6e\nprintf(\"%d %d\", pos, max);\nreturn 0;\n}\n</code></pre></p>"},{"location":"notebooks/fds/3/","title":"Chap 3 Lists, Stacks, and Queues","text":":material-circle-edit-outline: \u7ea6 2402 \u4e2a\u5b57 :fontawesome-solid-code: 814 \u884c\u4ee3\u7801 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 18 \u5206\u949f"},{"location":"notebooks/fds/3/#abstract-data-type-adt","title":"Abstract Data Type (ADT)","text":"<p>\u6570\u636e\u7c7b\u578b(Data Type) = {\u5bf9\u8c61(Objects)} \\(\\cup\\) {\u8fd0\u7b97(Operations)}</p> <p>\u62bd\u8c61\u6570\u636e\u7c7b\u578b(ADT) \u662f\u5c06\u5bf9\u8c61\u548c\u8fd0\u7b97\u7684\u89c4\u8303(\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u7684\u51fd\u6570)\u548c\u5176\u8868\u793a\u548c\u5b9e\u73b0(\u4e2a\u4eba\u7406\u89e3\u4e3a\u63a5\u53e3(Interface)\uff0c\u5bf9\u51fd\u6570\u7684\u8c03\u7528\u7b49\u7b49)\u5206\u79bb\u5f00\u6765\u7684\u4e00\u79cd\u6570\u636e\u7c7b\u578b</p>"},{"location":"notebooks/fds/3/#the-list-adt","title":"The List ADT","text":""},{"location":"notebooks/fds/3/#simple-array-implementation-of-lists","title":"Simple Array Implementation of Lists","text":"<ul> <li>Objects: {\\(item_0, item_1, \\dots, item_{N - 1}\\)}</li> <li>Operations: <ul> <li><code>Finding_the_length</code>\uff1a\u5373\u6c42\\(N\\)</li> <li><code>Printing</code>\uff1a\u6253\u5370\u5217\u8868\u6240\u6709\u5143\u7d20</li> <li><code>Making_an_empty</code>\uff1a\u5efa\u7acb\u7a7a\u5217\u8868</li> <li><code>Finding</code>\uff1a\u67e5\u627e\u7b2c\\(k\\)\u9879\uff0c\\(0 \\le k &lt; N\\)</li> <li><code>Inserting</code>\uff1a\u5728\u7b2c\\(k\\)\u9879\u540e\u63d2\u5165\u65b0\u7684\u9879\uff0c\\(k\\)\u7684\u8303\u56f4\u540c\u4e0a</li> <li><code>Deleting</code>\uff1a\u5220\u9664\u4e00\u9879</li> <li><code>Finding_next</code>\uff1a\u67e5\u627e\u4e0b\u4e00\u4e2a\u9879</li> <li><code>Finding_previous</code>\uff1a\u67e5\u627e\u4e0a\u4e00\u4e2a\u9879\uff0c\u7528\u4e8e\u5220\u9664\u5217\u8868\u9996\u9879</li> </ul> </li> </ul> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a + \u67e5\u627e\uff1a\\(O(1)\\) + \u63d2\u5165&amp;\u5220\u9664\uff1a\\(O(N)\\) \u2014\u2014 \u201d\u7275\u4e00\u53d1\u800c\u52a8\u5168\u8eab\u201c</p> <p>\u56e0\u6b64\uff0c\u5bf9\u4e8e\u9891\u7e41\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u7684\u5217\u8868\uff0c\u6211\u4eec\u9700\u8981\u6362\u4e00\u79cd\u5b9e\u73b0\u5f62\u5f0f\u2014\u2014\u94fe\u8868(Linked List)</p>"},{"location":"notebooks/fds/3/#linked-lists","title":"Linked Lists","text":"<p>\u2757\u6ce8\u610f\uff1a + \u94fe\u8868\u76f8\u6bd4\u6570\u7ec4\u5360\u7528\u7a7a\u95f4\u66f4\u591a\uff08\u5b58\u50a8\u6307\u9488\uff09\uff0c\u4f46\u5b83\u4e0d\u8981\u6c42\u7a7a\u95f4\u8fde\u7eed + \u867d\u7136\u67e5\u627e\u65f6\u95f4\u6162(\\(O(N)\\))\uff0c\u4f46\u63d2\u5165\u548c\u5220\u9664\u5f88\u5feb(\\(O(1)\\))\uff0c\u901a\u8fc7\u4e0b\u9762\u56fe\u793a\u53ef\u4ee5\u8f83\u4e3a\u76f4\u89c2\u5730\u611f\u53d7\u5230 + \u6700\u540e\u4e00\u9879\u7684\u6307\u9488\u6307\u5411<code>NULL</code> + \u5bf9\u4e8e==\u5934\u6307\u9488==\uff0c\u6211\u4eec\u4e0d\u5c06\u7b2c\u4e00\u9879\u4f5c\u4e3a\u5934\u6307\u9488\uff0c\u800c\u662f\u91c7\u7528\u4e00\u4e2a\u865a\u62df\u8282\u70b9(dummy node)\u3002\u8fd9\u4e2a\u7ed3\u70b9\u6570\u636e\u57df\u4e3a\u7a7a\uff0c\u6307\u9488\u6307\u5411\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u9879\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u6709\uff1a     + \u5220\u9664\u9996\u9879\u65f6\u65e0\u9700\u4f7f\u7528<code>Finding_previous()</code>\u4e86     + \\(\\dots\\)</p> <p>\u6ce8\uff1a\u9664\u975e\u4f5c\u7279\u6b8a\u8bf4\u660e\uff0cfds\u7b14\u8bb0\u4e2d\u6240\u6709\u94fe\u8868\u7684\u5b9e\u73b0\u5e94\u8be5\u90fd\u4ee5dummy node\u4e3a\u5934\u6307\u9488</p> <p>\u56fe\u793a\uff1a </p> <p></p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>// \u94fe\u8868\u7684\u7c7b\u578b\u58f0\u660e\uff0c\u4e00\u822c\u653e\u5728.h\u6587\u4ef6\u4e2d\n#idndef _List_H\nstruct Node;\ntypedef struct Node *PtrToNode;\ntypedef PtrToNode List;\ntypedef PtrToNode Position;\nList MakeEmpty(List L);\nint IsEmpty(List L);\nint IsLast(Position P, List L);\nPosition Find(ElementType X, List L);\nvoid Delete(ElementType X, List L, Position P);\nPosition FindPrevious(ElementType X, List L);\nvoid Insert(ElementType X, List L, Position P);\nvoid DeleteList(List L);\nPosition Header(List L);\nPosition First(List L);\nPosition Advance(Position P);\nElementType Retrieve(Position P);\n#endif\n</code></pre></p> <pre><code>// \u94fe\u8868\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4e00\u822c\u653e\u5728.c\u6587\u4ef6\u4e2d\n// \u8282\u70b9\nstruct Node\n{\nElementType Element;\nPosition Next;\n};\n// \u68c0\u67e5\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\nint IsEmpty(List L)\n{\nreturn L-&gt;Next == NULL;\n}\n// \u68c0\u67e5\u8282\u70b9P\u662f\u5426\u4e3a\u6700\u540e\u4e00\u9879\n// \u6ce8\u610f\u5230\u94fe\u8868L\u6ca1\u6709\u7528\u4e0a\uff0c\u653e\u5728\u8fd9\u91cc\u4ee5\u9632\u7279\u6b8a\u60c5\u51b5\u7684\u5904\u7406\nint IsLast(Position P, List L)  {\nreturn P-&gt;Next == NULL;\n}\n// \u67e5\u627e\u6570\u636eX\u5728\u94fe\u8868L\u4e2d\u7684\u4f4d\u7f6e\nPosition Find(ElementType X, List L)\n{\nPosition P;\nP = L-&gt;Next;\nwhile (P != NULL &amp;&amp; P-&gt;Element != X)\nP = P-&gt;Next;\nreturn P;\n}\n// \u5220\u9664\u94fe\u8868L\u4e2d\u7684\u6570\u636eX\nvoid Delete(ElementType X, List L)\n{\nPosition P, TmpCell;\nP = FindPrevious(X, L);\nif (!IsLast(P, L))\n{\nTmpCell = P-&gt;Next;\nP-&gt;Next = TmpCell-&gt;Next;\nFree(TmpCell); // \u5220\u9664\u8282\u70b9\u65f6\u4e0d\u8981\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\uff01\uff01\uff01\n}\n}\n// \u67e5\u627e\u524d\u4e00\u9879\nPosition FindPrevious(ElementType X, List L)\n{\nPosition P;\nP = L;\nwhile (P-&gt;Next != NULL &amp;&amp; P-&gt;Next-&gt;Element != X)\nP = P-&gt;Next;\nreturn P;\n}\n// \u5728\u4f4d\u7f6eP\u540e\u63d2\u5165\u65b0\u6570\u636eX\nvoid Insert(ElementType X, List L, Position P)\n{\nPosition TmpCell;\nTmpCell = (PtrToNode)malloc(sizeof(struct Node)); // \u8bb0\u4f4f\u8bed\u6cd5\nif (TmpCell == NULL)\nFatalError(\"Out of Space!!!\"); // \u8fd9\u91cc\u7528\u5230\u5904\u7406\u9519\u8bef\u4fe1\u606f\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\nTmpCell-&gt;Element = X;\nTmpCell-&gt;Next = P-&gt;Next;\nP-&gt;Next = TmpCell;\n}\n</code></pre>"},{"location":"notebooks/fds/3/#common-errors","title":"Common Errors","text":"<ol> <li>\u5185\u5b58\u8bbf\u95ee\u9519\u8bef(Memory Access Violation) \u6216\u6bb5\u9519\u8bef(Segmentation Violation)\u2014\u2014\u53ef\u80fd\u56e0\u4e3a==\u9519\u8bef\u7684\u521d\u59cb\u5316==\uff0c\u6216\u8005==\u95f4\u63a5\u5f15\u7528\u6307\u9488==\uff08\u8be5\u6307\u9488\u5df2\u88ab<code>free()</code>\u4e86\uff09</li> <li>\u5224\u65ad\u4f55\u65f6\u4f7f\u7528\u6216\u4e0d\u7528<code>malloc()</code><ul> <li>\u5982\u679c\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u4e4b\u524d\u672a\u58f0\u660e\u7684\u6307\u5411\u7ed3\u6784\u7684\u6307\u9488\uff0c\u9700\u8981\u7528\u5230<code>malloc()</code></li> <li>\u5982\u679c\u60f3\u8981\u7528\u6307\u9488\u904d\u5386\u4e00\u904d\u94fe\u8868\uff0c\u5219\u65e0\u9700\u4f7f\u7528<code>malloc()</code> <p>\u6ce8\u610f\uff1a<code>malloc()</code>\u662f\u7ed9\u6307\u9488\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u800c\u4e0d\u662f\u7ed3\u6784</p> </li> </ul> </li> <li>\u8bb0\u5f97\u4f7f\u7528<code>free()</code>\uff0c\u5c24\u5176\u662f\u5220\u9664\u8282\u70b9\u65f6\uff0c\u5426\u5219\u4f1a\u5e26\u6765\u4e25\u91cd\u7684\u95ee\u9898</li> </ol>"},{"location":"notebooks/fds/3/#double-linked-circular-lists","title":"Double Linked Circular Lists","text":"<p>\u4f5c\u7528\uff1a\u7b80\u5316\u5220\u9664\u8282\u70b9\u7684\u8fc7\u7a0b</p>"},{"location":"notebooks/fds/3/#applications","title":"Applications","text":""},{"location":"notebooks/fds/3/#the-polynomial-adt","title":"The Polynomial ADT","text":"<ul> <li>Objects\uff1a\\(P(x) = a_1x^{e_1} + \\dots + a_nx^{e_n}\\)\uff0c\u6709\u4e00\u7ec4\u6709\u5e8f\u5bf9\\(&lt;e_i, a_i&gt;\\)\uff0c\u5176\u4e2d\\(a_i\\)\u79f0\u4e3a\u7cfb\u6570(coefficient)\uff1b\\(e_i\\)\u79f0\u4e3a\u6307\u6570(exponent)\uff0c\u5b83\u662f\u975e\u8d1f\u6570</li> <li>Operations\uff1a<ul> <li><code>Finding_degree</code>\uff1a\u5224\u65ad\u591a\u9879\u5f0f\u7684\u6700\u9ad8\u6b21</li> <li><code>Addition</code></li> <li><code>Subtraction</code></li> <li><code>Multiplication</code></li> <li><code>Differentiation</code>\uff1a\u6c42\u5bfc</li> </ul> </li> </ul> <p>\u8868\u793a\u5f62\u5f0f\uff1a</p> <pre><code>// 1. \u6570\u7ec4\u2014\u2014\u7f16\u5199\u52a0\u6cd5\u3001\u4e58\u6cd5\u7b49\u51fd\u6570\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u4f1a\u6709\u5f88\u5927\u7684\u7a7a\u95f4\u6d6a\u8d39\ntypedef struct\n{\nint CoeffArray[MaxDegree + 1];\nint HighPower;\n} *Polynomial;\n// 2. \u94fe\u8868\u2014\u2014\u8282\u7701\u7a7a\u95f4\uff0c\u4f46\u7f16\u5199\u52a0\u6cd5\u3001\u4e58\u6cd5\u548c\u51fd\u6570\u8f83\u4e3a\u56f0\u96be\ntypedef struct Node *PtrToNode;\nstruct Node\n{\nint Coefficient;\nint Exponent;\nPtrToNode Next;\n};\ntypedef PtrToNode Polynomial;  // \u8282\u70b9\u6839\u636e\u6307\u6570\u5927\u5c0f\u6392\u5e8f\u597d\n// \u4e0b\u9762\u7528\u6570\u7ec4\u5f62\u5f0f\u7f16\u5199\u52a0\u6cd5\u548c\u4e58\u6cd5\u51fd\u6570\n// Addition\nvoid add_polynomial( POLYNOMIAL poly1, POLYNOMIAL poly2,POLYNOMIAL poly_sum )\n{\nint i;\nzero_polynomial( poly_sum );\npoly_sum-&gt;high_power = max( poly1-&gt;high_power, poly2-&gt;high_power);\nfor( i=poly_sum-&gt;high_power; i&gt;=0; i-- )\npoly_sum-&gt;coeff_array[i] = poly1-&gt;coeff_array[i] + poly2-&gt;coeff_array[i];\n}\n// Multiplication\nvoid mult_polynomial( POLYNOMIAL poly1, POLYNOMIAL poly2,POLYNOMIAL poly_prod )\n{\nunsigned int i, j;\nzero_polynomial( poly_prod );\npoly_prod-&gt;high_power = poly1-&gt;high_power + poly2-&gt;high_power;\nif( poly_prod-&gt;high_power &gt; MAX_DEGREE )\nerror(\"Exceeded array size\");\nelse\nfor( i=0; i&lt;=poly-&gt;high_power; i++ )\nfor( j=0; j&lt;=poly2-&gt;high_power; j++ )\npoly_prod-&gt;coeff_array[i+j] +=\npoly1-&gt;coeff_array[i] * poly2-&gt;coeff_array[j];\n}\n// \u4f5c\u4e1a\u9898\u4e2d\u8981\u6c42\u7f16\u5199\u94fe\u8868\u5b9e\u73b0\u7684\u52a0\u6cd5\u51fd\u6570\uff0c\u8fd9\u662f\u6211\u7684\u4ee3\u7801\uff1a\nPolynomial Add( Polynomial a, Polynomial b )\n{ PtrToNode head = (PtrToNode)malloc(sizeof(struct Node));\nhead-&gt;Next = NULL;\nPolynomial ans = head;\nPolynomial cur = head;\nwhile (a-&gt;Next != NULL &amp;&amp; b-&gt;Next != NULL)\n{\nPtrToNode temp = (PtrToNode)malloc(sizeof(struct Node));\ntemp-&gt;Next = NULL;\nif (a-&gt;Next-&gt;Exponent &gt; b-&gt;Next-&gt;Exponent)\n{\ntemp-&gt;Coefficient = a-&gt;Next-&gt;Coefficient;\ntemp-&gt;Exponent = a-&gt;Next-&gt;Exponent;\na = a-&gt;Next;\n}\nelse if (a-&gt;Next-&gt;Exponent &lt; b-&gt;Next-&gt;Exponent)\n{\ntemp-&gt;Coefficient = b-&gt;Next-&gt;Coefficient;\ntemp-&gt;Exponent = b-&gt;Next-&gt;Exponent;\nb = b-&gt;Next;\n}\nelse\n{\ntemp-&gt;Coefficient = a-&gt;Next-&gt;Coefficient + b-&gt;Next-&gt;Coefficient;\nif (temp-&gt;Coefficient == 0)\n{\na = a-&gt;Next;\nb = b-&gt;Next;\nfree(temp);\ncontinue;\n}\nelse\n{\ntemp-&gt;Exponent = a-&gt;Next-&gt;Exponent;\n}\na = a-&gt;Next;\nb = b-&gt;Next;\n}\n// printf(\"%d %d\\n\", cur-&gt;Next-&gt;Coefficient, cur-&gt;Next-&gt;Exponent);\n// printf(\"%d\\n\", head-&gt;Next-&gt;Exponent);\ncur-&gt;Next = temp;\ncur = cur-&gt;Next;\n}\nwhile (a-&gt;Next != NULL)\n{\nPtrToNode temp = (PtrToNode)malloc(sizeof(struct Node));\ntemp-&gt;Coefficient = a-&gt;Next-&gt;Coefficient;\ntemp-&gt;Exponent = a-&gt;Next-&gt;Exponent;\ntemp-&gt;Next = NULL;\ncur-&gt;Next = temp;\na = a-&gt;Next;\ncur = cur-&gt;Next;\n}\nwhile (b-&gt;Next != NULL)\n{\nPtrToNode temp = (PtrToNode)malloc(sizeof(struct Node));\ntemp-&gt;Coefficient = b-&gt;Next-&gt;Coefficient;\ntemp-&gt;Exponent = b-&gt;Next-&gt;Exponent;\ntemp-&gt;Next = NULL;\ncur-&gt;Next = temp;\nb = b-&gt;Next;\ncur = cur-&gt;Next;\n}    // printf(\"%d %d\\n\", head-&gt;Next-&gt;Coefficient, head-&gt;Next-&gt;Exponent);\nreturn head;\n}\n</code></pre>"},{"location":"notebooks/fds/3/#radix-sort","title":"Radix Sort","text":"<p>\u7b49\u5230\u4e0a\u5b8c\u6392\u5e8f\u90a3\u7ae0\u518d\u56de\u8fc7\u6765\u770b\u5427\uff0c\u73b0\u5728\u4e5f\u770b\u4e0d\u592a\u61c2\ud83d\udc36</p>"},{"location":"notebooks/fds/3/#multilists","title":"Multilists","text":"<p>^222af4</p> <p>\u60c5\u5883\uff1a\u670940000\u540d\u5b66\u751f\u548c2500\u95e8\u8bfe\uff0c\u8981\u6c42\u5217\u51fa\u6bcf\u95e8\u8bfe\u5b66\u751f\u7684\u540d\u5355\uff0c\u4ee5\u53ca\u6bcf\u4f4d\u5b66\u751f\u7684\u8bfe\u8868</p> <p>\u5982\u679c\u7528\u6570\u7ec4(\\(40000 \\times 2500\\))\u505a\uff0c\u4f1a\u6d6a\u8d39\u5de8\u5927\u7684\u7a7a\u95f4\u3002</p> <p>\u56e0\u6b64\u7528\u5faa\u73af\u94fe\u8868\uff0c\u800c\u4e14\u5bf9\u4e8e\u94fe\u8868\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u6709\u4e24\u7ec4\u6307\u9488\uff1a\u4e00\u7ec4\u6307\u5411\u8fd9\u95e8\u8bfe\u7684\u5176\u4ed6\u5b66\u751f\uff0c\u53e6\u4e00\u7ec4\u6307\u5411\u8fd9\u4f4d\u5b66\u751f\u7684\u5176\u4ed6\u8bfe\u7a0b\u3002</p> <p>\u56fe\u793a\uff1a </p> <p>\u770b\u8d77\u6765\u5f88\u4f18\u96c5\uff0c\u4f46\u5b9e\u73b0\u8d77\u6765\u56f0\u96be\u91cd\u91cd\uff0c\u5f88\u96be\u7f16\u5199\u597d\u4ee3\u7801</p>"},{"location":"notebooks/fds/3/#cursor-implementation-of-linked-lists","title":"Cursor Implementation of Linked Lists","text":"<p>\u5bf9\u4e8e\u4e00\u4e9b\u6ca1\u6709\u6307\u9488\u7c7b\u578b\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5982\u4f55\u505a\u5230\u4e0d\u7528\u6307\u9488\u5b9e\u73b0\u94fe\u8868\u5462\uff1f\u2014\u2014\u7528\u6e38\u6807\u5b9e\u73b0(Cursor Implementation)!</p> <p>\u7279\u5f81\uff1a + \u94fe\u8868\u4e3a\u4e00\u7ec4\u7ed3\u6784\uff0c\u6bcf\u4e2a\u7ed3\u6784\u5305\u542b\u4e00\u4e2a\u6570\u636e\u57df\u548c\u6307\u9488\u57df\uff08\u6307\u5411\u4e0b\u4e00\u4e2a\u7ed3\u6784\uff09 + \u901a\u8fc7<code>malloc()</code>\u5f97\u5230\u65b0\u7684\u7ed3\u6784\uff0c\u4e14\u901a\u8fc7\u8c03\u7528<code>free()</code>\u91ca\u653e</p> <p></p> <p>\u91cd\u70b9\u7406\u89e3\u8282\u70b9\u5206\u914d\u548c\u91ca\u653e\u7684\u8fc7\u7a0b\uff08\u73b0\u5728\u6211\u8fd8\u6ca1\u592a\u7406\u89e3\ud83d\ude35\uff09 </p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>// \u94fe\u8868\u7684\u7c7b\u578b\u58f0\u660e\uff0c\u4e00\u822c\u653e\u5728.h\u6587\u4ef6\u4e2d\n#idndef _Cursor_H\ntypedef int PtrToNode;\ntypedef PtrToNode List;\ntypedef PtrToNode Position;\nvoid InitializeCursorSpace(void);\nList MakeEmpty(List L);\nint IsEmpty(List L);\nint IsLast(Position P, const List L);\nPosition Find(ElementType X, const List L);\nvoid Delete(ElementType X, List L);\nPosition FindPrevious(ElementType X, const List L);\nvoid Insert(ElementType X, List L, Position P);\nvoid DeleteList(List L);\nPosition Header(const List L);\nPosition First(const List L);\nPosition Advance(const Position P);\nElementType Retrieve(const Position P);\n#endif\n</code></pre></p> <pre><code>// \u94fe\u8868\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4e00\u822c\u653e\u5728.c\u6587\u4ef6\u4e2d\n// \u8282\u70b9\nstruct Node\n{\nElementType Element;\nPosition Next;\n};\nstruct Node CursorSpace[SpaceSize];\n// \u5047\u8bbe\u6e38\u6807\u5206\u914d\u548c\u91ca\u653e\u51fd\u6570\u5df2\u6709\u51fd\u6570\u539f\u578b\n// \u6e38\u6807\u5206\u914d\nstatic Position CursorAlloc(void)\n{\nPosition P;\nP = CursorSpace[0].Next;\nCursorSpace[0].Next = CursorSpace[P].Next;\nreturn P;\n}\n// \u6e38\u6807\u91ca\u653e\nstatic void CursorFree(Position P)\n{\nCursorSpace[P].Next = CursorSpace[0].Next;\nCursorSpace[0].Next = P;\n}\n// \u68c0\u67e5\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\nint IsEmpty(List L)\n{\nreturn CursorSpace[L].Next == 0;\n}\n// \u68c0\u67e5\u8282\u70b9P\u662f\u5426\u4e3a\u6700\u540e\u4e00\u9879\n// \u6ce8\u610f\u5230\u94fe\u8868L\u6ca1\u6709\u7528\u4e0a\uff0c\u653e\u5728\u8fd9\u91cc\u4ee5\u9632\u7279\u6b8a\u60c5\u51b5\u7684\u5904\u7406\nint IsLast(Position P, List L)  {\nreturn CursorSpace[P].Next == 0;\n}\n// \u67e5\u627e\u6570\u636eX\u5728\u94fe\u8868L\u4e2d\u7684\u4f4d\u7f6e\nPosition Find(ElementType X, List L)\n{\nPosition P;\nP = CursorSpace[L].Next;\nwhile (P &amp;&amp; CursorSpace[P].Element != X)\nP = CursorSpace[P].Next;\nreturn P;\n}\n// \u5220\u9664\u94fe\u8868L\u4e2d\u7684\u6570\u636eX\nvoid Delete(ElementType X, List L)\n{\nPosition P, TmpCell;\nP = FindPrevious(X, L);\nif (!IsLast(P, L))\n{\nTmpCell = CursorSpace[P].Next;\nCursorSpace[P].Next = CursorSapce[TmpCell].Next;\nCursorFree(TmpCell); // \u5220\u9664\u8282\u70b9\u65f6\u4e0d\u8981\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\uff01\uff01\uff01\n}\n}\n// \u5728\u4f4d\u7f6eP\u540e\u63d2\u5165\u65b0\u6570\u636eX\nvoid Insert(ElementType X, List L, Position P)\n{\nPosition TmpCell;\nTmpCell = CursorAlloc();\nif (TmpCell == 0)\nFatalError(\"Out of Space!!!\"); // \u8fd9\u91cc\u7528\u5230\u5904\u7406\u9519\u8bef\u4fe1\u606f\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\nCursorSpace[TmpCell].Element = X;\nCursorSpace[TmpCell].Next = CursorSpace[P].Next;\nCursorSpace[P].Next = TmpCell;\n}\n</code></pre> <p>\u901a\u5e38\u6e38\u6807\u5b9e\u73b0\u6cd5\u6bd4\u7528\u6307\u9488\u66f4\u5feb\uff0c\u56e0\u4e3a\u6ca1\u6709\u8c03\u7528\u5185\u5b58\u7ba1\u7406\u7684\u7a0b\u5e8f</p>"},{"location":"notebooks/fds/3/#supplements","title":"Supplements","text":"<pre><code>// \u9006\u8f6c\u94fe\u8868\nList Reverse( List L )\n{\nPosition cur;\nPosition pre;\nPosition rear;\ncur = L-&gt;Next;\nwhile (cur != NULL)\n{\nrear = cur-&gt;Next;\nif (cur == L-&gt;Next)\ncur-&gt;Next = NULL;\nelse\ncur-&gt;Next = pre;\npre = cur;\ncur = rear;\n}\nL-&gt;Next = pre;\nreturn L;\n}\n</code></pre>"},{"location":"notebooks/fds/3/#the-stack-adt","title":"The Stack ADT","text":""},{"location":"notebooks/fds/3/#adt","title":"ADT","text":"<p>Stack(\u5806\u6808)\uff1a\u4e00\u79cd==LIFO(Last-in-First-out)(\u540e\u8fdb\u5148\u51fa)==\u7684\u5217\u8868\uff0c\u5373\u4ec5\u5728\u6709\u5e8f\u5217\u8868\u7684\u9876\u7aef(top)\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c</p> <ul> <li>Objects\uff1a\u62e5\u67090\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u7684\u6709\u9650\u6709\u5e8f\u5217\u8868</li> <li>Operations\uff1a<ul> <li><code>Int IsEmpty(Stack S);</code> \u68c0\u67e5\u5806\u6808\u662f\u5426\u4e3a\u7a7a</li> <li><code>Stack CreateStack();</code> \u521b\u5efa\u5806\u6808</li> <li><code>DisposeStack(Stack S);</code> </li> <li><code>MakeEmpty(Stack S);</code> \u6e05\u7a7a\u5806\u6808</li> <li><code>Push(ElementType X, Stack S);</code> \u63d2\u5165\u65b0\u5143\u7d20</li> <li><code>ElementType Top(Stack S);</code> \u83b7\u5f97\u6808\u9876\u5143\u7d20</li> <li><code>Pop(Stack S);</code> \u5220\u9664\u6808\u9876\u5143\u7d20</li> </ul> </li> </ul> <p>\u2757\u6ce8\u610f\uff1a  + \u5bf9\u7a7a\u7684\u5806\u6808\u4f7f\u7528<code>Pop</code>\u6216<code>Top</code>\u64cd\u4f5c\u5c06\u4f1a\u5f15\u53d1==\u5806\u6808ADT\u9519\u8bef== + \u7136\u800c\uff0c\u5bf9\u6ee1\u7684\u5806\u6808\u4f7f\u7528<code>Push</code>\u64cd\u4f5c\u5c06\u4f1a\u5f15\u53d1==\u5b9e\u73b0\u9519\u8bef(implementation error)==</p>"},{"location":"notebooks/fds/3/#implementations","title":"Implementations","text":""},{"location":"notebooks/fds/3/#linked-list-impletation","title":"Linked List Impletation","text":"<p>\u56fe\u793a\uff1a</p> <p><code>Push</code> </p> <p><code>Top</code> </p> <p><code>Pop</code> </p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>// .h\u6587\u4ef6\u4ee3\u7801\uff1a\u5806\u6808ADT\u7684\u7c7b\u578b\u58f0\u660e\n#ifndef _Stack_h\nstruct Node;\ntypedef struct Node *PtrToNode;\ntypedef PtrToNode Stack;\nint IsEmpty(Stack S);\nStack CreateStack(void);\nvoid DisposeStack(Stack S);\nvoid MakeEmpty(Stack S);\nvoid Push(ElementType X, Stack S);\nElementType Top(Stack S);\nvoid Pop(Stack S);\n#endif /* _Stack_h*/\n</code></pre></p> <pre><code>// .c\u6587\u4ef6\u4ee3\u7801\uff1a\u94fe\u8868\u65b9\u5f0f\u7684\u5b9e\u73b0\nstruct Node\n{\nElementType Element;\nPtrToNode Next;\n};\nint IsEmpty(Stack S)\n{\nreturn S-&gt;next == NULL;\n}\nStack CreateStack(void)\n{\nStack S;\nS = (Stack)malloc(sizeof(struct Node));\nif (S == NULL)\nFatalError(\"Out of space!!\"); // \u81ea\u5b9a\u4e49\u51fd\u6570\nMakeEmpty(S);\nreturn S;\n}\nvoid MakeEmpty(Stack S)\n{\nif (S == NULL)\nError(\"Must use CreateStack first\");  // \u81ea\u5b9a\u4e49\u51fd\u6570\nelse while (!IsEmpty(S))\nPop(S);\n}\nvoid Push(ElementType X, Stack S)\n{\nPtrToNode TmpCell;\nTmpCell = (PtrToNode)malloc(sizeof(struct Node));\nif (TmpCell == NULL)\nFatalError(\"Out of space!!\");\nelse\n{\nTmpCell-&gt;Element = X;\nTmpCell-&gt;Next = S-&gt;Next;\nS-&gt;Next = TmpCell;\n}\n}\nElementType Top(Stack S)\n{\nif (!IsEmpty(S))\nreturn S-&gt;Next-&gt;Element;\nError(\"Empty stack\");\nreturn 0; // Return value used to avoid warning\n}\nvoid Pop(Stack S)\n{\nPtrToNode FirstCell;\nif (IsEmpty(S))\nError(\"Empty stack\");\nelse\n{\nFirstCell = S-&gt;Next;\nS-&gt;Next = S-&gt;Next-&gt;Next;\nfree(FirstCell);\n}\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5e38\u6570\\(O(1)\\)</p> <p>\u7f3a\u70b9\uff1a\u591a\u6b21\u4f7f\u7528<code>malloc()</code>\u548c<code>free()</code>\u5f00\u9500\u592a\u5927</p> <p>\u6539\u8fdb\u65b9\u6cd5\uff1a\u989d\u5916\u521b\u5efa\u4e00\u4e2a\u5806\u6808\uff0c\u7528\u4e8e\u5b58\u653e\u672c\u6765\u5e94\u8be5<code>free()</code>\u6389\u7684\u7a7a\u95f4\uff0c\u7b49\u5230\u6709\u65b0\u7684\u5143\u7d20\u9700\u8981<code>push</code>\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u201c\u56de\u6536\u7ad9\u201d\u4e2d\u7684\u7a7a\u95f4\uff0c\u800c\u65e0\u9700\u518d\u4f7f\u7528<code>malloc()</code></p>"},{"location":"notebooks/fds/3/#array-impletation","title":"Array Impletation","text":"<p>\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u653e\u4e0a\u4ee3\u7801\u5b9e\u73b0 <pre><code>// .h\u6587\u4ef6\u4ee3\u7801\uff1a\u5806\u6808ADT\u7684\u7c7b\u578b\u58f0\u660e\n#ifndef _Stack_h\nstruct StackRecord;\ntypedef struct StackRecord *Stack;\nint IsEmpty(Stack S);\nint IsFull(Stack S);\nStack CreateStack(int MaxElements);\nvoid DisposeStack(Stack S);\nvoid MakeEmpty(Stack S);\nvoid Push(ElementType X, Stack S);\nElementType Top(Stack S);\nvoid Pop(Stack S);\nElementType TopAndTop(Stack S);\n#endif /* _Stack_h*/\n</code></pre></p> <pre><code>// .c\u6587\u4ef6\u4ee3\u7801\uff1a(\u52a8\u6001\u5206\u914d)\u6570\u7ec4\u65b9\u5f0f\u7684\u5b9e\u73b0\n#define EmptyTOS (-1)   // \u52a0\u62ec\u53f7\u662f\u4e3a\u4e86\u9632\u6b62\u8fd0\u7b97\u987a\u5e8f\u7684\u9519\u8bef\n#define MintackSize (5) // \u540c\u4e0a\nstruct StackRecord\n{\nint Capacity;\nint TopOfStack;\nElementType *Array;\n};\nStack CreateStack(int MaxElements)\n{\nStack S;\nif (MaxElemets &lt; MinStackSize)\nError(\"Stack size if too small\");\nS = (Stack)malloc(sizeof(struct StackRecord));\nif (S == NULL)\nFatalError(\"Out of space!!!\");\nS-&gt;Array = (ElementType *)malloc(sizeof(ElementType) * MaxElements);\nif (S-&gt;Array == NULL)\nFatalError(\"Out of Space!!!\");\nS-&gt;Capacity = MaxElements;\nMakeEmpty(S);\nreturn S;\n}\nvoid DisposeStack(Stack S)\n{\nif (S != NULL)\n{\nfree(S-&gt;Array);\nfree(S);\n}\n}\nint IsEmpty(Stack S)\n{\nreturn S-&gt;TopOfStack == EmptyTOS;\n}\nvoid MakeEmpty(Stack S)\n{\nS-&gt;TopOfStack = EmptyTOS;\n}\nvoid Push(ElementType X, Stack S)\n{\nif(IsFull(S))\nError(\"Full stack\");\nelse\nS-&gt;Array[++S-&gt;TopOfStack] = X;\n}\nElementType Top(Stack S)\n{\nif (!IsEmpty(S))\nreturn S-&gt;Array[S-&gt;TopOfStack];\nError(\"Empty stack\");\nreturn 0; // Return value used to avoid warning\n}\nvoid Pop(Stack S)\n{\nPtrToNode FirstCell;\nif (IsEmpty(S))\nError(\"Empty stack\");\nelse\n{\nS-&gt;TopOfStack--;\n}\n}\n// \u5e02\u9762\u4e0a\u5f88\u591a\u4e66\u90fd\u4f1a\u628aPop\u548cTop\u51fd\u6570\u96c6\u6210\u5230Pop\u51fd\u6570\u4e0a\uff0c\u800c\u672c\u4e66\u7684\u4f5c\u8005\u5c06\u4e24\u8005\u5206\u5f00\uff0c\u4f46\u4ed6\u4e5f\u63d0\u4f9b\u4e86\u96c6\u6210\u7684\u7248\u672c(\u524d\u9762\u6ca1\u6709\u5199\u51fd\u6570\u539f\u578b)\nElementType TopAndPop(Stack S)\n{\nif(!IsEmpty(S))\nreturn S-&gt;Array[S-&gt;TopOfStack--];\nError(\"Empty stack\");\nreturn 0; // Return value used to avoid warning\n}\n</code></pre> <p>\u6ce8\uff1a 1. \u5806\u6808\u6a21\u578b\u5fc5\u987b\u5c01\u88c5\u597d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u9664\u4e86\u5806\u6808\u76f8\u5173\u51fd\u6570\u5916\uff0c\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206\u4e0d\u80fd\u4f7f\u7528<code>Array</code>\u6216<code>TopOfStack</code>\u7684\u53d8\u91cf 2. \u5728\u6267\u884c<code>Push</code>\u548c<code>Pop(Top)</code>\u524d\u5fc5\u987b\u8fdb\u884c\u9519\u8bef\u68c0\u67e5</p>"},{"location":"notebooks/fds/3/#applications_1","title":"Applications","text":""},{"location":"notebooks/fds/3/#balancing-symbols","title":"Balancing Symbols","text":"<pre><code>// \u8fd9\u662f\u4f2a\u4ee3\u7801\uff0c\u5b66\u4e60\u4e00\u4e0b\u4f2a\u4ee3\u7801\u7684\u683c\u5f0f\nAlgorithm\n{\nMake an Empty stack S;\nwhile (read in a character c)\n{\nif (c in an opening symbol)\nPush(c, S);\nelse if (c is a closing symbol)\n{\nif (S is empty)\n{\nERROR;\nexit;\n}\nelse // stack is okay\n{\nif (Top(S) doesn't match c)\n{\nERROR;\nexit;\n}\nelse Pop(S);\n}  // end else-stack is okay\n} // end else-if-closing symbol\n} // end while-loop\nif (S is not empty)\nERROR;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N)\\)\uff0c\u8fd9\u662f\u4e00\u4e2a\u5728\u7ebf\u7b97\u6cd5([[Chap 2 Algorithm Analysis#^9fd2b7|on-line algirithm]])</p>"},{"location":"notebooks/fds/3/#postfix-evaluation","title":"Postfix Evaluation","text":"<p>^f00de4 \u56fe\u793a\uff1a</p> <p>\u8fd9\u91cc\u53ea\u5217\u4e3e\u4e86 \u20186 2 /\u2019 \u7684\u89e3\u6cd5</p> <p> \u8bf4\u660e\uff1a + \u9047\u5230\u64cd\u4f5c\u6570\uff0c\u5c06\u5176\u538b\u5165\u5806\u6808\u4e2d + \u9047\u5230\u8fd0\u7b97\u7b26\\(opt\\)\uff0c\u5f39\u51fa\u5806\u6808\u6700\u9876\u4e0a\u4e24\u4e2a\u5143\u7d20\\(a, b\\)\uff0c\u5176\u4e2d\\(top = a\\)\uff0c\u7136\u540e\u8ba1\u7b97\\(c = b\\ opt\\ a\\)\uff0c\u6700\u540e\u5c06\\(c\\)\u538b\u5165\u5806\u6808\u4e2d + \u904d\u5386\u5b8c\u540e\u7f00\u8868\u8fbe\u5f0f\u540e\uff0c\u5806\u6808\u4e2d\u5e94\u5f53\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u8be5\u5143\u7d20\u5373\u4e3a\u6700\u7ec8\u7ed3\u679c</p> <p>\u6ce8\uff1a\u540e\u9762\u8bb2\u5230[[Chap 4 Trees#^fc61a7|\u8868\u8fbe\u5f0f\u6811]]\u7684\u6784\u5efa\u65f6\u4e5f\u91c7\u7528\u7c7b\u4f3c\u6b65\u9aa4</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>// \u8fd9\u91cc\u7f3a\u5c11\u4ee3\u7801\u5b9e\u73b0\uff0c\u6709\u7a7a\u518d\u8865doge\n</code></pre></p>"},{"location":"notebooks/fds/3/#infix-to-postfix-conversion","title":"Infix to Postfix Conversion","text":"<p>^01bb22 \u5173\u952e\u70b9\uff1a + \u64cd\u4f5c\u6570(operands) \u7684\u987a\u5e8f\u4e0d\u53d8\uff0c\u56e0\u6b64\u76f4\u63a5\u8f93\u51fa + \u5728\u5806\u6808\u5185\uff0c\u9ad8==\u4f18\u5148\u7ea7\u7684\u8fd0\u7b97\u7b26(operators) \u5728==\u4f4e==\u4f18\u5148\u7ea7\u8fd0\u7b97\u7b26\u7684\u524d\u9762 + \u6ce8\u610f\uff1a\u5982\u679c \u2018(\u2019 ==\u4e0d\u5728\u5806\u6808\u5185\uff0c\u5219\u5b83\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\uff1b\u5982\u679c\u5b83==\u5728\u5806\u6808\u5185==\uff0c\u5219\u4f18\u5148\u7ea7\u6700\u4f4e\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\uff1a + \u5982\u679c\u5f85\u5224\u65ad\u7684\u8fd0\u7b97\u7b26\u7684==\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6808\u9876\u8fd0\u7b97\u7b26(\u5305\u62ec\u2018(\u2019)/==\u7a7a\u6808\uff0c\u5c06\u5176\u538b\u5165\u5806\u6808 + \u5426\u5219\u5982\u679c\u8fd0\u7b97\u7b26\u662f \u2018)\u2019 \uff0c\u5219\u5c06==\u6808\u5185'('\u524d\u7684\u6240\u6709\u8fd0\u7b97\u7b26==\u6309\u51fa\u6808\u987a\u5e8f\u5f39\u51fa('('\u4e5f\u4ec5\u5728\u8be5\u60c5\u51b5\u4e0b\u624d\u80fd\u5f39\u51fa) + \u5426\u5219\u7684\u8bdd\uff0c\u4ece\u6808\u9876\u5f00\u59cb\u4f9d\u6b21\u5f39\u51fa\u8fd0\u7b97\u7b26\uff0c\u76f4\u5230\u6ee1\u8db3\u6761\u4ef61\uff0c\u518d\u5c06\u8be5\u8fd0\u7b97\u7b26\u538b\u5165\u5806\u6808\u4e2d</p> <p>\u8865\u5145\uff1a\u4e0a\u8ff0\u539f\u5219\u9002\u7528\u4e8e\u52a0\u51cf\u4e58\u9664\u56db\u5219\u8fd0\u7b97\uff0c\u4f46\u4e0d\u9002\u5408\u5e42\u8fd0\u7b97\uff0c\u56e0\u4e3a\u5e42\u8fd0\u7b97\u7b26^\u7ed3\u5408\u65b9\u5411\u81ea\u53f3\u5411\u5de6</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>// \u76f4\u63a5\u6458\u81ea\u6211\u7684project 2\uff0c\u4e4b\u540e\u5e94\u5f53\u8fd8\u8981\u4fee\u6539\u4e00\u4e0b\nQueue InToPost(char * exp)\n{\nchar * tmp = (char *)malloc(sizeof(char) * VLENGTH); \u00a0// Containing the variables or constant\nStack s; \u00a0 // The stack for operators, in order to getting the proper order in postfix form\nQueue q; \u00a0 // The postfix expression, split them into variables, constants and operators in a queue\nchar opt; \u00a0// The operator\nchar * head = exp; \u00a0// Cheking if it's the first character in the expression\n// Initialization\ns = CreateStack();\nq = CreateQueue();\ntmp[0] = '\\0';\nwhile (*exp != '\\0') // Traversing the infix expression\n{\nif (isalnum(*exp)) \u00a0// Finding the potential variables and constants\n{\nCharToString(*exp, tmp); \u00a0// Receiving it\n}\nelse if (*exp == '-' &amp;&amp; (exp == head || *(exp - 1) == '(')) // Handling with the case with minus sign\n{\nEnqueue(\"0\", q);\nPush2(*exp, s);\n}\nelse \u00a0// If it's an operator\n{\nif (strlen(tmp)) \u00a0// If there is a variable or a constant\n{\nif (*exp == '(' &amp;&amp; (!strcmp(tmp, \"sin\") || !strcmp(tmp, \"cos\") || !strcmp(tmp, \"ln\"))) \u00a0// Dealing with math functions\n{\nEnqueue(\"0\", q);\nswitch (tmp[0])\n{\ncase 's': \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // sin\nPush2('!', s);\nbreak;\ncase 'c': \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // cos\nPush2('@', s);\nbreak;\ncase 'l': \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // ln\nPush2('#', s);\nbreak;\n}\n}\nelse\nEnqueue(tmp, q); \u00a0// Outputting it\ntmp[0] = '\\0'; \u00a0 \u00a0// Resetting\n}\n// If it's an empty stack or the priority of the current operator is higher than the top element, or the top element is the left parentheses\nif (IsEmpty(s) || priority(*exp) &lt; priority(s-&gt;top-&gt;operator) || s-&gt;top-&gt;operator == '(')\nPush2(*exp, s); \u00a0// Pushing the operator into the stack\nelse if (*exp == ')') \u00a0// If it's a right parentheses\n{\nwhile (s-&gt;top-&gt;operator != '(') \u00a0// Poping out all the operators on the left parentheses in the stack\n{\nopt = Top2(s);\nPop(s);\nCharToString(opt, tmp);\nEnqueue(tmp, q); \u00a0// Don't forget to output it!\ntmp[0] = '\\0'; \u00a0 \u00a0// Resetting\n}\nPop(s); \u00a0// Don't forget throw the left parentheses out!\nwhile (s-&gt;top-&gt;operator == '!' || s-&gt;top-&gt;operator == '@' || s-&gt;top-&gt;operator == '#') // Coping with math functions, but unluckily, there are still some bugs\n{\nopt = Top2(s);\nPop(s);\nCharToString(opt, tmp);\nEnqueue(tmp, q); \u00a0// Don't forget to output it!\ntmp[0] = '\\0'; \u00a0 \u00a0// Resetting\n}\n}\nelse // Else Poping out all elements with the higher priority out, until encountering the '(' or the lower one\n{\nwhile (s-&gt;top-&gt;operator != '(' &amp;&amp; priority(*exp) &gt;= priority(s-&gt;top-&gt;operator))\n{\nopt = Top2(s);\nPop(s);\nCharToString(opt, tmp);\nEnqueue(tmp, q); \u00a0// Don't forget to output it!\ntmp[0] = '\\0'; \u00a0 \u00a0// Resetting\n}\nPush2(*exp, s); \u00a0// Pushing the new one to the stack\n}\n}\nexp++; \u00a0// Checking the next one\n}\n// Dealing with the remaining part(important!)\nif (strlen(tmp))\n{\nEnqueue(tmp, q);\ntmp[0] = '\\0';\n}\nwhile (!IsEmpty(s)) \u00a0// Disposing of the remaining elements in the stack\n{\nif (Top2(s) != '(' \u00a0&amp;&amp; Top2(s) != ')') \u00a0// Special case for parentheses\n{\nopt = Top2(s);\nPop(s);\nCharToString(opt, tmp);\nEnqueue(tmp, q);\ntmp[0] = '\\0'; \u00a0}\nelse\nPop(s); \u00a0 \u00a0 \u00a0 \u00a0}\nreturn q; \u00a0 // Returing the output sequence\n}\n</code></pre></p> <p>\u6ce8\uff1a + \u8fd9\u91cc\u7684\u4ee3\u7801\u662f\u9488\u5bf9project\u7684\u95ee\u9898\u201c\u5b9a\u5236\u201d\u7684\uff0c\u56e0\u6b64\u53ef\u80fd\u4e0d\u592a\u5177\u6709\u901a\u7528\u6027 + \u8fd9\u91cc\u6211\u5c06\u5f97\u5230\u7684\u540e\u7f00\u8868\u8fbe\u5f0f\u5b58\u50a8\u4e3a\u961f\u5217\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u7eed\u6784\u5efa\u8868\u8fbe\u5f0f\u6811</p>"},{"location":"notebooks/fds/3/#function-calls","title":"Function Calls","text":"<p>\u6bcf\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u4ea7\u751f\u7684\u6570\u636e\uff0c\u5305\u62ec\u5c40\u90e8\u53d8\u91cf(Local Variables)\u548c\u8fd4\u56de\u5730\u5740(Return Address)\uff0c\u90fd\u4f1a\u88ab\u5b58\u5165\u5230==\u5806\u6808\u5e27(Stack Frame)==\u5f53\u4e2d\uff0c\u800c\u8fd9\u4e2a\u5e27\u4f1a\u88ab\u5b58\u5230\u7cfb\u7edf\u5806\u6808(System Stack) \u4e2d\u3002 </p> <p>\u7531\u4e8e\u7cfb\u7edf\u4e0d\u4f1a\u68c0\u67e5\u5806\u6808\u6ea2\u51fa(overflow)\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u5f53\u8c03\u7528\u51fd\u6570\u8fc7\u591a\u65f6\u4f1a\u5e26\u6765\u707e\u96be\u6027\u540e\u679c\uff08\u6bd4\u5982\u6f0f\u6389\u57fa\u672c\u60c5\u51b5\u7684\u9012\u5f52\u51fd\u6570\uff09</p> <p>\u5c3e\u90e8\u9012\u5f52(Tail Recursion)\uff1a\u9012\u5f52\u51fd\u6570\u5728\u6700\u540e\u4e00\u884c\u8fdb\u884c\u9012\u5f52\u8c03\u7528\u3002\u8fd9\u65f6\u7cfb\u7edf\u5f80\u5f80\u5c06\u9012\u5f52\u51fd\u6570\u6539\u5199\u6210\u5faa\u73af\u5f62\u5f0f(<code>goto</code>\uff0c\u5f53\u7136\u81ea\u5df1\u5199\u5faa\u73af\u65f6\u5343\u4e07\u522b\u7528\u8fd9\u4e2a)\uff0c\u89c1\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a <pre><code>// Recursion\nvoid PrintList(List L)\n{\nif (L != NULL)\n{\nPrintElement(L-&gt;Element);\nPrintList(L-&gt;Next);\n}\n}  // a bad use of recursion\n// Iteration\nvoid PrintList(List L)\n{\ntop: if (L != NULL)\n{\nPrintElement(L-&gt;Element);\nL = L-&gt;Next;\ngoto top;\n}  // do NOT do this!\n}  // compiler removes recursion\n</code></pre></p> <p>\u867d\u7136\u89e3\u51b3\u540c\u4e00\u95ee\u9898\uff0c\u975e\u9012\u5f52\u7684\u7a0b\u5e8f\u5f80\u5f80\u5feb\u4e8e\u9012\u5f52\uff0c\u4f46\u9012\u5f52\u7a0b\u5e8f\u901a\u5e38\u66f4\u52a0\u7b80\u5355\u548c\u6613\u4e8e\u7406\u89e3</p>"},{"location":"notebooks/fds/3/#the-queue-adt","title":"The Queue ADT","text":""},{"location":"notebooks/fds/3/#adt_1","title":"ADT","text":"<p>\u961f\u5217(Queue)\uff1a\u4e00\u79cd==FIFO(First-in-First-out)(\u5148\u8fdb\u5148\u51fa)\u7684\u5217\u8868\uff0c\u5373\u5728\u6709\u5e8f\u5217\u8868\u7684\u4e00\u7aef\u63d2\u5165\uff0c\u53e6\u4e00\u7aef\u5220\u9664 + Objects\uff1a\u62e5\u67090\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u7684\u6709\u9650\u6709\u5e8f\u5217\u8868 + Operations\uff1a     + <code>Int IsEmpty(Queue Q);</code> \u68c0\u67e5\u961f\u5217\u662f\u5426\u4e3a\u7a7a     + <code>Stack CreateQueue();</code> \u521b\u5efa\u961f\u5217     + <code>DisposeQueue(Queue Q);</code>     + <code>MakeEmpty(Queue Q);</code> \u6e05\u7a7a\u961f\u5217     + ==<code>Enqueue(ElementType X, Queue Q);</code> \u5165\u961f     + <code>ElementType Front(Queue Q);</code> \u83b7\u5f97\u961f\u9996\u5143\u7d20     + <code>Dequeue(Queue Q);</code> \u51fa\u961f</p>"},{"location":"notebooks/fds/3/#array-implementation-of-queues","title":"Array Implementation of Queues","text":"<p>\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u653e\u4e0a\u4ee3\u7801\u5b9e\u73b0 <pre><code>// .h\u6587\u4ef6\u4ee3\u7801\uff1a\u961f\u5217ADT\u7684\u7c7b\u578b\u58f0\u660e\n#ifndef _Queue_h\nstruct QueueRecord;\ntypedef struct QueueRecord *Queue;\nint IsEmpty(Queue Q);\nint IsFull(Queue Q);\nStack CreateQueue(int MaxElements);\nvoid DisposeQueue(Queue Q);\nvoid MakeEmpty(Queue Q);\nvoid Enqueue(ElementType X, Queue Q);\nElementType Front(Queue Q);\nvoid Dequeue(Queue Q);\nElementType FrontAndDequeue(Queue Q);\n#endif /* _Queue_h*/\n</code></pre></p> <p><pre><code>// .c\u6587\u4ef6\u4ee3\u7801\uff1a(\u52a8\u6001\u5206\u914d)\u6570\u7ec4\u65b9\u5f0f\u7684\u5b9e\u73b0\n#define MintackSize (5) // \u52a0\u62ec\u53f7\u662f\u4e3a\u4e86\u9632\u6b62\u8fd0\u7b97\u987a\u5e8f\u7684\u9519\u8bef\nstruct QueueRecord\n{\nint Capacity;\nint Front;\nint Rear;\nint Size;\nElementType *Array;\n};\nint IsEmpty(Queue Q)\n{\nreturn Q-&gt;Size == 0;\n}\nvoid MakeEmpty(Queue Q)\n{\nQ-&gt;Size = 0;\nQ-&gt;Front = 1;\nQ-&gt;Rear = 0;\n}\n// \u5f62\u6210\u5faa\u73af\u961f\u5217\nstatic int Succ(int Value, Queue Q)\n{\nif (++Value == Q-&gt;Capacity)\nValue = 0;\nreturn Value;\n}\nvoid Enqueue(ElementType X, Queue Q)\n{\nif (IsFull(Q))\nError(\"Full Queue\");\nelse\n{\nQ-&gt;Size++;\nQ-&gt;Rear = Succ(Q-&gt;Rear, Q);\nQ-&gt;Array[Q-&gt;Rear] = X;\n}\n}\n</code></pre> \u4e0a\u8ff0\u4ee3\u7801\u4e2d\u91c7\u7528\u4e86\u5faa\u73af\u961f\u5217(Circular Queue) \u7684\u65b9\u6cd5\uff0c\u80fd\u591f\u6700\u5927\u5316\u5229\u7528\u961f\u5217\u7684\u7a7a\u95f4\u3002\u5bf9\u4e8e\u5faa\u73af\u961f\u5217\uff0c\u533a\u5206\u7a7a\u961f\u5217\u548c\u6ee1\u961f\u5217\u67092\u79cd\u505a\u6cd5\uff1a 1. \u7a7a\u51fa\u4e00\u5757\u7a7a\u95f4  2. \u589e\u52a0\u4e00\u4e2a<code>Size</code>\u7684\u5b57\u6bb5\uff0c\u7528\u6765\u5b9e\u65f6\u7edf\u8ba1\u961f\u5217\u5143\u7d20\u4e2a\u6570\uff0c\u8fd9\u6837\u65e0\u9700\u6d6a\u8d39\u7a7a\u95f4\uff08\u4e0a\u8ff0\u4ee3\u7801\u4fbf\u91c7\u7528\u8fd9\u79cd\u505a\u6cd5\uff09</p> <p>\u5728\u6cd52\u4e2d\uff0c\u5982\u679c\u7528<code>front</code>\u8868\u793a\u961f\u9996\u5143\u7d20\uff0c<code>size</code>\u8868\u793a\u5f53\u524d\u961f\u4f0d\u5927\u5c0f\uff0c<code>m</code>\u8868\u793a\u961f\u4f0d\u6700\u5927\u5927\u5c0f\uff0c\u5219\u961f\u5c3e\u5143\u7d20<code>rear = (front + size - 1) % m</code></p>"},{"location":"notebooks/fds/3/#applications_2","title":"Applications","text":"<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4efb\u52a1\u5b89\u6392\uff1a\u6bcf\u4e2a\u4efb\u52a1\u6309\u7167FIFO\u539f\u5219\u6267\u884c     &gt;\u8fd9\u91cc\u6709\u4e2a\u5c0f\u95ee\u9898\uff1a\u6bcf\u4e2a\u4efb\u52a1\u53ef\u4ee5\u5728\u4e2d\u9014<code>kill</code>\u6389\uff0c\u8fd9\u4e0d\u7b26\u5408\u961f\u5217\u7684\u51fa\u961f\u65b9\u6cd5</li> </ul>"},{"location":"notebooks/fds/3/#problems","title":"Problems","text":"<p>2.2  If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient? A. doubly linked list B. singly linked circular list C. doubly linked circular list with a dummy head node D. sequential list</p> <p>D\uff0c\u770b\u6e05\u9898\u76ee\uff0c\u5b83\u8bf4\u7684\u662f\u968f\u673a\u8bbf\u95ee+\u5728\u6700\u540e\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u90a3\u4e48\u663e\u7136\u662f\u6570\u7ec4\u5566\u3002 \u8fd9\u4e48\u7b80\u5355\u90fd\u9519\uff0c\u8be5\u6253\ud83d\udd90\ufe0f</p> <p>7-1 Pop Sequence</p> <p>Given a stack which can keep\u00a0M\u00a0numbers at most. Push\u00a0N\u00a0numbers in the order of 1, 2, 3, ...,\u00a0N\u00a0and pop randomly. You are supposed to tell if a given sequence of numbers is a possible pop sequence of the stack. For example, if\u00a0M\u00a0is 5 and\u00a0N\u00a0is 7, we can obtain 1, 2, 3, 4, 5, 6, 7 from the stack, but not 3, 2, 1, 7, 5, 6, 4.</p> <p>Input Specification:</p> <p>Each input file contains one test case. For each case, the first line contains 3 numbers (all no more than 1000):\u00a0M\u00a0(the maximum capacity of the stack),\u00a0N\u00a0(the length of push sequence), and\u00a0K\u00a0(the number of pop sequences to be checked). Then\u00a0K\u00a0lines follow, each contains a pop sequence of\u00a0N\u00a0numbers. All the numbers in a line are separated by a space.</p> <p>Output Specification:</p> <p>For each pop sequence, print in one line \"YES\" if it is indeed a possible pop sequence of the stack, or \"NO\" if not.</p> <p>Sample Input:</p> <pre><code>5 7 5\n1 2 3 4 5 6 7\n3 2 1 7 5 6 4\n7 6 5 4 3 2 1\n5 6 4 3 7 2 1\n1 7 6 5 4 3 2\n</code></pre> <p>Sample Output:</p> <pre><code>YES\nNO\nNO\nYES\nNO\n</code></pre> <p>my code: <pre><code>#include &lt;stdio.h&gt;\n#define SIZE 1000\nint main()\n{\nint m, n, k;\nint i, j, t;\nint a[SIZE];\n// int stack[SIZE];\nint top, pt;\nint flag, cnt;\nint temp;\nscanf(\"%d%d%d\", &amp;m, &amp;n, &amp;k);\nfor (i = 0; i &lt; k; i++)\n{\nfor (j = 0; j &lt; n; j++)\nscanf(\"%d\", &amp;a[j]);\nfor (j = 0; j &lt; n - 1; j++)\n{\nflag = 0;\ncnt = 1;\ntemp = 0;\nfor (t = j + 1; t &lt; n &amp;&amp; cnt &lt;= m; t++)\n{\nif (a[t] &lt; a[j])\n{\nif (!temp || a[t] &lt; temp)\n{\ntemp = a[t];\ncnt++;\n}\nelse\n{\nflag = 1;\nbreak;\n}\n}\n}\nif (flag || cnt &gt; m)\n{\nprintf(\"NO\\n\");\nbreak;\n}\n}\nif (!flag &amp;&amp; cnt &lt;= m)\nprintf(\"YES\\n\");\n}\nreturn 0;\n}\n</code></pre></p>"},{"location":"notebooks/fds/4/","title":"Chap 4 Trees","text":":material-circle-edit-outline: \u7ea6 2960 \u4e2a\u5b57 :fontawesome-solid-code: 436 \u884c\u4ee3\u7801 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 15 \u5206\u949f"},{"location":"notebooks/fds/4/#preliminaries","title":"Preliminaries","text":""},{"location":"notebooks/fds/4/#definitions","title":"Definitions","text":"<ul> <li>\u6811(Trees)\uff1a\u5b83\u662f\u4e00\u7ec4\u8282\u70b9\uff0c\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\uff1a<ul> <li>\u5305\u542b1\u4e2a\u6839\u8282\u70b9(root)\\(r\\)</li> <li>\u67090\u4e2a\u6216\u591a\u4e2a\u5b50\u6811(subtrees)\\(T_1, \\dots, T_k\\)\uff0c\u6bcf\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9\u90fd\u548c\\(r\\)\u901a\u8fc7\u4e00\u6761\u8fb9(edge) \u8fde\u63a5 <p>\u6ce8\uff1a + \u5b50\u6811\u4e4b\u95f4\u4e0d\u4f1a\u76f8\u4e92\u8fde\u63a5\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u67d0\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9 + \u5bf9\u4e8e\u4e00\u68f5\u6709\\(N\\)\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u5b83\u6709\\(N - 1\\)\u6761\u8fb9</p> </li> </ul> </li> <li>\u5ea6(degree)\uff1a<ul> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u5ea6\u6307\u7684\u662f\u5b83\u6240\u6709\u5b50\u6811\u7684\u4e2a\u6570</li> <li>\u4e00\u68f5\u6811\u7684\u5ea6\u4e3a\\(\\max\\limits_{\\text{node } \\in \\text{ tree}}\\{\\text{degree(node)}\\}\\)</li> </ul> </li> <li>\u7236\u8282\u70b9(parent)\uff1a\u6709\u5b50\u6811\u7684\u8282\u70b9\uff0c\u5b69\u5b50\u8282\u70b9(children)\uff1a\u7236\u8282\u70b9\u5b50\u6811\u7684\u6839\u8282\u70b9</li> <li>\u5144\u5f1f\u8282\u70b9(siblings)\uff1a\u6709\u76f8\u540c\u7236\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9</li> <li>\u53f6\u5b50\u8282\u70b9(leaf)\uff1a\u5ea6\u4e3a0\u7684\u8282\u70b9</li> <li>\u4ece\\(n_1\\)\u5230\\(n_k\\)\u8def\u5f84(path)\uff1a\u4e00\u4e2a\u5305\u542b\u8282\u70b9\\(n_1, n_2, \\dots, n_k\\)==\u552f\u4e00==\u7684\u5e8f\u5217\uff0c\u4f7f\u5f97\\(n_i\\)\u662f\\(n_{i+1}\\)\u7684\u7236\u8282\u70b9(\\(1 \\le i &lt; k\\))</li> <li>\u8def\u5f84\u957f\u5ea6(length)\uff1a\u8def\u5f84\u4e0a\u8fb9\u7684\u6761\u6570</li> <li>\u6df1\u5ea6(depth) of \\(n_i\\)\uff1a\u4ece\u6839\u8282\u70b9\u51fa\u53d1\u7684\u552f\u4e00\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u89c4\u5b9a\\(Depth(root) = 0\\)</li> <li>\u9ad8\u5ea6(height) of \\(n_i\\)\uff1a\u4ece\\(n_i\\)\u5230\u53f6\u5b50\u7ed3\u70b9\u7684\u6700\u957f\u8def\u5f84\u957f\u5ea6\uff0c\u89c4\u5b9a\\(Height(leaf) = 0\\) \\(\\(\\therefore height(root) = depth(deepest\\text{ }leaf)\\)\\)</li> <li>\u7956\u5148(ancestor)\uff1a\u4ece\u8be5\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u6240\u6709\u7684\u8282\u70b9</li> <li>\u540e\u4ee3(descendant)\uff1a\u8be5\u8282\u70b9\u6240\u6709\u5b50\u6811\u7684\u8282\u70b9</li> <li>\u5185\u90e8\u9876\u70b9(internal vertices)\uff1a\u6709\u5b69\u5b50\u8282\u70b9\u7684\u9876\u70b9</li> </ul>"},{"location":"notebooks/fds/4/#implementation","title":"Implementation","text":""},{"location":"notebooks/fds/4/#list-representation","title":"List Representation","text":"<p>\u95ee\u9898\uff1a\u6bcf\u4e2a\u8282\u70b9\u7684\u7a7a\u95f4\u5927\u5c0f\u53d6\u51b3\u4e8e\u5b83\u6709\u591a\u5c11\u4e2a\u5b50\u6811\uff0c\u8fd9\u6837\u5b9e\u73b0\u8d77\u6765\u5c31\u5f88\u9ebb\u70e6</p>"},{"location":"notebooks/fds/4/#firstchild-nextsibling-representation","title":"FirstChild-NextSibling Representation","text":"<p>\u6ce8\uff1a\u5bf9\u4e8e\u540c\u4e00\u68f5\u6811\uff0c\u8fd9\u79cd\u8868\u793a\u5e76\u4e0d\u552f\u4e00\uff0c\u56e0\u4e3a\u6811\u4e2d\u5b69\u5b50\u7684\u987a\u5e8f\u53ef\u4ee5\u662f\u4efb\u610f\u7684</p>"},{"location":"notebooks/fds/4/#applicationfile-system","title":"Application(File System)","text":"<p>Directory listing in a hierarchical file system + Unix \u7cfb\u7edf      + DOS \u7cfb\u7edf          &gt; \u6ce8\u610f\uff1a\u5728UNIX\u7cfb\u7edf\u4e2d\u4f4d\u4e8e\u6df1\u5ea6\\(d_i\\)\u7684\u6587\u4ef6\uff0c\u5728\u8f6c\u5316\u4e3aDOS\u7cfb\u7edf\u7684\u8868\u793a\u6cd5\u65f6\u9700\u8981\u5c06\u5b83\u4eec\u7684\u540d\u5b57\u7f29\u8fdb\\(d_i\\)\u4e2a<code>tab</code>\u952e</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff08\u524d\u5e8f\u904d\u5386\uff09\uff1a <pre><code>static void ListDir(DirOfFile D, int Depth)\n{\nif (D is legitimate entry)\n{\nPrintName(D, Depth);\nif (D is a directory)\nfor (each child C of D)\nListDir(C, Depth + 1);\n}\n}\n</code></pre></p> <p>\u6ce8\u610f\uff1a<code>Depth</code>\u53d8\u91cf\u662f\u4e0d\u5e94\u8be5\u88ab\u7528\u6237\u770b\u5230\u7684\u5185\u90e8\u53d8\u91cf\uff0c\u9700\u8981\u9690\u85cf\u8d77\u6765\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u50cf\u4e0b\u9762\u90a3\u6837\u5b9a\u4e49\u53e6\u5916\u4e00\u4e2a\u51fd\u6570</p> <pre><code>void ListDirectory(DirOfFile D)\n{\nListDir(D, 0);\n}\n</code></pre> <p>Calculating the size of a directory  \u4ee3\u7801\u5b9e\u73b0\uff08\u540e\u5e8f\u904d\u5386\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\\(O(N)\\)\uff09 <pre><code>static int SizeDir(DirOrFile D)\n{\nint TotalSize;\nTotalSize = 0;\nif (D is a legitimate entry)\n{\nTotalSize = FileSize(D);\nif (D is a directory)\nfor (each child C of D)\nTotalSize += SizeDir(C);\n} // end if D is legal\nreturn TotalSize;\n}\n</code></pre></p>"},{"location":"notebooks/fds/4/#binary-trees","title":"Binary Trees","text":"<p>Binary Tree(\u4e8c\u53c9\u6811)\uff1a\u6bcf\u4e2a\u8282\u70b9\u62e5\u6709\u4e0d\u8d85\u8fc7\u4e24\u4e2a\u5b69\u5b50\u7684\u6811 </p>"},{"location":"notebooks/fds/4/#expression-treessyntax-trees","title":"Expression Trees(syntax trees)","text":"<p>^fc61a7 + \u5148\u5c06[[Chap 3 Lists, Stacks, and Queues#^01bb22|\u4e2d\u7f00-&gt;\u540e\u7f00]] + \u7136\u540e\u7c7b\u4f3c[[Chap 3 Lists, Stacks, and Queues#^f00de4|\u540e\u7f00\u8868\u8fbe\u5f0f\u6c42\u89e3]]\u7684\u65b9\u6cd5\uff0c\u9047\u5230\u8fd0\u7b97\u7b26\u65f6\uff0c\u5c06\u5806\u6808\u5185\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u5f39\u51fa\uff0c\u4e0e\u8fd0\u7b97\u7b26\u6784\u5efa\u4e00\u68f5\u6811\uff0c\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a     + \u5de6\u5b50\u6811\uff1a\u6808\u9876\u4e0b\u9762\u7684\u5143\u7d20     + \u6839\u8282\u70b9\uff1a\u8fd0\u7b97\u7b26     + \u53f3\u5b50\u6811\uff1a\u6808\u9876\u5143\u7d20     \u5c06\u8fd9\u68f5\u6811\u538b\u5165\u5806\u6808\u4e2d\uff0c\u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\u76f4\u5230\u904d\u5386\u5b8c\u6574\u4e2a\u8868\u8fbe\u5f0f</p> <p>\u793a\u610f\u56fe\uff1a </p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>// from my work of project 2\nTree ExpTree(Queue q)\n{\nTree ans; \u00a0 // The final expression tree\nStack s; \u00a0 \u00a0// The stack for tree construction, containing the nodes or the trees\nPtrToNode node, op1, op2, new; \u00a0// node for all element in the queue; op1 and op2 are operands;and new is a new tree\nPtrToQueue cur = q-&gt;front-&gt;next; \u00a0// Starting from the second element, for the queue has a dummy header\ns = CreateStack(); \u00a0// Initialization\nwhile (cur != NULL) \u00a0// Traversing all the element in the queue\n{\nnode = CreateNode(cur-&gt;var); \u00a0// Creating node for every element in the queue\nif(isalnum(cur-&gt;var[0]) || cur-&gt;var[0] == '-' &amp;&amp; isalnum(cur-&gt;var[1])) \u00a0// If it's a operand, push it into the stack\n{\nPush1(node, s);\n// printf(\"%s\\n\", str);\n}\nelse \u00a0// If it's a operator,\n{\nop2 = Top1(s); \u00a0// Obtaining the top two operands from the stack\nPop(s);\nop1 = Top1(s);\nPop(s);\nnew = CreateTree(node, op1, op2); \u00a0// Creating an expression (sub)tree\nPush1(new, s);\n}\ncur = cur-&gt;next;\n}\nans = Top1(s); // The remaining tree in the stack is the answer\nreturn ans;\n}\n</code></pre></p>"},{"location":"notebooks/fds/4/#tree-traversals","title":"Tree Traversals","text":"<p>\u6811\u7684\u904d\u5386(tree traversals)\uff1a\u5bf9\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u8bbf\u95ee\u4e00\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N)\\)</p> <p></p> <p>\u524d\u5e8f\u904d\u5386(Preorder Traversal) <pre><code>void preorder(tree_ptr tree)\n{\nif (tree)\n{\nvisit(tree);\nfor (each child C of tree)\npreorder(C);\n}\n}\n</code></pre></p> <p>\u540e\u5e8f\u904d\u5386(Postorder Traversal) <pre><code>void postorder(tree_ptr tree)\n{\nif (tree)\n{\nfor (each child C of tree)\npostorder(C);\nvisit(tree);\n}\n}\n</code></pre></p> <p>\u5c42\u5e8f\u904d\u5386(Levelorder Traversal) ^770ab3 <pre><code>void levelorder(tree_ptr tree)\n{\nenqueue(tree);\nwhile (queue is not empty)\n{\nvisit(T = dequeue());\nfor (each child C of T)\nenqueue(C);\n}\n}\n</code></pre></p> <p>\u4e2d\u5e8f\u904d\u5386(Inorder Traversal) <pre><code>// Recursion\nvoid inorder(tree_ptr tree)\n{\nif (tree)\n{\ninorder(tree-&gt;Left);\nvisit(tree-&gt;Element);\ninorder(tree-&gt;Right);\n}\n}\n// Iteration(using stack)\nvoid iter_inorder(tree_ptr tree)\n{\nStack S = CreateStack(MAX_SIZE);\nfor (;;)\n{\nfor (; tree; tree = tree-&gt;left)\nPush(tree, S);\ntree = Top(S);\nPop(S);\nif (!tree)\nbreak;\nvisit(tree-&gt;Element);\ntree = tree-&gt;Right;\n}\n}\n</code></pre></p> <p>\u6ce8\uff1a\u5165\u6808\u987a\u5e8f\u8c8c\u4f3c\u662f\u524d\u5e8f\u904d\u5386\uff1f\ud83e\udd14 \u6211\u8fd8\u6ca1\u9a8c\u8bc1\u8fc7\u2026\u2026</p>"},{"location":"notebooks/fds/4/#threaded-binary-trees","title":"Threaded Binary Trees","text":"<p>\u5bf9\u4e8e\u4e00\u822c\u7684\u4e8c\u53c9\u6811\uff0c\u5b83\u7684\u53f6\u5b50\u8282\u70b9\u7684\u5de6\u53f3\u6307\u9488\u6307\u5411<code>NULL</code>\uff0c\u8fd9\u6d6a\u8d39\u4e86\u5f88\u591a\u7a7a\u95f4\u3002\u800c\u7ebf\u7d22\u4e8c\u53c9\u6811(Threaded Binary Trees) \u5f88\u597d\u5730\u5229\u7528\u4e86\u95f2\u7f6e\u7684\u8282\u70b9\uff0c\u5177\u4f53\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\u5982\u679c<code>Tree-&gt;Left</code>\u4e3a\u7a7a\uff0c\u5c06\u5b83\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684==\u524d\u4e00\u4e2a\u8282\u70b9==</li> <li>\u5982\u679c<code>Tree-&gt;Right</code>\u4e3a\u7a7a\uff0c\u5c06\u5b83\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684==\u540e\u4e00\u4e2a\u8282\u70b9==</li> <li>\u6709\u4e00\u4e2a\u5934\u8282\u70b9(dummy node)\uff0c\u4f7f\u5f97\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u5b69\u5b50\u5206\u522b\u6307\u5411\u8fd9\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b69\u5b50</li> </ul> <pre><code>// \u7ed3\u6784\u58f0\u660e\ntypedef struct ThreadedTreeNode *PtrTo ThreadedNode;\ntypedef struct PtrToThreadedNode ThreadedTree;\nstruct ThreadedTreeNode\n{\nint LeftThread;      // if it is True, then Left\nTreadedTree Left;    // is a thread, not a child ptr\nElementType Element;\nint RightThread;     // if it is True, then Right\nThreadedTree Right;  // is a thread, not a child ptr\n}\n</code></pre> <p>\ud83c\udf30 </p> <p>\u6ce8\uff1a\u867d\u7136\u8fd9\u91cc\u9ed8\u8ba4\u4f7f\u7528\u4e2d\u5e8f\u904d\u5386\u7684\u5b9a\u4e49\uff0c\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u5176\u4fee\u6539\u6210\u524d\u5e8f\u6216\u8005\u540e\u5e8f\u904d\u5386\u7684\u7248\u672c(\u6bd4\u5982\u5bf9\u4e8e\u540e\u5e8f\u904d\u5386\u7248\u7684\u7ebf\u7d22\u4e8c\u53c9\u6811\uff0c\u67d0\u4e2a\u8282\u70b9\u7a7a\u51fa\u6765\u7684\u5de6\u5b50\u6811\u6307\u5411\u5b83\u5728\u540e\u5e8f\u904d\u5386\u4e2d\u7684\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u7a7a\u51fa\u6765\u7684\u53f3\u5b50\u6811\u6307\u5411\u5b83\u5728\u540e\u5e8f\u904d\u5386\u4e2d\u7684\u540e\u4e00\u4e2a\u8282\u70b9)</p>"},{"location":"notebooks/fds/4/#special-cases","title":"Special Cases","text":"<ul> <li>\u6b6a\u659c\u4e8c\u53c9\u6811(Skewed Binary Trees)\uff1a </li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811(Complete Binart Trees)\uff1a </li> </ul>"},{"location":"notebooks/fds/4/#properties","title":"Properties","text":"<ul> <li> <p>\u7b2c\\(i\\)\u5c42(\\(i \\ge 1\\))\u6700\u591a\u62e5\u6709\\(2^{i - 1}\\)\u4e2a\u8282\u70b9\uff1b\u6df1\u5ea6\u4e3a\\(k\\)\u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709\\(2^k - 1\\)\u4e2a\u8282\u70b9(\\(k \\ge 1\\))</p> </li> <li> <p>\u5bf9\u4e8e\u975e\u7a7a\u7684\u4e8c\u53c9\u6811\uff0c\\(n_0 = n_2 + 1\\)\uff0c\u5176\u4e2d\\(n_0\\)\u662f\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\uff0c\\(n_2\\)\u662f\u5ea6\u4e3a2\u7684\u8282\u70b9\u4e2a\u6570</p> </li> </ul> <p>\ud83c\udf1f\u8bc1\u660e(\u53ef\u63a8\u5e7f\u81f3n\u53c9\u6811)\uff1a + \u4ee4\\(n_1\\)\u4e3a\u5ea6\u4e3a1\u7684\u8282\u70b9\uff0c\\(n\\)\u4e3a\u8282\u70b9\u603b\u6570\uff0c\u5219\\(n = n_0 + n_1 + n_2\\) + \u4ee4\\(B\\)\u4e3a\u8fb9\u7684\u6761\u6570\uff0c\u5219\\(n = B + 1\\)\uff0c\u800c\u4e14\u4e0d\u96be\u53d1\u73b0\\(B = n_1 + 2n_2\\) + \u8054\u7acb\u4e0a\u8ff0\u4e09\u4e2a\u65b9\u7a0b\uff0c\u53ef\u4ee5\u5f97\u5230\\(n_0 = n_2 + 1\\)(\\(n_1\\)\u88ab\u6d88\u6389\u4e86)</p> <p>\u2757\u91cd\u8981\u63a8\u8bba\uff1a\\(n\\)\u53c9\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\u4e0e\\(n_1\\)\u65e0\u5173\uff1a\\(n_0 = \\sum\\limits_{i = 2}^n (i - 1)n_i + 1\\)</p> <p>\u63a8\u8bba\uff1a\u5bf9\u4e8e\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6613\u77e5\\(n_1 = 0\\)\u6216\\(1\\)\u3002\u7531\\(n_0 = n_2 + 1\\)\u77e5: + \u5b8c\u5168\u4e8c\u53c9\u6811\u6709\u5947\u6570\u4e2a\u8282\u70b9\u65f6\uff0c\\(n_1 = 0\\) + \u5b8c\u5168\u4e8c\u53c9\u6811\u6709\u5076\u6570\u4e2a\u8282\u70b9\u65f6\uff0c\\(n_1 = 1\\)</p>"},{"location":"notebooks/fds/4/#the-search-tree-adt-binary-search-tree","title":"The Search Tree ADT -- Binary Search Tree","text":""},{"location":"notebooks/fds/4/#definition","title":"Definition","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811(Binary Search Tree) \u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5b83\u53ef\u4ee5\u662f\u7a7a\u6811\uff0c\u5982\u679c\u975e\u7a7a\uff0c\u5219\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a + \u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u6574\u6570\u7684\u952e(key)\uff0c\u6bcf\u4e2a\u952e\u4e92\u4e0d\u76f8\u540c</p> <p>\u8fd9\u91cc\u8fd9\u4e48\u5b9a\u4e49\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u7684\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u952e\u4e0d\u5fc5\u662f\u6574\u6570\uff0c\u952e\u4e5f\u53ef\u4ee5\u76f8\u540c + \u975e\u7a7a\u5de6\u5b50\u6811\u7684\u952e\u5fc5\u987b\u5c0f\u4e8e\u6839\u4e0a\u7684\u952e + \u975e\u7a7a\u53f3\u5b50\u6811\u7684\u952e\u5fc5\u987b\u5927\u4e8e\u6839\u4e0a\u7684\u952e + \u5de6\u53f3\u5b50\u6811\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811</p> <p>\u6ce8\uff1a + \u5bf9\u4e8e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540c\u4e00\u5c42\u4ece\u5de6\u5f80\u53f3\u904d\u5386\uff0c\u8fd9\u4e9b\u8282\u70b9\u5f97\u5230\u503c\u4e00\u5b9a\u662f\u6709\u5e8f\u7684 + \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u662f\u975e\u9012\u51cf\u7684 + \u7ed9\u51fa\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u524d\u5e8f\u6216\u8005\u540e\u5e8f\u904d\u5386\uff0c\u6839\u636e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5e94\u5f53\u53ef\u4ee5\u8fd8\u539f\u51fa\u8fd9\u68f5\u6811 + \u5bf9\u4e8e\u4e00\u68f5\u5b8c\u5168\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5b83\u6700\u5c0f\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u6700\u5927\u7684\u5c31\u4e0d\u4e00\u5b9a\u4e86</p>"},{"location":"notebooks/fds/4/#adt","title":"ADT","text":"<p>\u5bf9\u8c61\uff1a\u62e5\u67090\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u7684\u6709\u9650\u6709\u5e8f\u8868 \u8fd0\u7b97\uff1a + <code>SearchTree MakeEmpty(SearchTree T);</code> + <code>Position Find(ElementType X, SearchTree T);</code> + <code>Position FindMin(SearchTree T);</code> + <code>Position FindMax(SearchTree T);</code> + <code>SearchTree Insert(ElementType X, SearchTree T);</code> + <code>SearchTree Delete(ElementType X, SearchTree T);</code> + <code>ElementType Retrieve(Position P);</code></p>"},{"location":"notebooks/fds/4/#implementations","title":"Implementations","text":"<pre><code>// \u58f0\u660e\u90e8\u5206\n#ifndef _Tree_H\nstruct TreeNode;\ntypedef struct TreeNode *Position;\ntypedef struct TreeNode *SearchTree;\nSearchTree MakeEmpty(SearchTree T);\nPosition Find(ElementType X, SearchTree T);\nPosition FindMin(SearchTree T);\nPosition FindMax(SearchTree T);\nSearchTree Insert(ElementType X, SearchTree T);\nSearchTree Delete(ElementType X, SearchTree T);\nElementType Retrieve(Position P);\n#endif // _Tree_H\n// \u5199\u5728\u6267\u884c\u6587\u4ef6\u90e8\u5206\nstruct TreeNode\n{\nElementType Element;\nSearchTree Left;\nSearchTree Right;\n}\n// \u521d\u59cb\u5316\u5904\u7406\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(logN)\nSearchTree MakeEmpty(SearchTree T)\n{\nif (T != NULL)\n{\nMakeEmpty(T-&gt;Left);\nMakeEmpty(T-&gt;Right);\nfree(T);\n}\nreturn NULL;\n}\n</code></pre>"},{"location":"notebooks/fds/4/#find","title":"<code>Find</code>","text":"<pre><code>Position Find(ElementType X, SearchTree T)\n{\nif (T == NULL)\nreturn NULL; // not found in an empty tree\nif (X &lt; T-&gt;Element)  // if smaller than root\nreturn Find(X, T-&gt;Left);  // search left subtree\nelse if (X &gt; T-&gt;Element)  // if larger than root\nreturn Find(X, T-&gt;Right);  // search right subtree\nelse  // if X == root\nreturn T;  // found\n}\n</code></pre> <p>\u6ce8\uff1a 1. \u65f6\u95f4\u590d\u6742\u5ea6\\(T(N)\\)\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\\(S(N)\\)\u90fd\u7b49\u4e8e\\(O(d)\\)\uff0c\u5176\u4e2d\\(d\\)\u4e3a\u6811\\(X\\)\u7684\u6df1\u5ea6 2. \u51fd\u6570\u5f00\u59cb\u5e94\u5148\u5224\u65ad\u6811\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u5c11\u4e86\u8fd9\u53e5\uff0c\u540e\u9762\u5c31\u4f1a\u53d1\u751f\u6bb5\u9519\u8bef\uff08\u5728\u4e0d\u5b58\u5728\u7684\u6811\u4e2d\u83b7\u53d6\u5143\u7d20\uff0c\u8fd9\u662f\u672a\u5b9a\u4e49\u7684\uff09 3. \u8fd9\u91cc\u7684\u9012\u5f52\u51fd\u6570\u662f\u5c3e\u9012\u5f52(tail recursions)\uff0c\u56e0\u6b64\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u9012\u5f52\u4f18\u5316\u4e3a\u5faa\u73af</p> <pre><code>// \u8fed\u4ee3\u7248Find()\nPosition Iter_Find(ElementType X, SearchTree T)\n{\nwhile (T)\n{\nif (X == T-&gt;Element)\nreturn T;  // found\nif (X &lt; T-&gt;Element)\nT = T-&gt;Left;  // move down along left path\nelse\nT = T-&gt;Right;  // move down along right path\n} // end while-loop\nreturn NULL;  // not found\n}\n</code></pre>"},{"location":"notebooks/fds/4/#findmin","title":"<code>FindMin</code>","text":"<pre><code>Position FindMin(SearchTree T)\n{\nif (T == NULL)\nreturn NULL;  // not found in an empty tree\nelse if (T-&gt;Left == NULL)  // found left most\nreturn T;\nelse\nreturn FindMin(T-&gt;Left); // keep moving to left\n}\n</code></pre>"},{"location":"notebooks/fds/4/#findmax","title":"<code>FindMax</code>","text":"<pre><code>Position FindMax(SearchTree T)\n{\nif (T != NULL)\nwhile (T-&gt;Right != NULL)\nT = T-&gt;Right;  // keep moving to find right most\nreturn T;  // return NULL or the right most\n}\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a\\(O(d)\\)\uff0c\\(d\\)\u4e3a\u6811\u7684\u6df1\u5ea6</p>"},{"location":"notebooks/fds/4/#insert","title":"<code>Insert</code>","text":"<p>\u601d\u60f3\uff1a\u6267\u884c\u8fc7\u7a0b\u7c7b\u4f3c<code>Find</code>\uff0c + \u5982\u679c\u627e\u5230\u4e86\u8be5\u8282\u70b9\uff0c\u53ef\u4ee5\u4e0d\u505a\u4efb\u4f55\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u5b83\u7684\u8ba1\u6570\u5668+1\uff08\u5982\u679c\u8282\u70b9\u6709\u8ba1\u6570\u5b57\u6bb5\u7684\u8bdd\uff09 + \u5426\u5219\u5c06\u6700\u540e\u9047\u5230\u7684\u975e\u7a7a\u8282\u70b9 \u89c6\u4e3a\u65b0\u8282\u70b9\u7684parent\uff0c\u7136\u540e\u5c06\u65b0\u8282\u70b9\u63d2\u5165<code>NULL</code>\u7684\u4f4d\u7f6e\u4e0a</p> <pre><code>SearchTree Insert(ElementType X, SearchTree T)\n{\nif (T == NULL)  // Create and return a one-node tree\n{\nT = (SearchTree)malloc(sizeof(struct TreeNode));\nif (T == NULL)\nFatalError(\"Out of space!!!\");\nelse\n{\nT-&gt;Element = X;\nT-&gt;Left = T-&gt;Right = NULL;\n}\n}  // End create a one-node tree\nelse\n{\nif (X &lt; T-&gt;Element)\nT-&gt;Left = Insert(X, T-&gt;Left);\nelse if (X &gt; T-&gt;Element)\nT-&gt;Right = Insert(X, T-&gt;Right);\n// Else X is in the tree already, we'll do nothing\n}\nreturn T; // Don't forget this line!!\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(d),d\\)\u7684\u610f\u601d\u540c\u524d</p> <p>\ud83e\udd14\u601d\u8003\uff1a\u53ef\u4e0d\u53ef\u4ee5\u8fd9\u6837\u7b80\u5316\u4e00\u4e0b\u63d2\u5165\u51fd\u6570\u2014\u2014\u5c06\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u6539\u4e3a<code>void</code>\uff0c\u7136\u540e\u5728\u7b2c\u4e00\u4e2a<code>else</code>\u4e2d\u4e0d\u91c7\u7528\u8d4b\u503c\u8bed\u53e5\uff0c\u6700\u540e\u4e5f\u4e0d\u8fd4\u56de<code>T</code></p> <p>\u7b54\u6848\uff1a\u663e\u7136\u4e0d\u53ef\u4ee5\u3002\u5982\u679c\u6700\u540e\u6ca1\u6709\u5728\u6811\u4e2d\u627e\u5230\u8981\u63d2\u5165\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u65b0\u5efa\u4e00\u68f5\u5b50\u6811\u3002\u5982\u679c\u5efa\u5b8c\u8fd9\u68f5\u6811\u540e\u65e2\u4e0d\u8fd4\u56de\u5b83\uff0c\u4e5f\u6ca1\u6709\u5c06\u5b83\u8d4b\u56de\u53bb\uff0c\u90a3\u4e48\u8fd9\u68f5\u5b50\u6811\u7684\u7236\u8282\u70b9\u65e0\u6cd5\u4e0e\u5b83\u5efa\u7acb\u8054\u7cfb\uff0c\u56e0\u6b64\u5efa\u4e86\u4e5f\u7b49\u4e8e\u767d\u5efa\u3002</p>"},{"location":"notebooks/fds/4/#delete","title":"\ud83c\udf1f<code>Delete</code>","text":"<p>\u8fd9\u662f\u4e8c\u5206\u641c\u7d22\u6811\u4e2d\u6700\u96be\u5904\u7406\u7684\u90e8\u5206\u3002\u6211\u4eec\u8981\u5904\u7406\u6709\u4e09\u79cd\u60c5\u51b5\uff1a + \u53f6\u5b50\u7ed3\u70b9 + \u6709\u4e00\u4e2a\u5b69\u5b50 + \u6709\u4e24\u4e2a\u5b69\u5b50</p> <p>\u5176\u4e2d\u524d\u4e24\u79cd\u60c5\u51b5\u7684\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\uff0c\u6700\u540e\u7684\u60c5\u51b5\u8f83\u4e3a\u590d\u6742\uff0c\u5177\u4f53\u5206\u6790\u5982\u4e0b\uff1a</p> <ul> <li>\u5220\u9664\u53f6\u5b50\u8282\u70b9\uff1a\u76f4\u63a5\u5c06\u5b83\u7684\u7236\u8f88\u8282\u70b9\u8fde\u63a5\u5230\u7a7a\u8282\u70b9\u4e0a</li> <li>\u5220\u9664\u5ea6\u4e3a1\u7684\u8282\u70b9\uff1a\u7528\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\u66ff\u6362\u5b83\u81ea\u8eab</li> <li> <p>\u5220\u9664\u5ea6\u4e3a2\u7684\u8282\u70b9\uff1a</p> <ul> <li> <p>\u7528\u8be5\u8282\u70b9\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9\u6216\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9 \uff08\u6311\u4e00\u79cd\uff09\u66ff\u6362\u5b83\u81ea\u8eab</p> <p>\u89e3\u91ca\uff1a\u4ee5\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\u4e3a\u4f8b\uff0c\u5c06\u5176\u4f5c\u4e3a\u65b0\u7684\u7236\u8282\u70b9\uff0c\u56e0\u4e3a\u5b83\u65e2\u6ee1\u8db3\u6bd4\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u5927\uff08\u53f3\u5b50\u6811\u7684\u8282\u70b9&gt;\u5de6\u5b50\u6811\u7684\u8282\u70b9\uff09\uff0c\u53c8\u6ee1\u8db3\u6bd4\u65b0\u7684\u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u5c0f\uff08\u5b83\u539f\u672c\u5c31\u662f\u53f3\u5b50\u6811\u6700\u5c0f\u7684\u8282\u70b9\uff09</p> </li> <li> <p>\u4ece\u5b50\u6811\u4e2d\u5220\u9664\u7528\u6765\u66ff\u6362\u7684\u8282\u70b9</p> <p>\u6ce8\u610f\u7528\u6765\u66ff\u6362\u7684\u8282\u70b9\u7684\u5ea6\u4e0d\u8d85\u8fc71</p> </li> </ul> </li> </ul> <pre><code>// \u8fd9\u91cc\u5220\u9664\u5ea6\u4e3a2\u7684\u8282\u70b9\u65f6\u91c7\u7528\u62ff\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\u66ff\u6362\u7684\u65b9\u6cd5\nSearchTree Delete(ElementType X, SearchTree T)\n{\nPosition TmpCell;\nif (T == NULL)\nError(\"Element not found\");\nelse\n{\nif (X &lt; T-&gt;ELement)  // Go left\nT-&gt;Left = Delete(X, T-&gt;Left);\nelse if (X &gt; T-&gt;Element)  // Go right\nT-&gt;Right = Delete(X, T-&gt;Right);\nelse  // Found element to be deleted\n{\nif (T-&gt;Left &amp;&amp; T-&gt;Right)  // Two children\n{  // Replace with smallest in right subtree\nTmpCell = FindMin(T-&gt;Right);\nT-&gt;Element = TmpCell-&gt;Element;\nT-&gt;Right = Delete(T-&gt;Element, T-&gt;Right);\n}  // End if \nelse  // One or zero child\n{\nTmpCell = T;\nif (T-&gt;Left == NULL)  // Also handles 0 child\nT = T-&gt;Right;\nelse if (T-&gt;Right == NULL)\nT = T-&gt;Left;\nfree(TmpCell);  // End else 1 or 0 child\n}\n}\n} return T;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(h), h\\)\u662f\u6811\u7684\u9ad8\u5ea6</p> <p>\u663e\u7136\uff0c\u8fd9\u79cd\u5220\u9664\u7684\u64cd\u4f5c\u6548\u7387\u4e0d\u9ad8</p> <p>\u6539\u8fdb\u65b9\u6cd5\uff1a\u5982\u679c\u5220\u9664\u64cd\u4f5c\u7528\u7684\u4e0d\u591a\uff0c\u53ef\u4ee5\u91c7\u7528lazy deletion\u7684\u65b9\u6cd5\u2014\u2014\u4e3a\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u4e00\u4e2a<code>flag</code>\u5b57\u6bb5\uff0c\u6765\u6807\u8bb0\u8282\u70b9\u662f\u5426\u88ab\u5220\u9664\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4e0d\u5fc5\u901a\u8fc7\u91ca\u653e\u8282\u70b9\u7684\u7a7a\u95f4\u7684\u65b9\u5f0f\u6765\u5220\u9664\u8282\u70b9\uff1b\u800c\u4e14\u5982\u679c\u6211\u4eec\u91cd\u65b0\u63d2\u5165\u5df2\u7ecf\u5220\u9664\u7684\u8282\u70b9\uff0c\u5219\u4e0d\u5fc5\u4f7f\u7528<code>malloc()</code>\u5206\u914d\u5185\u5b58,\u56e0\u800c\u80fd\u591f\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\u3002\u5f88\u591a\u6570\u636e\u5e93\u90fd\u662f\u8fd9\u4e48\u505a\u7684\u3002</p>"},{"location":"notebooks/fds/4/#average-case-analysis","title":"Average-Case Analysis","text":"<p>\u901a\u8fc7\u8ba1\u7b97\u53d1\u73b0\uff0c\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u5e73\u5747\u6df1\u5ea6\u4e3a\\(O(logN)\\)\uff0c\u8bc1\u660e\u8fc7\u7a0b\u89c1\u6559\u6750\\(P_{108}\\)</p> <p>\u4e8c\u5206\u641c\u7d22\u6811\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e==\u63d2\u5165\u7684\u987a\u5e8f==\u548c==\u5220\u9664==\u64cd\u4f5c + \u63d2\u5165\uff1a\u5982\u679c\u987a\u5e8f\u4e0d\u591f\u968f\u673a\uff08\u6700\u574f\u7684\u60c5\u51b5\uff1a\u5347\u5e8f\uff09\uff0c\u5219\u6811\u4f1a\u9000\u5316\u6210\u4e00\u4e2a\u94fe\u8868 + \u5220\u9664\uff1a\u4ee5\u66ff\u6362\u4e3a\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\u4e3a\u4f8b\uff0c\u8fc7\u591a\u7684\u5220\u9664\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u53f3\u5b50\u6811\u4e0d\u65ad\u7f29\u5c0f\uff0c\u5de6\u5b50\u6811\u7684\u89c4\u6a21\u4f1a\u5927\u4e8e\u53f3\u5b50\u6811\uff0c\u7834\u574f\u4e86\u6811\u7684\u5e73\u8861</p> <p>\u89e3\u51b3\u65b9\u6848\uff08\u4e0b\u5b66\u671fADS\u4f1a\u8bb2\uff09\uff1a + AVL\u6811 + splay\u6811</p>"},{"location":"notebooks/fds/4/#problems","title":"Problems","text":"<p>1-2. In a binary search tree which contains several integer keys including 4, 5, and 6, if 4 and 6 are on the same level, then 5 must be their parent.</p> <p>F 5\u4e0d\u4e00\u5b9a\u662f4, 6\u7684\u76f4\u63a5\u7236\u8282\u70b9\uff0c\u5b83\u53ef\u80fd\u662f4, 6\u7684\u7956\u5148\uff0c\u6bd4\u59825\u548c4\u4e2d\u95f4\u653e\u4e2a3\uff0c5\u548c6\u4e2d\u95f4\u653e\u4e2a7\uff0c\u6b64\u65f64, 6\u8fd8\u662f\u5904\u5728\u540c\u4e00\u5c42\uff0c\u4f46\u5b83\u4eec\u7684\u7236\u8282\u70b9\u4e0d\u662f5</p> <p>2-2. If a general tree\u00a0T\u00a0is converted into a binary tree\u00a0BT, then which of the following\u00a0BT\u00a0traversals gives the same sequence as that of the post-order traversal of\u00a0T? A. Pre-order traversal B. In-order traversal C. Post-order traversal D. Level-order traversal</p> <p>B \u8fd9\u4e2a\u5149\u60f3\u6211\u4e5f\u60f3\u4e0d\u597d\uff0c\u8981\u753b\u4e00\u4e0b\u56fe\u624d\u77e5\u9053\u3002\u4f46\u4e3a\u4e86\u89e3\u9898\u901f\u5ea6\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u5148\u6b7b\u8bb0\u3002</p> <p>\u8865\u5145\uff1a\u666e\u901a\u6811\u7684\u524d\u5e8f = \u8f6c\u5316\u6210\u4e8c\u53c9\u6811\u7684\u524d\u5e8f \u666e\u901a\u6811\u6ca1\u6709\u4e2d\u5e8f\u2026\u2026</p> <p>quiz3-R1-1. The worst cast time complexity of Binary Search is always\u00a0O(logn)\u00a0where\u00a0n\u00a0is the number of sorted integers.</p> <p>F \u8981\u8003\u8651\u5b58\u50a8\u65b9\u5f0f\uff1a\u5047\u8bbe\u6211\u7528\u94fe\u8868\u5b58\u50a8\u4e8c\u5206\u67e5\u627e\u6811\uff0c\u90a3\u4e48\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e0d\u53ef\u80fd\u662f\\(O(\\log n)\\)\u4e86</p> <p>6-1 Isomorphic</p> <p>Two trees,\u00a0<code>T1</code>\u00a0and\u00a0<code>T2</code>, are\u00a0isomorphic\u00a0if\u00a0<code>T1</code>\u00a0can be transformed into\u00a0<code>T2</code>\u00a0by swapping left and right children of (some of the) nodes in\u00a0<code>T1</code>. For instance, the two trees in Figure 1 are isomorphic because they are the same if the children of A, B, and G, but not the other nodes, are swapped. Give a polynomial time algorithm to decide if two trees are isomorphic.</p> <p> Figure 1</p> <p>Format of functions:</p> <pre><code>int Isomorphic( Tree T1, Tree T2 );\n</code></pre> <p>where\u00a0<code>Tree</code>\u00a0is defined as the following:</p> <pre><code>typedef struct TreeNode *Tree;\nstruct TreeNode {\nElementType Element;\nTree  Left;\nTree  Right;\n};\n</code></pre> <p>The function is supposed to return 1 if\u00a0<code>T1</code>\u00a0and\u00a0<code>T2</code>\u00a0are indeed isomorphic, or 0 if not.</p> <p>Sample program of judge:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\ntypedef char ElementType;\ntypedef struct TreeNode *Tree;\nstruct TreeNode {\nElementType Element;\nTree  Left;\nTree  Right;\n};\nTree BuildTree(); /* details omitted */\nint Isomorphic( Tree T1, Tree T2 );\nint main()\n{\nTree T1, T2;\nT1 = BuildTree();\nT2 = BuildTree();\nprintf(\u201c%d\\n\u201d, Isomorphic(T1, T2));\nreturn 0;\n}\n/* Your function will be put here */\n</code></pre> <p>Sample Output 1 (for the trees shown in Figure 1):</p> <pre><code>1\n</code></pre> <p>Sample Output 2 (for the trees shown in Figure 2):</p> <pre><code>0\n</code></pre> <p> Figure2</p> <p>my code <pre><code>int Isomorphic( Tree T1, Tree T2 )\n{\nint cnt[4];\nif (T1 == NULL &amp;&amp; T2 == NULL)\nreturn 1;\nelse if (T1 == NULL || T2 == NULL)\nreturn 0;\nelse if (T1-&gt;Element == T2-&gt;Element)\n{\ncnt[0] = Isomorphic(T1-&gt;Left, T2-&gt;Left);\ncnt[1] = Isomorphic(T1-&gt;Right, T2-&gt;Right);\ncnt[2] = Isomorphic(T1-&gt;Left, T2-&gt;Right);\ncnt[3] = Isomorphic(T1-&gt;Right, T2-&gt;Left);\nif (cnt[0] &amp;&amp; cnt[1] || cnt[2] &amp;&amp; cnt[3])\nreturn 1;\n}\nreturn 0;\n}\n</code></pre></p> <p>7-1 ZigZagging on a Tree</p> <p>Suppose that all the keys in a binary tree are distinct positive integers. A unique binary tree can be determined by a given pair of postorder and inorder traversal sequences. And it is a simple standard routine to print the numbers in level-order. However, if you think the problem is too simple, then you are too naive. This time you are supposed to print the numbers in \"zigzagging order\" -- that is, starting from the root, print the numbers level-by-level, alternating between left to right and right to left. For example, for the following tree you must output: 1 11 5 8 17 12 20 15.</p> <p></p> <p>Input Specification:</p> <p>Each input file contains one test case. For each case, the first line gives a positive integer N (\u226430), the total number of nodes in the binary tree. The second line gives the inorder sequence and the third line gives the postorder sequence. All the numbers in a line are separated by a space.</p> <p>Output Specification:</p> <p>For each test case, print the zigzagging sequence of the tree in a line. All the numbers in a line must be separated by exactly one space, and there must be no extra space at the end of the line.</p> <p>Sample Input:</p> <pre><code>8\n12 11 20 17 1 15 8 5\n12 20 17 11 15 8 5 1\n</code></pre> <p>Sample Output:</p> <pre><code>1 11 5 8 17 12 20 15\n</code></pre> <p>my code(revised) <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#define SIZE 31\ntypedef struct node * PtrToNode;\ntypedef PtrToNode tree;\nstruct node\n{\nint data;\nPtrToNode left;\nPtrToNode right;\n};\nint inorder[SIZE], postorder[SIZE];\ntree CreateTree(int in[], int post[], int n);\nvoid Traversal(tree t);\nint main()\n{\nint n;\nint i, j;\ntree tree;\nscanf(\"%d\", &amp;n);\nfor (i = 0; i &lt; n; i++)\nscanf(\"%d\", &amp;inorder[i]);\nfor (i = 0; i &lt; n; i++)\nscanf(\"%d\", &amp;postorder[i]);\ntree = CreateTree(0, n - 1, n - 1);\nTraversal(tree);\nreturn 0;\n}\n// \u77e5\u9053\u4e2d\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u6784\u9020\u4e00\u68f5\u6811\ntree CreateTree(int in[], int post[], int n)\n{\nPtrToNode node;\nint root;\nint i;\nif (!n)\nreturn NULL;\nroot = post[n - 1];\nfor (i = 0; i &lt; n &amp;&amp; in[i] != root; i++);\nnode = (PtrToNode)malloc(sizeof(struct node));\nnode-&gt;data = root;\nnode-&gt;left = CreateTree(in, post, i);\nnode-&gt;right = CreateTree(in + i + 1, post + i, n - i - 1);\nreturn node;\n}\n// \u601d\u8def\uff1a\u4f7f\u7528\u4e24\u4e2a\u5806\u6808(\u5806\u6808\u53ef\u4ee5\u6539\u53d8\u987a\u5e8f)\uff0c\u4e00\u4e2a\u5b58\u4ece\u53f3\u5f80\u5de6\u904d\u5386\u7684\u90a3\u5c42\u8282\u70b9(stack1)\uff0c\u53e6\u4e00\u4e2a\u5b58\u4ece\u5de6\u5f80\u53f3\u904d\u5386\u7684\u90a3\u5c42\u8282\u70b9(stack2)\uff0c\u4ea4\u66ff\u8fdb\u884c\uff0c\u76f4\u5230\u4e24\u4e2a\u5806\u6808\u5747\u4e3a\u7a7a\u7ed3\u675f\nvoid Traversal(tree t)\n{\nPtrToNode stack1[SIZE], stack2[SIZE];\nint cnt = 0, flag = 1;\nint top1, top2;\ntop1 = top2 = -1;\nstack1[++top1] = (PtrToNode)malloc(sizeof(struct node));\nstack1[top1] = t;\nwhile (top1 != -1 || top2 != -1)\n{   if (cnt % 2 == 0)\n{\nwhile (top1 != -1)\n{\nif (flag)\n{\nprintf(\"%d\", stack1[top1]-&gt;data);\nflag = 0;\n}\nelse\nprintf(\" %d\", stack1[top1]-&gt;data);\nif (stack1[top1]-&gt;right != NULL)\n{\nstack2[++top2] = (PtrToNode)malloc(sizeof(struct node));\nstack2[top2] = stack1[top1]-&gt;right;\n}\nif (stack1[top1]-&gt;left != NULL)\n{\nstack2[++top2] = (PtrToNode)malloc(sizeof(struct node));       stack2[top2] = stack1[top1]-&gt;left;\n}\nfree(stack1[top1--]);\n}\n}\nelse\n{\nwhile (top2 != -1)\n{\nprintf(\" %d\", stack2[top2]-&gt;data);\nif (stack2[top2]-&gt;left != NULL)\n{\nstack1[++top1] = (PtrToNode)malloc(sizeof(struct node));\nstack1[top1] = stack2[top2]-&gt;left;\n}\nif (stack2[top2]-&gt;right != NULL)\n{\nstack1[++top1] = (PtrToNode)malloc(sizeof(struct node));                    stack1[top1] = stack2[top2]-&gt;right;\n}\nfree(stack2[top2--]);\n}\n}\ncnt++;\n}\nprintf(\"\\n\");\n}\n</code></pre></p> <p>\u6211\u611f\u89c9\u597d\u50cf\u6ca1\u6709\u5fc5\u8981\u5728<code>Traversal()</code>\u51fd\u6570\u91cc\u4f7f\u7528<code>malloc()</code>\uff0c\u56e0\u4e3a\u6211\u5df2\u7ecf\u5f00\u4e86\u5927\u5c0f\u786e\u5b9a\u7684\u6570\u7ec4\u4e86\ud83e\udd14</p>"},{"location":"notebooks/fds/6/","title":"Chap 6 Priority Queues(Heaps)","text":":material-circle-edit-outline: \u7ea6 3406 \u4e2a\u5b57 :fontawesome-solid-code: 227 \u884c\u4ee3\u7801 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f  <p>When to use heap? \u5f53\u6211\u4eec\u53ea\u5173\u5fc3\u4e00\u4e2a\u5217\u8868\u4e2d\u6700\u5c0f\uff08\u5927\uff09\u7684\u5143\u7d20\u65f6\uff08\u9891\u7e41\u67e5\u627e\u6216\u4f7f\u7528\uff09\uff0c\u6211\u4eec\u5e94\u4f18\u5148\u4f7f\u7528\u5806</p>"},{"location":"notebooks/fds/6/#adt-model","title":"ADT Model","text":"<p>\u4f18\u5148\u961f\u5217\uff08\u5806\uff09 + \u5bf9\u8c61(Objects)\uff1a\u542b\u67090\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u7684\u6709\u9650\u6709\u5e8f\u8868 + \u8fd0\u7b97(Operations)\uff1a     + <code>PriorityQueue Initialize(int MaxElements);</code>     + <code>void Insert(ElementType X, PriorityQueue H);</code>\u2757     + <code>ElmentType DeleteMin(PriorityQueue H);</code>\u2757     + <code>ElementType FindMin(PriorityQueue H);</code></p>"},{"location":"notebooks/fds/6/#simple-implementation","title":"Simple Implementation","text":"<ul> <li>\u6570\u7ec4<ul> <li>\u63d2\u5165\uff1a\u5728\u5c3e\u90e8\u6dfb\u52a0\u9879~\\(\\Theta(1)\\)</li> <li>\u5220\u9664\uff1a\u627e\u6700\u5927/\u6700\u5c0f\u7684\u952e<sub>\\(\\Theta(n)\\)\uff1b\u5220\u9664\u9879\u540e\u79fb\u52a8\u5269\u4f59\u9879</sub>\\(O(n)\\)</li> </ul> </li> <li>\u94fe\u8868\uff1a<ul> <li>\u63d2\u5165\uff1a\u5728\u5934\u90e8\u6dfb\u52a0\u9879~\\(\\Theta(1)\\)</li> <li>\u5220\u9664\uff1a\u627e\u6700\u5927/\u6700\u5c0f\u7684\u952e<sub>\\(\\Theta(n)\\)\uff1b\u5220\u9664\u9879</sub>\\(\\Theta(1)\\)</li> </ul> </li> <li>\u6709\u5e8f\u6570\u7ec4\uff1a<ul> <li>\u63d2\u5165\uff1a\u627e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e<sub>\\(O(n)\\)\uff1b\u79fb\u52a8\u6570\u7ec4\u5e76\u52a0\u5165\u8be5\u9879</sub>\\(O(n)\\)</li> <li>\u5220\u9664\uff1a\u79fb\u9664\u9996\u9879/\u672b\u9879~\\(\\Theta(1)\\)</li> </ul> </li> <li>\u6709\u5e8f\u94fe\u8868\uff1a<ul> <li>\u63d2\u5165\uff1a\u627e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e<sub>\\(O(n)\\)\uff1b\u52a0\u5165\u9879</sub>\\(\\Theta(1)\\)</li> <li>\u5220\u9664\uff1a\u79fb\u9664\u9996\u9879/\u672b\u9879~\\(\\Theta(1)\\)</li> </ul> </li> </ul> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e9b\u7ed3\u6784\u5b9e\u73b0\u8d77\u6765\u76f8\u5bf9\u6bd4\u8f83\u5bb9\u6613\uff0c\u4e14\u5404\u6709\u4f18\u52a3\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u63d2\u5165\u7684\u64cd\u4f5c &gt; \u5220\u9664\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u672c\u6559\u6750\u7684\u4f5c\u8005\u4f1a\u5728\u8fd9\u56db\u79cd\u65b9\u6cd5\u4e2d\u9009\u62e9\u94fe\u8868\u3002</p> <p>What about BST(\u4e8c\u5206\u641c\u7d22\u6811)\uff1f \u4e8c\u5206\u641c\u7d22\u6811\u6709\u4ee5\u4e0b\u95ee\u9898\uff1a + \u867d\u7136\u7406\u8bba\u4e0a\u5b83\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)\uff0c\u7136\u800c\u5b9e\u9645\u5e94\u7528\u4e2d\u63d2\u5165\u64cd\u4f5c\u662f\u968f\u673a\u7684\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6811\u7684\u4e0d\u5e73\u8861\uff0c\u4ece\u800c\u5f71\u54cd\u65f6\u95f4\u590d\u6742\u5ea6 + \u867d\u7136\u5220\u9664\u64cd\u4f5c\u5e76\u4e0d\u662f\u968f\u673a\u7684\uff0c\u4f46\u6211\u4eec\u53ea\u8981\u627e\u6700\u5c0f\u8282\u70b9\u5e76\u4e14\u5220\u9664\u5b83\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5de6\u5b50\u6811\u8d8a\u6765\u8d8a\u5c0f\uff0c\u7834\u574f\u4e86\u6811\u7684\u5e73\u8861\uff0c\u4ece\u800c\u5f71\u54cd\u590d\u6742\u5ea6 + \u6211\u4eec\u53ef\u80fd\u60f3\u5230\u6784\u5efa\u4e00\u68f5\u5e73\u8861\u7684\u6811\uff0c\u6bd4\u5982AVL\u6811\u3002\u4f46\u662fAVL\u6811\u4e2d\u7684\u5f88\u591a\u64cd\u4f5c\u5728\u4f18\u5148\u961f\u5217\u4e2d\u7528\u4e0d\u5230\uff0c\u4e14\u5b83\u7684\u6307\u9488\u4f7f\u7528\u5f88\u5371\u9669\u3002 </p> <p>\u56e0\u6b64\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u65b0\u7684\u6570\u636e\u7ed3\u6784\u2014\u2014\u4e8c\u53c9\u5806(binary heap, \u7b80\u79f0\u5806(heap))</p>"},{"location":"notebooks/fds/6/#binary-heap","title":"Binary Heap","text":""},{"location":"notebooks/fds/6/#structure-property","title":"Structure Property","text":"<p>\u5b8c\u5168(Complete)\u4e8c\u53c9\u6811\uff1a\u5bf9\u4e8e\u4e00\u68f5\u6709\\(n\\)\u4e2a\u8282\u70b9\u4e14\u9ad8\u4e3a\\(h\\)\u7684\u6811\uff0c\u5982\u679c\u5b83\u7684\u8282\u70b9\u4e0e\u4e00\u68f5\u9ad8\u4e3a\\(h\\)\u7684\u5b8c\u7f8e\u4e8c\u53c9\u6811(\u5373\u6ee1\u4e8c\u53c9\u6811\uff0cperfect binary tree) \u7684\u8282\u70b9\uff08\u4ece1\u5230\\(n\\)\u6807\u53f7\uff09\u4e00\u4e00\u5bf9\u5e94</p> <p>\u53e6\u4e00\u79cd\u5b9a\u4e49\uff1a\u9664\u4e86\u6700\u540e\u4e00\u5c42\u5916\uff0c\u6bcf\u5c42\u7684\u8282\u70b9\u90fd\u586b\u6ee1\uff0c\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\u4ece\u5de6\u5f80\u53f3\u586b\u8865\u7684\u6811</p> <p>\u4e00\u68f5\u9ad8\u4e3a\\(h\\)\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u6709\\(2^h\\)~\\(2^{h + 1} - 1\\)\u4e2a\u8282\u70b9 \\(\\Leftrightarrow\\) \\(h = \\lfloor \\log N \\rfloor\\)</p> <p>\u56e0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u89c4\u5f8b\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u4e8c\u53c9\u5806\uff0c\u7528\u7d22\u5f15\u627e\u5230\u76f8\u5e94\u8282\u70b9\uff08\u89c1\u4e0b\u9762\u5f15\u7406\uff09\uff0c\u5341\u5206\u7b80\u5355\uff0c\u4f46\u521b\u5efa\u5806\u7684\u65f6\u5019\u8981\u8003\u8651\u6700\u5927\u5bb9\u91cf  \ud83c\udf1f\u5f15\u7406\uff1a\u5982\u679c\u4e00\u68f5\u6709\\(n\\)\u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u987a\u5e8f\u8868\u793a\uff0c\u5219\u5bf9\u4e8e\u7d22\u5f15\u4e3a\\(i(1 \\le i \\le n)\\)\u7684\u8282\u70b9\uff0c\u6211\u4eec\u6709\uff1a + \u7236\u8282\u70b9\u7684\u7d22\u5f15 \\(= \\begin{cases} \\lfloor \\dfrac{i}{2} \\rfloor &amp; \\text{if } i \\ne 1 \\\\ \\text{None} &amp; \\text{if } i = 1\\end{cases}\\)</p> <p>\u5f88\u5de7\u7684\u662f\uff0cC\u8bed\u8a00\u7684\u6574\u6570\u9664\u6cd5\u81ea\u52a8\u5e2e\u6211\u4eec\u5411\u4e0b\u53d6\u6574\uff0c\u56e0\u6b64\u76f4\u63a5\u9664\u5c31\u884c\u4e86 + \u5de6\u5b69\u5b50\u7684\u7d22\u5f15 \\(= \\begin{cases} 2i &amp; \\text{if } 2i \\le n \\\\ \\text{None} &amp; \\text{if } 2i &gt; n\\end{cases}\\) + \u53f3\u5b69\u5b50\u7684\u7d22\u5f15 \\(= \\begin{cases} 2i + 1 &amp; \\text{if } 2i + 1 \\le n \\\\ \\text{None} &amp; \\text{if } 2i + 1 &gt; n\\end{cases}\\) \u6ce8\uff1a\u7d22\u5f15\u4ece1\u5f00\u59cb\uff0c\u53ea\u662f\u4e3a\u4e86\u5f97\u5230\u4e0a\u9762\u770b\u8d77\u6765\u633a\u597d\u770b\u7684\u5f15\u7406\u3002\u4f46\u8fd9\u6837\u505a\u540e\uff0c\u7d22\u5f15\u4e3a0\u7684\u4f4d\u7f6e\u5c31\u7a7a\u51fa\u6765\u4e86\u3002\u6211\u4eec\u4e4b\u540e\u4f1a\u5229\u7528\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u4f5c\u4e3a\u54e8\u5175(sentinel)\uff08\u5c06\u5176\u8bbe\u4e3a\u6574\u4e2a\u5806\u7684\u6700\u5c0f\u503c\uff09\uff0c\u65b9\u4fbf\u540e\u9762\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c</p> <pre><code>struct HeapStruct\n{\n/* Maximum # that can fit in the heap */\nunsigned int max_heap_size;\n/* Current # of elements in the heap */\nunsigned int size;\nelement_type *elements;\n};\ntypedef struct HeapStruct *PriorityQueue;\n</code></pre>"},{"location":"notebooks/fds/6/#initialize","title":"Initialize","text":"<pre><code>PriorityQueue Initiailize(int MaxElments)\n{\nPriorityQueue H;\nif (MaxElements &lt; MinPQSize)\nreturn Error(\"Priority queue size is too small\");\nH = (PriorityQueue)malloc(sizeof(struct HeapStruct));\nif (H == NULL)\nreturn FatalError(\"Out of Space!!!\");\n// Allocate the array plus one extra for sentinel\nH-&gt;Elements = (ElementType * )malloc((MaxElements + 1) * sizeof(ElementType));\nif (H-&gt;Elements == NULL)\nreturn FatalError(\"Out of Space!!!\");\nH-&gt;Capacity = MaxElements;\nH-&gt;Size = 0;\nH-&gt;Elements[0] = MinData;  // set the sentinel\nreturn H;\n}\n</code></pre>"},{"location":"notebooks/fds/6/#heap-order-property","title":"Heap Order Property","text":"<ul> <li>\u6700\u5c0f\u6811(min tree)\uff1a\u4e00\u68f5\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u952e\u503c\u4e0d\u5927\u4e8e\u5b83\u7684\u5b69\u5b50</li> <li>\u6700\u5c0f\u5806(min heap)\uff1a\u5b8c\u5168\u4e8c\u53c9\u6811 + \u6700\u5c0f\u6811 <p>\u6211\u4eec\u4e5f\u80fd\u4ee5\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5b9a\u4e49\u6700\u5927\u5806\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5199\u51fa\u6765\u4e86</p> </li> </ul> <p></p> <p>\u6ce8\uff1a + \u663e\u800c\u6613\u89c1\uff0c\u6839\u8282\u70b9\u662f\u5806\u4e2d\u6700\u5c0f(\u5927)\u7684\u8282\u70b9 + \u4ece\u5806\u7684\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u5230\u4efb\u610f\u8282\u70b9\u7684\u8def\u5f84\u662f\u6709\u5e8f\u7684\u3002\u4f46\u662f\u5806\u4e0d\u80fd\u8868\u793a\u6574\u68f5\u6811\u7684\u987a\u5e8f</p>"},{"location":"notebooks/fds/6/#basic-heap-operations","title":"Basic Heap Operations","text":""},{"location":"notebooks/fds/6/#insertion","title":"Insertion","text":"<p>\u601d\u8def\uff1a\u56e0\u4e3a\u8981\u4fdd\u6301\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u552f\u4e00\u53ef\u63d2\u5165\u8282\u70b9\u7684\u4f4d\u7f6e\u662f\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002\u63d2\u5165\u4ee5\u540e\u8981\u8c03\u6574\u8282\u70b9\u7684\u4f4d\u7f6e\uff1a\u5c06\u8be5\u8282\u70b9\u4e0e\u5176\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u7236\u8282\u70b9\u5c0f\uff0c\u5219\u5c06\u7236\u8282\u70b9\u5f80\u4e0b\u79fb\uff0c\u76f4\u81f3\u6bd4\u5f53\u524d\u6bd4\u8f83\u7684\u8282\u70b9\u66f4\u5927\u5219\u505c\u6b62\uff0c\u6b64\u65f6\u7684\u4f4d\u7f6e\u5373\u4e3a\u65b0\u8282\u70b9\u7684\u4f4d\u7f6e\u3002\u8fd9\u79cd\u6280\u5de7\u88ab\u79f0\u4e3a\u201c\u4e0a\u6ee4(Percolate up) \u201d\u3002</p> <p>\u56fe\u793a\uff1a </p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>// H-&gt;Elements[0] is a sentinel\nvoid Insert(ElementType X, PriorityQueue H)\n{\nint i;\nif (IsFull(H))\n{\nError(\"Priority queue is full\");\nreturn;\n}\nfor (i = ++H-&gt;Size; H-&gt;Elements[i / 2] &gt; X; i /= 2)\nH-&gt;Elements[i] = H-&gt;Elements[i / 2];\nH-&gt;Elements[i] = X;\n}\n</code></pre></p> <p>\u6ce8\uff1a 1. \u5728\u6bd4\u8f83\u8fc7\u7a0b\u4e2d\uff0c\u5e76\u6ca1\u6709\u76f4\u63a5\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u56e0\u4e3a\u5b9e\u73b0\u4e00\u6b21\u4ea4\u6362\u5c31\u9700\u8981\u4e09\u6761\u8d4b\u503c\u8bed\u53e5\u3002\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5411\u4e0a\u79fb\u52a8\\(d\\)\u5c42\uff0c\u5219\u9700\u8981\u6267\u884c\\(3d\\)\u6b21\u8fd0\u7b97\uff1b\u800c\u4e0a\u9762\u7684\u65b9\u6cd5\u53ea\u9700\\(d + 1\\)\u6b21\u8fd0\u7b97\uff0c\u663e\u7136\u66f4\u5feb 2. \u6b63\u5982\u4e0a\u9762\u6240\u8bf4\uff0c0\u4f4d\u7f6e\u7684\u8282\u70b9\u88ab\u79f0\u4e3a\u54e8\u5175\uff0c\u5c06\u5b83\u7684\u503c\u8bbe\u4e3a\u6574\u4e2a\u5806\u7684\u6700\u5c0f\u503c\u3002\u6709\u4e86\u5b83\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u7528\u201c<code>while</code>\u5faa\u73af+\u6839\u8282\u70b9\u4f4d\u7f6e\u7279\u5224\u201c\u8fd9\u4e48\u9ebb\u70e6\uff0c\u5bf9\u5f85\u6839\u8282\u70b9\u4e5f\u80fd\u50cf\u5bf9\u5f85\u5176\u4ed6\u8282\u70b9\u4e00\u6837\uff0c\u56e0\u6b64\u53ea\u8981\u7528\u7b80\u5355\u7684<code>for</code>\u5faa\u73af\u5c31\u80fd\u5b9e\u73b0 3. \\(T(N) = O(\\log N)\\)</p>"},{"location":"notebooks/fds/6/#deletemin","title":"DeleteMin","text":"<p>\u601d\u8def\uff1a\u8981\u627e\u5230\u6700\u5c0f\u503c\u975e\u5e38\u7b80\u5355\u2014\u2014\u5c31\u662f\u9996\u9879\u3002\u4f46\u662f\u5220\u9664\u9996\u9879\u540e\uff0c\u8fd8\u662f\u8981\u4fdd\u8bc1\u8be5\u6811\u662f\u5b8c\u5168\u4e8c\u53c9\u6811+\u6700\u5c0f\u6811\u3002\u56e0\u6b64\u5b9e\u9645\u4e0a\u6211\u4eec\u5e94\u5220\u9664\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u8003\u8651\u5982\u4f55\u5b89\u7f6e\u539f\u6765\u5728\u6700\u540e\u4f4d\u7f6e\u4e0a\u7684\u8282\u70b9\uff1a\u5148\u5c06\u5b83\u653e\u5165\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\uff08\u56e0\u4e3a\u201d\u5220\u9664\u201c\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u7a7a\u51fa\u6765\u4e86\uff09\uff0c\u518d\u8ba9\u5b83\u548c\u5de6\u53f3\u5b69\u5b50\u6bd4\u8f83\u3002\u5982\u679c\u6bd4\u5de6\u53f3\u5b69\u5b50\u90fd\u5927\uff0c\u5219\u8981\u5c06\u6700\u5c0f\u7684\u5b69\u5b50\u653e\u5165\u6839\u8282\u70b9\uff0c\u63a5\u7740\u5c06\u5b83\u4e0e\u8fd9\u4e2a\u5b69\u5b50\u7684\u5de6\u53f3\u5b69\u5b50\u6bd4\u8f83\uff0c\u2026\u2026\uff0c\u76f4\u81f3\u6bd4\u5de6\u53f3\u5b69\u5b50\u90fd\u5c0f\u4e3a\u6b62\u3002\u8fd9\u79cd\u6280\u5de7\u88ab\u79f0\u4e3a\u201d\u4e0b\u6ee4(Percolate down) \u201c</p> <p>\u56fe\u793a\uff1a  </p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>ElementType DeleteMin(PriorityQueue H)\n{\nint i, Child;\nElementType MinElement, LastElment;\nif (isEmpty(H))\n{\nError(\"Priority queue is empty\");\nreturn H-&gt;Elements[0];\n}\nMinElement = H-&gt;Elements[1];   // save the min element\nLastElment = H-&gt;Elements[H-&gt;Size--];  // take last and reset size\nfor (i = 1; i * 2 &lt;= H-&gt;Size; i = Child)  // find smaller child\n{\nChild = i * 2;\nif (Child != H-&gt;Size &amp;&amp; H-&gt;Elements[Child + 1] &lt; H-&gt;Elements[Child]) // percolate one level\nChild++;\nif (LastElement &gt; H-&gt;Elements[Child]);\nelse break;  // find the proper position\n}\nH-&gt;Elements[i] = LastElement;\nreturn MinElement;\n}\n</code></pre></p> <p>\u6ce8\uff1a 1. <code>for</code>\u5faa\u73af\u4e2d\u7684\u7b2c\u4e00\u4e2a<code>if</code>\u8bed\u53e5\u8003\u8651\u4e86\u53ea\u6709\u4e00\u4e2a\u5de6\u5b69\u5b50\u7684\u8282\u70b9\u7684\u60c5\u51b5\uff1a\u6ca1\u6709\u8fd9\u53e5\u8bdd\u7684\u8bdd\uff0c\u7a0b\u5e8f\u4f1a\u9ed8\u8ba4\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b69\u5b50\uff0c\u663e\u7136\u4f1a\u5bfc\u81f4\u9519\u8bef\uff1b\u540c\u65f6\uff0c\u5b83\u4e5f\u9009\u62e9\u4e86\u6700\u5c0f\u7684\u5b69\u5b50\u4f5c\u4e3a\u63a5\u4e0b\u6765\u7684\u6bd4\u8f83\u5bf9\u8c61 2. \u53ef\u4ee5\u4f7f\u7528\u53e6\u4e00\u4e2a\u54e8\u5175\u6765\u79fb\u9664\u8fd9\u4e2a<code>if</code>\u8bed\u53e5\uff1a\u5bf9\u4e8e\u8282\u70b9\u603b\u6570\u4e3a\u5076\u6570\u7684\u5806(\u7531\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\u77e5\uff0c\u6b64\u65f6\u5b58\u5728\u4e00\u4e2a\u53ea\u6709\u5de6\u5b69\u5b50\u7684\u8282\u70b9)\uff0c\u5728\u6700\u540e\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u5c06\u5176\u503c\u8bbe\u4e3a\u6574\u4e2a\u5806\u7684\u6700\u5927\u503c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u9632\u6b62\u67d0\u4e2a\u8282\u70b9\u4e0b\u6ee4\u7684\u65f6\u5019\u88ab\u5b89\u7f6e\u5728\u4e0d\u5b58\u5728\u7684\u8282\u70b9\u4e0a\uff0c\u800c\u4e0d\u9700\u8981\u7279\u5224 3. \\(T(N) = O(\\log N)\\)</p>"},{"location":"notebooks/fds/6/#other-heap-operations","title":"Other Heap Operations","text":"<p>\u6ce8\uff1a 1. \u5982\u679c\u6211\u4eec\u60f3\u8981\u9891\u7e41\u5730\u67e5\u627e\u67d0\u4e2a\u5217\u8868\u4e2d\u7684\u4efb\u610f\u5143\u7d20\uff0c\u90a3\u4e48\u5806\u7edd\u5bf9==\u4e0d\u662f==\u5408\u7406\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5728\u5806\u91cc\u627e\u5143\u7d20\u9700\u8981\u7ebf\u6027\u626b\u63cf(\\(O(n)\\))\u3002\u6211\u4eec\u5e94\u8be5\u91c7\u7528\u4e8c\u5206\u641c\u7d22\u6811\u3001\u6563\u5217\u8868\u7b49\u65b9\u6cd5 2. \u5728\u6700\u5c0f\u5806\u4e2d\u627e\u6700\u5927\u503c\u4e5f\u662f\u4e0d\u5408\u7406\u7684\uff0c\u7406\u7531\u540c\u4e0a</p> <p>\\(DecreaseKey(P, \\Delta, H)\\)</p> <p>\u5c06\u4f4d\u7f6e\u4e3a\\(P\\)\u7684\u8282\u70b9\u7684\u952e\u503c\u51cf\u53bb\\(\\Delta\\)\uff0c\u8fd9\u6837\u5bf9\u5e94\u8282\u70b9\u7684\u4f18\u5148\u7ea7\u5c31\u4f1a\u63d0\u9ad8\uff08\u4e0a\u6ee4\uff09</p> <p>\\(IncreaseKey(P, \\Delta, H)\\)</p> <p>\u5c06\u4f4d\u7f6e\u4e3a\\(P\\)\u7684\u8282\u70b9\u7684\u952e\u503c\u52a0\u4e0a\\(\\Delta\\)\uff0c\u8fd9\u6837\u5bf9\u5e94\u8282\u70b9\u7684\u4f18\u5148\u7ea7\u5c31\u4f1a\u4e0b\u964d\uff08\u4e0b\u6ee4\uff09</p> <p>\u6ce8\uff1a\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e00\u822c\u7531\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u800c\u975e\u4e00\u822c\u7684\u7528\u6237\u4f7f\u7528\u3002\u6bd4\u5982\uff0c\u524d\u8005\u53ef\u4f7f\u67d0\u4e2a\u7a0b\u5e8f\u63d0\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\uff1b\u540e\u8005\u53ef\u5c06\u5360\u7528CPU\u65f6\u95f4\u8fc7\u591a\u7684\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u5f80\u4e0b\u8c03</p> <p>\\(Delete(P, H)\\)</p> <p>\u4ece\u5806\u4e2d\u79fb\u9664\u4f4d\u7f6e\u4e3a\\(P\\)\u7684\u8282\u70b9\uff08\u5220\u9664\u7531\u7528\u6237\u7ec8\u6b62\uff08\u975e\u6b63\u5e38\u7ed3\u675f\uff09\u7684\u8fdb\u7a0b\uff09\u3002\u770b\u4f3c\u5f88\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u8fd0\u7528\u4e4b\u524d\u7684<code>DecreaseKey()</code>\u548c<code>DeleteMin()</code>\u51fd\u6570\uff0c\u5176\u4e2d\u524d\u8005\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee4\u4e3a\\(\\infty\\)\uff08\u51cf\u53bb\u65e0\u9650\u5927\u7684\u6570\uff0c\u6210\u4e3a\u6700\u5c0f\u7684\u6570\uff0c\u7136\u540e\u5229\u7528<code>DeleteMin()</code>\uff09</p> <p>\\(BuildHeap(H)\\)</p> <p>\u9898\u76ee\uff1a\u5c06\u67d0\u4e2a\u5217\u8868\u4e2d\u7684\u4e00\u7ec4\u6570\u653e\u5165\u7a7a\u7684\u5806\u4e2d \u65b9\u6cd5\uff1a + \u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u4f7f\u7528<code>Insert()</code>\u51fd\u6570 \\(\\rightarrow O(N\\log N)\\) \uff1f\u274c + \u91c7\u7528\u201c\u4e0b\u6ee4\u201d\u601d\u60f3\uff1a\u73b0\u5c06\u8868\u4e2d\u7684\u5143\u7d20\u6309\u5c42\u5e8f\u653e\u5165\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u7136\u540e\u4ece\u9ad8\u5ea6\u4e3a1\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff08\u6700\u5e95\u5c42\u9ad8\u5ea6\u4e3a0\uff09\uff0c\u8ddf\u5b50\u6811\u6bd4\u8f83\u5927\u5c0f\uff0c\u5982\u679c\u6bd4\u5b50\u6811\u5927\uff0c\u5219\u9700\u8981\u4e0b\u6ee4\uff0c\u76f4\u81f3\u5408\u9002\u7684\u4f4d\u7f6e\uff08\u5177\u4f53\u5b9e\u73b0\u53ef\u501f\u9274<code>DeleteMin()</code>\uff09</p> <p>\u56fe\u793a\uff1a    </p> <p>\u7b80\u5355\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>for (i = N / 2; i &gt; 0; i--)\nPercolateDown(i);\n</code></pre></p> <p>\u5b9a\u7406\uff1a\u5bf9\u4e8e\u4e00\u68f5\u9ad8\u4e3a\\(h\\)\uff0c\u62e5\u6709\\(2^{h+1}-1\\)\u4e2a\u8282\u70b9\u7684\u5b8c\u7f8e\u4e8c\u53c9\u6811\uff0c\u6240\u6709\u8282\u70b9\u9ad8\u5ea6\u4e4b\u548c\u4e3a\\(2^{h+1} - 1 - (h+1)\\)</p> <p>\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa<code>BuildHeap(H)</code>\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N)\\)</p>"},{"location":"notebooks/fds/6/#applications-of-priority-queues","title":"Applications of Priority Queues","text":"<p>\u4e3e\u4f8b\uff1a + \u64cd\u4f5c\u7cfb\u7edf\uff08\u89c1[[Chap 6 Priority Queues(Heaps)#Other Heap Operations|\u8fd9\u91cc]]\uff09 + \u5916\u90e8\u6392\u5e8f\uff08\u7b2c7\u7ae0\uff09 + [[Chap 3 Algorithms#^19ef1a|\u8d2a\u5fc3\u7b97\u6cd5]] + \u79bb\u6563\u4e8b\u4ef6\u6a21\u62df\uff08\u89c1\u4e0b\u9762\u7684\u4f8b\u5b50\uff09</p>"},{"location":"notebooks/fds/6/#the-selection-problem","title":"The Selection Problem","text":"<p>\u95ee\u9898\uff1a\u7ed9\u5b9a\\(N\\)\u4e2a\u5143\u7d20\uff0c\u627e\u5230\u7b2c\\(k\\)\u5927\u7684\u5143\u7d20</p> <p>\u7b97\u6cd5\uff1a \u5728\u7b2c\u4e00\u7ae0\u4e2d\uff0c\u5df2\u7ecf\u7ed9\u51fa\u4e24\u4e2a\u7b97\u6cd5\uff0c\u6613\u4e8e\u7406\u89e3\u4f46\u6548\u7387\u4e0d\u9ad8\uff1a 1. \u5bf9\u6240\u6709\u5143\u7d20\u6392\u597d\u5e8f\uff0c\u518d\u627e\u7b2c\\(k\\)\u5927\u7684\u6570 \\(\\rightarrow O(N^2)\\) 2. \u5148\u53d6\u524d\\(k\\)\u4e2a\u6570\u5e76\u5bf9\u8fd9\u4e9b\u6570\u6392\u597d\u5e8f\uff0c\u518d\u5c06\u5269\u4f59\\(N - k\\)\u4e2a\u6570\u5206\u522b\u4e0e\u8fd9\\(k\\)\u4e2a\u6570\u6bd4\u8f83\uff1a\u5982\u679c\u6bd4\u8fd9\\(k\\)\u4e2a\u6570\u4e2d\u6700\u5c0f\u7684\u6570\u66f4\u5927\uff0c\u5c06\u6700\u5c0f\u7684\u6570\u8e22\u51fa\u53bb\uff0c\u8fd9\u4e2a\u6570\u8fdb\u53bb\u5e76\u653e\u5165\u6b63\u786e\u7684\u4f4d\u7f6e\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N \\cdot k)\\)\uff0c\u6700\u574f\u60c5\u51b5\\(k = \\lceil N/2 \\rceil\\)\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N^2)\\)</p> <p>\u5229\u7528\u6211\u4eec\u521a\u5b66\u7684\u5806\uff0c\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u590d\u6742\u5ea6\u5747\u4e3a\\(O(N \\log N)\\)\u7684\u7b97\u6cd5\uff1a 3. \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u8fd9\u91cc\u6211\u4eec\u8ba8\u8bba\u627e\u7b2c\\(k\\)\u5c0f\u7684\u6570\uff08\u9053\u7406\u90fd\u662f\u4e00\u6837\u7684\uff09\u3002\u5148\u5bf9\u8fd9\\(N\\)\u4e2a\u5143\u7d20\u6784\u5efa\u5806(\u4f7f\u7528<code>BuildHeap()</code>\u51fd\u6570)\uff0c\u7136\u540e\u4f7f\u7528\\(k\\)\u6b21<code>DeleteMin()</code>\u51fd\u6570\uff0c\u6700\u540e\u4e00\u6b21\u4ece\u5806\u4e2d\u5f97\u5230\u7684\u5143\u7d20\u4fbf\u662f\u6211\u4eec\u60f3\u8981\u7684\u7b2c\\(k\\)\u5c0f\u7684\u5143\u7d20\u3002\u65f6\u95f4\u590d\u6742\u5ea6\\(O(N + k \\log N)\\)\uff0c\u6700\u574f\u60c5\u51b5\u4e3a\\(k = \\lceil N/2 \\rceil\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\Theta(N \\log N)\\) 4. \u501f\u9274\u7b97\u6cd52\u7684\u601d\u60f3\uff0c\u5148\u5bf9\u524d\\(k\\)\u4e2a\u6570\u6784\u5efa\u5806(\u4f7f\u7528<code>BuildHeap()</code>\u51fd\u6570)\uff0c\u7136\u540e\u5c06\u5269\u4e0b\\(N - k\\)\u4e2a\u5143\u7d20\u4e0e\u5806\u4e2d\u6839\u8282\u70b9(\u6700\u5c0f\u503c)\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u5b83\u5927\uff0c\u5219\u9700\u8981\u4f7f\u7528<code>DeleteMin()</code>\u548c<code>Insert()</code>\u4e24\u4e2a\u51fd\u6570\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(k + (N - k)\\log k) = O(N \\log k)\\)\uff0c\u6700\u574f\u60c5\u51b5\u4e3a\\(\\Theta(N \\log N)\\)</p>"},{"location":"notebooks/fds/6/#event-simulation","title":"Event Simulation","text":"<p>\u95ee\u9898\uff1a\u5728\u94f6\u884c\u4e2d\uff0c\u987e\u5ba2\u6392\u5728\u4e00\u5217\u961f\u4f0d\u4e2d\uff0c\u7b49\u5f85\\(k\\)\u4f4d\u51fa\u7eb3\u5458\u4e2d\u7684\u4e00\u4f4d\u6709\u7a7a\u3002\u5206\u6790\u6bcf\u4f4d\u987e\u5ba2\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u3001\u961f\u4f0d\u7684\u957f\u5ea6</p> <p>\u5206\u6790\uff1a \u8be5\u6a21\u62df\u4e2d\u5305\u542b\u4e24\u4e2a\u4e8b\u4ef6\uff1a\u987e\u5ba2\u5230\u8fbe\u94f6\u884c\uff0c\u987e\u5ba2\u79bb\u5f00\u94f6\u884c\uff08\u4e00\u4f4d\u51fa\u7eb3\u5458\u56e0\u6b64\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\uff09</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6982\u7387\u51fd\u6570\u4ea7\u751f\u8f93\u5165\u6d41\uff0c\u8be5\u8f93\u5165\u6d41\u5305\u542b\u4e00\u7ec4\u6709\u5230\u8fbe\u65f6\u95f4\u548c\u670d\u52a1\u65f6\u95f4\u7684\u6709\u5e8f\u5bf9\uff0c\u6309\u5230\u8fbe\u65f6\u95f4\u6392\u5e8f\u3002\u6211\u4eec\u4e0d\u91c7\u7528\u7cbe\u786e\u7684\u65f6\u95f4\uff0c\u800c\u662f\u4ee5tick\u4f5c\u4e3a\u8ba1\u65f6\u5355\u4f4d\u3002\u5f00\u59cb\u65f6\uff0c\u5c06tick\u521d\u59cb\u5316\u4e3a0\uff1b\u5f53\u6ca1\u6709\u987e\u5ba2\u8fdb\u6765\u4e14\u6240\u6709\u51fa\u7eb3\u5458\u90fd\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u65f6\uff0c\u6a21\u62df\u7ed3\u675f\u3002</p> <p>\u5982\u679c\u6211\u4eec\u901a\u8fc7\u5faa\u73af\u6bcf\u4e2atick\u6765\u5904\u7406\u6574\u4e2a\u7a0b\u5e8f\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd0\u884c\u65f6\u95f4\u8ddf\u987e\u5ba2\u548c\u65f6\u95f4\u7684\u6570\u91cf\u65e0\u5173\uff0c\u800c\u4e14\u8fd0\u884c\u6548\u7387\u5f88\u4f4e\u3002\u56e0\u6b64\u6211\u4eec\u6839\u636e\u6700\u8fd1\u65f6\u95f4\u53d1\u751f\u7684\u4e8b\u4ef6\u6765\u589e\u52a0tick\uff0c\u8fd9\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\u4e0b\u4e00\u4f4d\u987e\u5ba2\u7684\u5230\u6765\uff0c\u6709\u4e00\u4f4d\u987e\u5ba2\u79bb\u5f00\u3002</p> <p>\u5bf9\u4e8e\u6b63\u5728\u6392\u961f\u7684\u987e\u5ba2\uff0c\u6211\u4eec\u7528\u961f\u5217\u6765\u5b58\u50a8\uff1b\u5bf9\u4e8e\u6bcf\u4f4d\u987e\u5ba2\u79bb\u5f00\u65f6\u95f4\u7684\u5b58\u50a8\uff0c\u6211\u4eec\u7528\u4f18\u5148\u961f\u5217\u5b58\u50a8\uff0c\u4ee5\u4fbf\u6211\u4eec\u627e\u5230\u6700\u8fd1\u53d1\u751f\u7684\u4e8b\u4ef6\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(C \\log(k + 1))\\)</p>"},{"location":"notebooks/fds/6/#d-heaps","title":"d-Heaps","text":"<p>\u5bf9\u4e8e\u8fd9\u79cd\u5806\uff0c\u6240\u6709\u8282\u70b9\u6700\u591a\u6709\\(d\\)\u4e2a\u5b69\u5b50</p> <p></p> <p>\u6ce8\uff1a\\(d\\)\u5e76\u4e0d\u662f\u8d8a\u5927\u8d8a\u597d\uff0c\u7406\u7531\u2014\u2014 1. \u867d\u7136<code>Insert()</code>\u901f\u5ea6\u53d8\u5feb(\\(O(\\log_dN))\\))\uff0c\u4f46<code>DeleteMin()</code>\u8981\u627e\u5230\u6700\u5c0f\u7684\u5b69\u5b50\uff0c\u9700\u8981\\(d - 1\\)\u6b21\u6bd4\u8f83\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u4f1a\u53d8\u6210\\(O(d \\log_d N)\\) 2. \u5728\u627e\u67d0\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b69\u5b50\u6216\u7236\u8282\u70b9\u65f6\uff0c\u4e8c\u53c9\u5806\u4e2d\u7684\\(\\times 2\\)\u6216 /2\u4ec5\u4ec5\u662f\u4e2a\u79fb\u4f4d\u64cd\u4f5c\uff0c\u4f46d-Heap\u4e2d\u7684\\(\\times d\\)\u6216 / d \u5219\u66f4\u52a0\u590d\u6742</p> <p>\u4f18\u52bf\uff1a 1. \u5c31\u5982\u524d\u6587\u6240\u8bf4\uff0c\u63d2\u5165\u64cd\u4f5c\u5f80\u5f80\u6bd4\u5220\u9664\u64cd\u4f5c\u591a\uff0c\u56e0\u6b64\u6211\u4eec\u4ece<code>Insert()</code>\u7684\u63d0\u901f\u4e2d\u83b7\u5f97\u7684\u597d\u5904\u6bd4<code>DeleteMin()</code>\u7684\u964d\u901f\u5e26\u6765\u7684\u5f0a\u7aef\u66f4\u591a 2. \u5982\u679c\u4f18\u5148\u961f\u5217\u592a\u5927\uff0c\u4ee5\u81f3\u4e8e\u4e3b\u5185\u5b58\u65e0\u6cd5\u5bb9\u7eb3\uff0c\u5219d-Heap\u6bd4\u4e8c\u53c9\u5806\u66f4\u6709\u4f18\u52bf\ud83d\ude15</p> <p>\u8865\u5145\uff1a\u5bf9\u4e8e\u8282\u70b9\\(i\\) + \u7236\u8282\u70b9\uff1a\\(\\lfloor \\dfrac{i + d - 2}{d} \\rfloor\\) + \u7b2c\u4e00\u4e2a\u5b69\u5b50\uff1a\\((i - 1)d + 2\\) + \u6700\u540e\u4e00\u4e2a\u5b69\u5b50\uff1a\\(id + 1\\)</p>"},{"location":"notebooks/fds/6/#problems","title":"Problems","text":""},{"location":"notebooks/fds/6/#6-1-percolate-up-and-down","title":"6-1 Percolate Up and Down","text":"<p>Write the routines to do a \"percolate up\" and a \"percolate down\" in a binary min-heap.</p> <p>Format of functions:</p> <pre><code>void PercolateUp( int p, PriorityQueue H );\nvoid PercolateDown( int p, PriorityQueue H );\n</code></pre> <p>where\u00a0<code>int p</code>\u00a0is the position of the element, and\u00a0<code>PriorityQueue</code>\u00a0is defined as the following:</p> <pre><code>typedef struct HeapStruct *PriorityQueue;\nstruct HeapStruct {\nElementType  *Elements;\nint Capacity;\nint Size;\n};\n</code></pre> <p>Sample program of judge:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\ntypedef int ElementType;\n#define MinData -1\ntypedef struct HeapStruct *PriorityQueue;\nstruct HeapStruct {\nElementType  *Elements;\nint Capacity;\nint Size;\n};\nPriorityQueue Initialize( int MaxElements ); /* details omitted */\nvoid PercolateUp( int p, PriorityQueue H );\nvoid PercolateDown( int p, PriorityQueue H );\nvoid Insert( ElementType X, PriorityQueue H ) {\nint p = ++H-&gt;Size;\nH-&gt;Elements[p] = X;\nPercolateUp( p, H );\n}\nElementType DeleteMin( PriorityQueue H ) { ElementType MinElement; MinElement = H-&gt;Elements[1];\nH-&gt;Elements[1] = H-&gt;Elements[H-&gt;Size--];\nPercolateDown( 1, H );\nreturn MinElement; }\nint main()\n{\nint n, i, op, X;\nPriorityQueue H;\nscanf(\"%d\", &amp;n);\nH = Initialize(n);\nfor ( i=0; i&lt;n; i++ ) {\nscanf(\"%d\", &amp;op);\nswitch( op ) {\ncase 1:\nscanf(\"%d\", &amp;X);\nInsert(X, H);\nbreak;\ncase 0:\nprintf(\"%d \", DeleteMin(H));\nbreak;\n}\n}\nprintf(\"\\nInside H:\");\nfor ( i=1; i&lt;=H-&gt;Size; i++ )\nprintf(\" %d\", H-&gt;Elements[i]);\nreturn 0;\n}\n/* Your function will be put here */\n</code></pre> <p>Sample Input:</p> <pre><code>9\n1 10\n1 5\n1 2\n0\n1 9\n1 1\n1 4\n0\n0\n</code></pre> <p>Sample Output:</p> <pre><code>2 1 4 \nInside H: 5 10 9\n</code></pre> <p>my code <pre><code>void PercolateUp( int p, PriorityQueue H )\n{\nint i;\nElementType x = H-&gt;Elements[p];\nfor (i = p; H-&gt;Elements[i / 2] &gt; x; i /= 2)\nH-&gt;Elements[i] = H-&gt;Elements[i / 2];\nH-&gt;Elements[i] = x;\n}\nvoid PercolateDown( int p, PriorityQueue H )\n{\nint i, child;\nElementType last = H-&gt;Elements[p];\nfor (i = p; i * 2 &lt;= H-&gt;Size; i = child)\n{\nchild = i * 2;\nif (child != H-&gt;Size &amp;&amp; H-&gt;Elements[child + 1] &lt; H-&gt;Elements[child])\nchild++;\nif  (last &gt; H-&gt;Elements[child])\nH-&gt;Elements[i] = H-&gt;Elements[child];\nelse break;\n}\nH-&gt;Elements[i] = last;\n}\n</code></pre></p> <p>\u6ce8\uff1a\u8fd9\u9898\u53ef\u4ee5\u4f5c\u4e3a\u6a21\u7248\u8bb0\u5fc6</p>"},{"location":"notebooks/fds/6/#7-1-complete-binary-search-tree","title":"7-1 Complete Binary Search Tree","text":"<p>A Binary Search Tree (BST) is recursively defined as a binary tree which has the following properties:</p> <ul> <li>The left subtree of a node contains only nodes with keys less than the node's key.</li> <li>The right subtree of a node contains only nodes with keys greater than or equal to the node's key.</li> <li>Both the left and right subtrees must also be binary search trees.</li> </ul> <p>A Complete Binary Tree (CBT) is a tree that is completely filled, with the possible exception of the bottom level, which is filled from left to right.</p> <p>Now given a sequence of distinct non-negative integer keys, a unique BST can be constructed if it is required that the tree must also be a CBT. You are supposed to output the level order traversal sequence of this BST.</p> <p>Input Specification:</p> <p>Each input file contains one test case. For each case, the first line contains a positive integer\u00a0N\u00a0(\u22641000). Then\u00a0N\u00a0distinct non-negative integer keys are given in the next line. All the numbers in a line are separated by a space and are no greater than 2000.</p> <p>Output Specification:</p> <p>For each test case, print in one line the level order traversal sequence of the corresponding complete binary search tree. All the numbers in a line must be separated by a space, and there must be no extra space at the end of the line.</p> <p>Sample Input:</p> <pre><code>10\n1 2 3 4 5 6 7 8 9 0\n</code></pre> <p>Sample Output:</p> <pre><code>6 3 8 1 5 7 9 0 2 4\n</code></pre> <p>my code <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#define SIZE 1001\nvoid cbst(int root, int * src, int * dst);\nint cmp(const void * a, const void * b);\nint n, cnt = 1;\nint main()\n{\nint nodes[SIZE];\nint * results;\nint i;\nscanf(\"%d\", &amp;n);\nfor (i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;nodes[i]);\nnodes[0] = -1;\nqsort(nodes, n + 1, sizeof(nodes[0]), cmp);\nresults = (int *)malloc(sizeof(int) * (n + 1));\ncbst(1, nodes, results);\nprintf(\"%d\", results[1]);\nfor (i = 2; i &lt;= n; i++)\nprintf(\" %d\", results[i]);\nreturn 0;\n}\nint cmp(const void * a, const void * b)\n{\nreturn *((int *)a) - *((int *)b); }\nvoid cbst(int root, int * src, int * dst)\n{\nif (root &gt; n)\nreturn;\nint l, r;\nl = root * 2;\nr = root * 2 + 1;\ncbst(l, src, dst);\ndst[root] = src[cnt++];\ncbst(r, src, dst);\n}\n</code></pre></p>"},{"location":"notebooks/fds/7/","title":"Chap 7 Sorting","text":":material-circle-edit-outline: \u7ea6 2637 \u4e2a\u5b57 :fontawesome-solid-code: 215 \u884c\u4ee3\u7801 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f"},{"location":"notebooks/fds/7/#preliminaries","title":"Preliminaries","text":"<p><code>void X_sort(ElementType A[], int N)</code> + <code>N</code>\u5fc5\u987b\u662f\u5408\u6cd5\u7684\u6574\u6570 + \u65b9\u4fbf\u8d77\u89c1\uff0c\u5047\u8bbe\u6570\u7ec4\u5143\u7d20\u90fd\u662f\u6574\u6570 + \u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f(comparison-based sorting)\uff1a\u5047\u5b9a\u5b58\u5728<code>&lt;</code>, <code>&gt;</code>\u8fd0\u7b97\u7b26\uff0c\u4e14\u5b83\u4eec\u662f\u552f\u4e00\u80fd\u591f\u7528\u4e8e\u8f93\u5165\u6570\u636e\u7684\u8fd0\u7b97\u7b26 + \u4ec5\u8003\u8651\u5185\u90e8\u6392\u5e8f(internal sorting) (\u5373\u6574\u4e2a\u6392\u5e8f\u80fd\u5728\u4e3b\u5185\u5b58\u4e2d\u5b8c\u6210)</p>"},{"location":"notebooks/fds/7/#insertion-sort","title":"Insertion Sort","text":"<p>\u63d2\u5165\u6392\u5e8f(insertion sort) \u9700\u8981\u91cd\u590dN - 1\u8d9f\u6392\u5e8f\uff0c\u4eceP = 1\u5230P = N - 1\u3002\u6bcf\u8d9f\u6392\u5e8f\u7ed3\u675f\u540e\u786e\u4fdd\u4f4d\u7f6e\u57280<sub>P\u4e0a\u7684\u5143\u7d20\u662f\u6709\u5e8f\u7684\uff0c\u4e14\u6392\u5e8f\u524d\u5df2\u77e50</sub>P-1\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u662f\u6709\u5e8f\u7684\u3002\u5bf9\u4e8e\u7b2cP\u8d9f\u6392\u5e8f\uff0c\u6211\u4eec\u5c06\u4f4d\u7f6eP\u4e0a\u7684\u5143\u7d20\u5411\u524dP\u4e2a\u5143\u7d20\u79fb\u52a8\uff0c\u76f4\u5230\u53d1\u73b0\u6b63\u786e\u7684\u4f4d\u7f6e\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>void InsertionSort(ElementType A[], int N)\n{\nint j, P;\nElementType Tmp;\nfor (P = 1; P &lt; N; P++)\n{\nTmp = A[P] // the next coming card\nfor (j = P; j &gt; 0 &amp;&amp; A[j - 1] &gt; Tmp; j--)\nA[j] = A[j - 1];\n// shift sorted cards to provide a position for the new coming \n// card\nA[j] = Tmp; // place the new card at the proper position\n} // end for-P-loop\n}\n</code></pre></p> <ul> <li>\u6700\u574f\u60c5\u51b5\uff1a\u8f93\u5165\u7684<code>A[]</code>\u662f\u9006\u5e8f\u7684\uff0c\\(T(N) = O(N^2)\\)</li> <li>\u6700\u597d\u60c5\u51b5\uff1a\u8f93\u5165\u7684<code>A[]</code>\u662f\u987a\u5e8f\u7684\uff0c\\(T(N) = O(N)\\)</li> <li>\u5e73\u5747\u60c5\u51b5\uff1a\\(\\Theta(N^2) = \\sum\\limits_{i = 2}^Ni = 2 + 3 + 4 + \\dots + N\\)</li> </ul>"},{"location":"notebooks/fds/7/#a-lower-bound-for-simple-sorting-algorithms","title":"A Lower Bound for Simple Sorting Algorithms","text":"<p>\u5b9a\u4e49\uff1a\u4e00\u4e2a\u6570\u7ec4\u4e2d\u6570\u5b57\u7684\u9006\u5e8f\u5bf9(inversion) \u662f\u4e00\u4e2a\u6709\u5e8f\u5bf9\\((i, j)\\)\uff0c\u6ee1\u8db3\\(i &lt; j\\)\u4e14\\(A[i] &gt; A[j]\\)</p> <p></p> <p>\u89c2\u5bdf\u53d1\u73b0\uff1a\u6570\u7ec4\u4e2d==\u9006\u5e8f\u5bf9==\u7684\u4e2a\u6570 = \u5176\u63d2\u5165\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u7684==\u4ea4\u6362==\u6b21\u6570</p> <p>\u8bc1\u660e\uff1a\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u5c31\u53ef\u4ee5\u6d88\u53bb\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u9006\u5e8f\u5bf9</p> <p>\u6240\u4ee5\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u53ef\u4ee5\u8868\u793a\u4e3a\\(T(N, I) = O(I + N)\\)\uff0c\u5176\u4e2d\\(I\\)\u662f\u539f\u59cb\u6570\u7ec4\u4e2d\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\u89c2\u5bdf\u53d1\u73b0\uff0c\u5f53\u5217\u8868\u5df2\u7ecf\u6392\u8fc7\u5e8f\u4e86\uff0c\u90a3\u4e48\u8fd9\u6b21\u6392\u5e8f\u7684\u901f\u5ea6\u5c31\u4f1a\u5f88\u5feb</p> <p>\u5b9a\u74061\uff1a\u5bf9\u4e8e\u5305\u542bN\u4e2a\u4e0d\u540c\u6570\u5b57\u7684\u6570\u7ec4\uff0c\u5b83\u7684\u5e73\u5747\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3a\\(\\dfrac{N(N-1)}{4}\\)</p> <p>\u5b9a\u74062\uff1a\u4efb\u4f55\u901a\u8fc7\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u5b9e\u73b0\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\Omega(N^2)\\)</p> <p>\u7531\u8fd9\u4e9b\u5b9a\u7406\uff0c\u6211\u4eec\u77e5\u9053\uff1a\u53ef\u4ee5\u901a\u8fc7\u5728\u6bcf\u6b21\u4ea4\u6362\u4e2d\u6d88\u9664\u591a\u4e2a\u9006\u5e8f\u5bf9\u7684\u65b9\u5f0f\u6765\u63d0\u5347\u6392\u5e8f\u6548\u7387</p>"},{"location":"notebooks/fds/7/#shellsort","title":"Shellsort","text":"<p>\u5e0c\u5c14\u6392\u5e8f(shellsort) \u7684\u5927\u81f4\u539f\u7406\uff1a\u8fd9\u79cd\u7b97\u6cd5\u6bd4\u8f83\u76f8\u9694\u4e00\u5b9a\u8ddd\u79bb\u7684\u5143\u7d20\uff1b\u6bd4\u8f83\u7684\u95f4\u9694\u5728\u7b97\u6cd5\u8fd0\u884c\u65f6\u5c06\u4e0d\u65ad\u51cf\u5c0f\uff0c\u76f4\u5230\u6700\u540e\u6bd4\u8f83\u7684\u662f\u76f8\u90bb\u5143\u7d20\u3002\u56e0\u6b64\u8fd9\u79cd\u6392\u5e8f\u4e5f\u88ab\u79f0\u4e3a\u7f29\u5c0f\u589e\u91cf\u6392\u5e8f(diminishing increment sort)\u3002\u5b83\u662f\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f</p> <p>\ud83c\udf30\uff1a </p> <ul> <li> <p>\u589e\u91cf\u5e8f\u5217(increment sequence)\uff1a\\(h_1 &lt; h_2 &lt; \\dots &lt; h_t(h_1 = 1)\\)</p> </li> <li> <p>\\(h_k\\)-sort\uff1a\u9636\u6bb5\\(k = t, t - 1, \\dots, 1\\)\u7684\u6392\u5e8f\u3002\\(h_k\\)-sort\u540e\uff0c\u53ef\u4ee5\u786e\u4fdd\u5e8f\u5217A\u4e2d\\(\\forall i,\\ A[i] \\le A[i + h_k]\\)</p> <ul> <li>\\(h_k\\)-sorted\u7684\u5e8f\u5217\uff0c\u7ecf\u5386\u4e86\\(h_{k-1}\\)-sort\u540e\uff0c\u4fdd\u6301\\(h_k\\)-sorted</li> <li>\u5177\u4f53\u505a\u6cd5\uff1a\u5bf9\u67d0\u4e2a\u4f4d\u7f6e\u4e3ai\u7684\u5143\u7d20\uff0c\u5728\u4f4d\u7f6e\u4e3a\\(i, i - h_k, i - 2h_k, \\dots\\)\u7684\u5143\u7d20\u4e2d\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\uff0c\u56e0\u6b641\u4e2a\\(h_k\\)-sort\u5305\u542b\\(h_k\\)\u6b21\u72ec\u7acb\u7684\u63d2\u5165\u6392\u5e8f</li> </ul> </li> </ul> <p>\u5e0c\u5c14\u589e\u91cf\u5e8f\u5217(Shell's increment sequence)\uff1a $$ h_t = \\lfloor \\dfrac{N}{2} \\rfloor, h_k = \\lfloor \\dfrac{h_{k+1}}{2} \\rfloor $$ \u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>void Shellsort(ElementType A[], int N)\n{\nint i, j, increment;\nElementType Tmp;\nfor (increment = N / 2; increment &gt; 0; increment /= 2)\n// h sequence\nfor (i = increment; i &lt; N; i++)\n{ // insertion sort\nTmp = A[i];\nfor (j = i; j &gt;= increment; j -= increment)\nif (Tmp &lt; A[j - increment])\nA[j] = A[j - increment];\nelse\nbreak;\nA[j] = Tmp;\n} // end for-l and for-increment loop\n}\n</code></pre></p>"},{"location":"notebooks/fds/7/#worst-case-analysis","title":"Worst-Case Analysis","text":"<p>\u5e0c\u5c14\u6392\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u53d6\u51b3\u4e8e\u589e\u91cf\u5e8f\u5217\u7684\u9009\u62e9</p> <p>\u5b9a\u7406\uff1a\u4f7f\u7528\u5e0c\u5c14\u589e\u91cf\u7684\u5e0c\u5c14\u6392\u5e8f\u7684\u6700\u574f\u8fd0\u884c\u65f6\u95f4\u4e3a\\(\\Theta(N^2)\\)</p> <p>\u6ce8\uff1a\u8bc1\u660e\u90e8\u5206\u89c1\u4e66\u672c\\(P_{224}\\)</p> <p></p> <p>\u6ce8\uff1a\u56e0\u4e3a\u8fd9\u4e9b\u589e\u91cf\u4e0d\u662f\u4e24\u4e24\u4e92\u8d28\u7684\uff0c\u56e0\u6b64\u66f4\u5c0f\u7684\u589e\u91cf\u8d77\u5230\u7684\u4f5c\u7528\u4e0d\u5927</p> <p>\u5e0c\u5df4\u5fb7\u589e\u91cf\u5e8f\u5217(Hibbard's increment sequence)\uff1a $$ h_k = 2^k - 1 $$</p> <p>\u6ce8\uff1a\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e9b\u589e\u91cf\u4e24\u4e24\u4e92\u8d28</p> <p>\u5b9a\u7406\uff1a\u4f7f\u7528\u5e0c\u5df4\u5fb7\u589e\u91cf\u7684\u5e0c\u5c14\u6392\u5e8f\u7684\u6700\u574f\u8fd0\u884c\u65f6\u95f4\u4e3a\\(\\Theta(N^{\\frac{3}{2}})\\)</p> <p>\u6ce8\uff1a\u8bc1\u660e\u90e8\u5206\u89c1\u4e66\u672c\\(P_{225}\\)</p> <p>\u731c\u60f3\uff1a + \\(T_{\\text{avg-Hibbard}}(N) = O(N^{\\frac{5}{4}})\\) + \u585e\u5947\u5a01\u514b(Sedgewick)\u7684\u6700\u4f73\u5e8f\u5217\u662f{1, 5, 19, 41, 109, \u2026}\uff0c\u8fd9\u4e9b\u9879\u8981\u4e48\u6765\u81ea\\(9 \\times 4^i - 9 \\times 2^i + 1\\)\uff0c\u8981\u4e48\u6765\u81ea\\(4^i - 3 \\times 2^i + 1\\)     + \\(T_{avg}(N) = O(N^{\\frac{7}{6}})\\)     + \\(T_{worst}(N) = O(N^{\\frac{4}{3}})\\)</p> <p>\u867d\u7136\u5e0c\u5c14\u6392\u5e8f\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5b83\u7684\u5206\u6790\u76f8\u5f53\u590d\u6742\u3002\u5b83\u9002\u7528\u4e8e\u6392\u5e8f\u4e2d\u7b49\u5927\u7684\u8f93\u5165\u5e8f\u5217(\u6210\u5343\u4e0a\u4e07)</p>"},{"location":"notebooks/fds/7/#heapsort","title":"Heapsort","text":"<p>\u7b97\u6cd51\uff1a <pre><code>Algorithm 1:\n{\nBuildHeap(H);  // O(N)\nfor (i = 0; i &lt; N; i++)\nTmpH[i] = DeleteMin(H);  // O(log N)\nfor (i = 0; i &lt; N; i++)\nH[i] = TmpH[i];  // O(1)\n}\n</code></pre></p> <p>[!caution]  \u95ee\u9898\uff1a\u4f7f\u7528\u4e86\u989d\u5916\u7684\u6570\u7ec4\uff0c\u5360\u7528\u4e86\u66f4\u591a\u7684\u7a7a\u95f4(\u62f7\u8d1d\u4e0d\u5f71\u54cd\u65f6\u95f4\u590d\u6742\u5ea6)</p> <p>[!hint]  \u5982\u4f55\u6539\u8fdb\ud83e\udd14</p> <p>\u89c2\u5bdf\u53d1\u73b0\uff0c\u6bcf\u4f7f\u75281\u6b21<code>DeleteMin</code>\u51fd\u6570\uff0c\u5806\u7684\u89c4\u6a21\u7f29\u5c0f1\uff0c\u800c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u672c\u8be5\u5e9f\u5f03\u7684\u7a7a\u95f4\uff0c\u6765\u5b58\u653e<code>DeleteMin</code>\u5f97\u5230\u7684\u6700\u5c0f\u7684\u6570\u3002\u4f46\u6309\u7167\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6211\u4eec\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u9012\u51cf\u5e8f\u5217\uff1b\u5982\u679c\u8981\u5f97\u5230\u9012\u589e\u5e8f\u5217\uff0c\u9700\u8981\u4f7f\u7528<code>DeleteMax</code>\u51fd\u6570\u3002\u7531\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u7b97\u6cd52\ud83d\udc47</p> <p>\u7b97\u6cd52\uff1a</p> <p>\ud83c\udf30\uff1a </p> <pre><code>// \u8fd9\u91cc\u7684PercDown\u51fd\u6570\u4e0eChap 6 \u7ed9\u51fa\u7684\u7a0d\u6709\u4e0d\u540c(\u56e0\u4e3a\u7d22\u5f15\u7684\u6807\u6ce8)\n#define LeftChild(i) (2 * (i) + 1)\nvoid PercDown(ElementType A[], int i, int N)\n{\nint Child;\nElementType Tmp;\nfor (Tmp = A[i]; LeftChild(i) &lt; N; i = Child)\n{\nChild = LeftChild(i);\nif (Child != N - 1 &amp;&amp; A[Child + 1] &gt; A[Child])\nChild++;\nif (Tmp &lt; A[Child])\nA[i] = A[Child];\nelse\nbreak;\n}\nA[i] = Tmp;\n}\nvoid Heapsort(ElementType A[], int N)\n{\nint i;\nfor (i = N / 2; i &gt;= 0; i--)  // BuildHeap\nPercDown(A, i, N);\nfor (i = N - 1; i &gt; 0; i--)   // DeleteMax\n{\nSwap(&amp;A[0], &amp;A[i]);\nPercDown(A, 0, i);\n}\n}\n</code></pre> <p>\u6ce8\uff1a\u4e0d\u540c\u4e8eChap 6\uff0c\u8fd9\u91cc\u7684\u7d22\u5f15\u4ece0\u5f00\u59cb\u6807\u6ce8</p> <p>\u5806\u6392\u5e8f\u662f\u4e00\u79cd\u6781\u5176\u7a33\u5b9a\u7684\u7b97\u6cd5</p> <p>\u5b9a\u7406\uff1a\u5bf9N\u4e2a\u4e0d\u540c\u9879\u7684\u968f\u673a\u6392\u5217\u8fdb\u884c\u5806\u6392\u5e8f\uff0c\u5e73\u5c40\u6bd4\u8f83\u65f6\u95f4\u4e3a\\(2N \\log N - O(N \\log \\log N)\\)</p> <p>\u6ce8\uff1a\u8bc1\u660e\u89c1\u4e66\u672c\\(P_{229-230}\\)</p> <p>\u6ce8\uff1a\u5c3d\u7ba1\u5806\u6392\u5e8f\u7ed9\u51fa\u4e86==\u6700\u4f73\u7684\u5e73\u5747\u65f6\u95f4==\\(O(N \\log N)\\)\uff0c\u5b9e\u9645\u4e0a\u5b83\u6bd4\u4f7f\u7528Sedgewick\u589e\u91cf\u5e8f\u5217\u7684\u5e0c\u5c14\u6392\u5e8f\u66f4\u6162</p>"},{"location":"notebooks/fds/7/#mergesort","title":"Mergesort","text":"<p>\u5f52\u5e76\u6392\u5e8f(merge sort)\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\\(O(N \\log N)\\)\uff0c\u5b83\u662f\u9012\u5f52\u7b97\u6cd5\u7684\u5178\u4f8b\uff0c\u662f\u4e00\u79cd\u7a33\u5b9a\u7684\u7b97\u6cd5</p> <ol> <li> <p>\u5408\u5e762\u4e2a\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u5217\u8868          \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T(N) = O(N)\\)\uff0c\\(N\\)\u4e3a2\u4e2a\u5217\u8868\u7684\u5143\u7d20\u4e2a\u6570\u603b\u548c</p> </li> <li> <p>\u5f52\u5e76\u6392\u5e8f     \u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>void MSort(ElementType A[], ElementType TmpArray[], int Left, int Right)\n{\nint Center;\nif (Left &lt; Right)\n{\nCenter = (Left + Right) / 2;\nMSort(A, TmpArray, Left, Center);\nMSort(A, TmpArray, Center + 1, Right);\nMerge(A, TmpArray, Left, Center + 1, Right);\n}\n}\nvoid MergeSort(ElementType A[], int N)\n{\nElementType *TmpArray;\nTmpArray = (ElementType *)malloc(N * sizeof(ElementType));\nif (TmpArray != NULL)\n{\nMSort(A, TmpArray, 0, N - 1);\nfree(TmpArray);\n}\nelse FatalError(\"No space for tmp array!!!\");\n}\n// Lpos = start of left half, Rpos = start of right half\nvoid Merge(ElementType A[], ElementType TmpArray[], int Lpos, int Rpos, int RightEnd)\n{\nint i, LeftEnd, NumElements, TmpPos;\nLeftEnd = Rpos - 1;\nTmpPos = Lpos;\nNumElements = RightEnd - Lpos + 1;\nwhile (Lpos &lt;= LeftEnd &amp;&amp; Rpos &lt;= RightEnd) // main loop\nif (A[Lpos] &lt;= A[Rpos])\nTmpArray[TmpPos++] = A[Lpos++];\nelse\nTmpArray[TmpPos++] = A[Rpos++];\nwhile (Lpos &lt;= LeftEnd) // Copy rest of first half\nTmpArray[TmpPos++] = A[Lpos++];\nwhile (Rpos &lt;= RightEnd) // Copy rest of second half\nTmpArray[TmpPos++] = A[Rpos++];\nfor (i = 0; i &lt; NumElmentsl i++, RightEnd--)\n// Copy TmpArray back\nA[RightEnd] = TmpArray[RightEnd];\n}\n</code></pre></p> </li> </ol> <p>\u6ce8\uff1a + \u5f52\u5e76\u6392\u5e8f\u4f53\u73b0\u4e86\u5206\u6cbb(divide-and-conquer) \u601d\u60f3\uff1a<code>MSort</code>\u4e3a\u201c\u5206\u201d\uff0c<code>Merge</code>\u4e3a\u201c\u6cbb\u201d + \u5982\u679c\u6bcf\u6b21\u8c03\u7528<code>Merge</code>\uff0c<code>TmpArray</code>\u4f1a\u88ab\u5c40\u90e8\u58f0\u660e\uff0c\u90a3\u4e48\u7a7a\u95f4\u590d\u6742\u5ea6\\(S(N) = O(N \\log N)\\) + \u9664\u6b64\u4e4b\u5916\uff0c\u5927\u91cf\u7684\u65f6\u95f4\u88ab\u7528\u4e8e\u4f7f\u7528<code>malloc</code>\u51fd\u6570\u5efa\u7acb<code>TmpArray</code></p>"},{"location":"notebooks/fds/7/#analysis","title":"Analysis","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790(\u5229\u7528\u9012\u63a8\u5173\u7cfb)\uff1a $$ \\begin{align} T(1) &amp;= 1\\ T(N) &amp;= 2T(\\dfrac{N}{2}) + O(N) \\ &amp; = 2<sup>kT(\\dfrac{N}{2</sup>k}) + k \\cdot O(N) \\ &amp; = N \\cdot T(1) + \\log N \\cdot O(N) \\ &amp; =O(N + N\\log N) \\end{align} $$</p> <p>\u6ce8\uff1a + \u53e6\u4e00\u79cd\u8bc1\u660e\u6cd5\u89c1\u4e66\u672c\\(P_{233-234}\\)  + \u5f52\u5e76\u6392\u5e8f\u9700\u8981\u7ebf\u6027\u5927\u5c0f\u7684\u989d\u5916\u5185\u5b58\uff0c\u4e14\u62f7\u8d1d\u6570\u7ec4\u4f1a\u964d\u4f4e\u901f\u5ea6\uff0c\u56e0\u6b64\u5728\u5185\u90e8\u6392\u5e8f\u4e2d\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u592a\u597d\u7528\uff0c\u4f46\u662f\u5728\u5916\u90e8\u6392\u5e8f(external sort)(ads\u4f1a\u8bb2) \u4e2d\u5f88\u5408\u9002</p> <p>\u8fed\u4ee3\u7248\u672c(\u56fe\u793a)\uff1a </p>"},{"location":"notebooks/fds/7/#quicksort","title":"Quicksort","text":""},{"location":"notebooks/fds/7/#1-the-algorithm","title":"1. The Algorithm","text":"<p>\u5feb\u901f\u6392\u5e8f(quicksort)(\u4ee5\u4e0b\u7b80\u79f0\u5feb\u6392)\u662f\u76ee\u524d\u5df2\u77e5\u5b9e\u9645\u4e0a\u6700\u5feb\u7684\u6392\u5e8f\u7b97\u6cd5</p> <p>\u57fa\u672c\u6a21\u7248(\u4f2a\u4ee3\u7801)\uff1a <pre><code>void Quicksort(ElementType A[], int N)\n{\nif (N &lt; 2) return;\npivot = pick any element in A[]    // ?\nPartition S = {A[] \\ pivot} into two dijoint sets:    // ?\nA1 = {a in S | a &lt;= pivot} and A2 = {a in S | a &gt;= pivot}\nA = Quicksort(A1, N1) + {pivot} + Quicksort(A2, N2);\n}\n</code></pre></p> <p>\u6ce8\uff1a + \u8fd9\u91cc\u6211\u4eec\u5c06<code>pivot</code>(\u652f\u70b9)\u653e\u5728\u7b2c\u4e8c\u4e2a\u5b50\u6570\u5217<code>A2</code>\u91cc + \u5feb\u6392\u4e5f\u662f\u4e00\u79cd\u5206\u6cbb\u9012\u5f52\u7b97\u6cd5</p> <p>\u6700\u4f73\u65f6\u95f4\u590d\u6742\u5ea6\\(T(N) = O(N \\log N)\\)</p> <p>\ud83c\udf30\uff1a </p> <p>[!info] \u601d\u8003\ud83e\udd14\uff1a + \u6211\u4eec\u5982\u4f55\u9009\u53d6<code>pivot</code>\uff0c\u771f\u7684\u662f\u201c\u968f\u673a\u201d\u6311\u9009\u5417\uff1f + \u5982\u4f55\u5c06\u6570\u7ec4(\u53ef\u4ee5\u770b\u4f5c\u96c6\u5408)\u201c\u5212\u5206(<code>Partition</code>)\u201d\u4e3a2\u4e2a\u5b50\u6570\u7ec4(\u5b50\u96c6)\uff1f</p>"},{"location":"notebooks/fds/7/#2-picking-the-pivot","title":"2. Picking the Pivot","text":"<ul> <li> <p>\u9519\u8bef\u7684\u65b9\u6cd5\uff1a<code>Pivot = A[0]</code></p> <p>\u6700\u574f\u60c5\u51b5\uff1a + \u6570\u7ec4<code>A[]</code>\u5df2\u63d0\u524d\u6392\u597d\u5e8f + <code>A[]</code>\u662f\u9006\u5e8f\u7684</p> <p>\u5219\u6240\u6709\u7684\u5143\u7d20\u8981\u4e48\u5168\u90e8\u653e\u5165<code>A1</code>\uff0c\u8981\u4e48\u5168\u90e8\u653e\u5165<code>A2</code>\uff0c\u56e0\u6b64\u6d6a\u8d39\u4e86\\(O(N^2)\\)\u7684\u65f6\u95f4\u505a\u65e0\u610f\u4e49\u7684\u4e8b</p> </li> <li> <p>\u5b89\u5168\u7684\u7b56\u7565\uff1a<code>Pivot = random select from A[]</code></p> <p>\u7136\u800c\u968f\u673a\u6570\u751f\u6210\u7684\u201c\u6210\u672c\u201d\u8f83\u9ad8</p> </li> <li> <p>\u4e09\u6570\u4e2d\u503c\u5206\u5272\u6cd5(median-of-three partitioning)\uff1a<code>Pivot = median(left, center, right)</code></p> <p>\u5b83\u4e0d\u4ec5\u6d88\u9664\u4e86\u6700\u574f\u60c5\u51b5(\u8f93\u5165\u524d\u5df2\u6392\u597d\u5e8f)\uff0c\u800c\u4e14\u8282\u7701\u4e865%\u7684\u8fd0\u884c\u65f6\u95f4</p> </li> </ul>"},{"location":"notebooks/fds/7/#3-partitioning-stategy","title":"3. Partitioning Stategy","text":"<p>\ud83c\udf30\uff1a<code>Pivot = 6</code> + \u521d\u59cb\u72b6\u6001\uff1a\u6211\u4eec\u5c06<code>Pivot</code>\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u5373\u628a<code>Pivot</code>\u653e\u5165\u6700\u540e\uff1b<code>i</code>\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c<code>j</code>\u4ece\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb + \u5f53<code>i &lt; j</code>\u65f6\uff0c     + \u82e5<code>i</code>\u6240\u6307\u5143\u7d20\u6bd4<code>Pivot</code>\u5c0f\uff0c<code>i++</code>\uff0c\u5426\u5219\u505c\u6b62\uff0c\u7b49\u5f85\u4ea4\u6362     + \u82e5<code>j</code>\u6240\u6307\u5143\u7d20\u6bd4<code>Pivot</code>\u5927\uff0c<code>j--</code>\uff0c\u5426\u5219\u505c\u6b62\uff0c\u7b49\u5f85\u4ea4\u6362     + \u5f53<code>i</code>\u548c<code>j</code>\u90fd\u505c\u4e0b\u6765\u4e86\uff0c\u4ea4\u6362<code>i, j</code>\u6240\u6307\u5143\u7d20     \u8fd9\u6837\uff0c\u6570\u7ec4\u4e2d\u6bd4<code>Pivot</code>\u5c0f\u7684\u5143\u7d20\u5728\u5de6\u8fb9\uff0c\u6bd4<code>Pivot</code>\u5927\u7684\u5143\u7d20\u5728\u53f3\u8fb9</p> <p></p> <p>\u5f53<code>key == Pivot</code>\u65f6(<code>key</code>\u4e3a\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u6570\u7ec4\u4e2d\u6709\u4e0d\u6b62\u4e00\u4e2a\u4e0e<code>Pivot</code>\u76f8\u7b49\u7684\u5143\u7d20)\uff1a + \u2b50\u540c\u65f6\u505c\u6b62<code>i</code>\u548c<code>j</code>\uff1a     + \u8f83\u574f\u7684\u60c5\u51b5\uff1a1, 1, 1, \u2026\u2026, \u8fd9\u65f6\u5feb\u6392\u5c31\u4f1a\u8fdb\u884c\u8bb8\u591a\u65e0\u610f\u4e49\u7684\u4ea4\u6362     + \u7136\u800c\uff0c\u8fd9\u786e\u4fdd\u6574\u4e2a\u5e8f\u5217\u80fd\u591f\u88ab\u5212\u5206\u5747\u5300     + \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T(N) = O(N \\log N)\\) + \u274c<code>i</code>\u548c<code>j</code>\u5747\u4e0d\u505c\u6b62\uff1a     + \u51fa\u73b0\u5b50\u5e8f\u5217\u5212\u5206\u4e0d\u5747\u7684\u95ee\u9898     + \u5982\u679c\u6240\u6709\u5143\u7d20\u90fd\u76f8\u7b49\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\\(T(N) = O(N^2)\\)</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u9009\u62e9\u524d\u4e00\u79cd\u65b9\u6848</p>"},{"location":"notebooks/fds/7/#4-small-arrays","title":"4. Small Arrays","text":"<ul> <li>\u95ee\u9898\uff1a\u5f53\u6570\u7ec4\u89c4\u6a21\u8f83\u5c0f(\\(N \\le 20\\))\u65f6\uff0c\u5feb\u6392\u6bd4\u63d2\u6392\u6162</li> <li>\u89e3\u51b3\u65b9\u6848\uff1a\u5f53N\u8f83\u5c0f\u65f6\uff0c\u91c7\u7528\u53e6\u4e00\u79cd\u66f4\u6709\u6548\u7684\u7b97\u6cd5\uff08\u6bd4\u5982\u63d2\u6392\uff09</li> </ul>"},{"location":"notebooks/fds/7/#5-implementation","title":"5. Implementation","text":"<p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>void Quicksort(ElementType A[], int N)\n{\nQsort(A, 0, N - 1);\n// A: the array\n// 0: Left index\n// N - 1: Right index\n// Return median of Left, Center, and Right\n// Order these and hide the pivot\n}\nElementType Median3(ElementType A[], int Left, int Right)\n{\nint Center = (Left + Right) / 2;\nif (A[Left] &gt; A[Center])\nSwap(&amp;A[Left], &amp;A[Center]);\nif (A[Left] &gt; A[Right])\nSwap(&amp;A[Left], &amp;A[Right]);\nif (A[Center] &gt; A[Right])\nSwap(&amp;A[Center], &amp;A[Right]);\n// Invariant: A[Left] &lt;= A[Center] &lt;= A[Right]\nSwap(&amp;A[Center], &amp;A[Right - 1]);\n// only need to sort A[Left + 1] .. A[Right - 2]\nreturn A[Right - 1]; // Return pivot\n}\nvoid Qsort(ElementType A[], int Left, int Right)\n{\nint i, j;\nElementType Pivot;\nif (Left + Cutoff &lt;= Right) // if the sequence is not too short\n{\nPivot = Median3(A, Left, Right);  // select pivot\ni = Left; j = Right - 1;\nfor (;;)\n{\nwhile (A[++i] &lt; Pivot) {}  // scan from left\nwhile (A[--j] &gt; Pivot) {}  // scan from right\nif (i &lt; j)\nSwap(&amp;A[i], &amp;A[j]);    // adjust partition\nelse break;                // partition done\n}\nSwap(&amp;A[i], &amp;A[Right - 1]);    // restore pivot\nQsort(A, Left, i - 1);         // recursively sort left part\nQsort(A, i + 1, Right);        // recursively sort right part\n}  // end if - the sequence subarray\nelse\nInsertionSort(A + Left, Right - Left + 1);\n}\n</code></pre></p> <p>[!warning] \u4e3a\u4ec0\u4e48\u7b2c34\u548c\u7b2c35\u884c\u4e0d\u80fd\u5206\u522b\u66ff\u6362\u4e3a\uff1a<code>i = Left + 1; j = Right - 2;</code> \u5462\uff1f (\u4e4b\u540e\u6709\u65f6\u95f4\u53ef\u4ee5\u8fd0\u884c\u4ee3\u7801\u9a8c\u8bc1)</p>"},{"location":"notebooks/fds/7/#6-analysis","title":"6. Analysis","text":"<p>\u5feb\u6392\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u9012\u63a8\u5173\u7cfb\u5f0f\uff1a $$ T(N) = T(i) + T(N - i - 1) + cN $$ + \u6700\u574f\u60c5\u51b5\uff1a\u6bcf\u6b21\u5feb\u6392\u6311\u9009\u7684\u652f\u70b9\u90fd\u662f\u6700\u5c0f\u7684\u5143\u7d20 \\(\\(T(N) = T(N - 1) + cN \\quad \\Rightarrow \\quad T(N) = O(N^2)\\)\\) + \u6700\u597d\u60c5\u51b5\uff1a\u652f\u70b9\u4e3a\u4e2d\u95f4\u5143\u7d20 \\(\\(T(N) = 2T(\\dfrac{N}{2}) + cN \\quad \\Rightarrow \\quad T(N) = O(N \\log N)\\)\\) + \u5e73\u5747\u60c5\u51b5\uff1a\u5047\u8bbe\\(\\forall i,\\ T(i)\\)\u7684\u5e73\u5747\u65f6\u95f4\u4e3a\\(\\dfrac{1}{N}[\\sum\\limits_{j = 0}^{N - 1}T(j)]\\) \\(\\(T(N) = \\dfrac{2}{N}[\\sum\\limits_{j = 0}^{N - 1}T(j)] + cN \\quad \\Rightarrow \\quad T(N) = O(N \\log N)\\)\\)</p> <p>\ud83c\udf30\uff1a\u7ed9\u5b9a\u5177\u6709N\u4e2a\u5143\u7d20\u7684\u5217\u8868\u548c\u6574\u6570k\uff0c\u627e\u5230\u7b2ck\u5927\u7684\u5143\u7d20</p> <p>[[Chap 2 Algorithm Analysis#Compare the Algorithms|\u524d\u666f\u56de\u987e]]</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>// Places the kth smallest element in the kth position\n// Because arrays start at 0. this will be index k-1\nvoid Qselect(ElementType A[], int k, int Left, int Right)\n{\nint i, j;\nElementType Pivot;\nif (Left + Cutoff &lt;= Right)\n{\nPivot = Median3(A, Left, Right);\ni = Left; j = Right - 1;\nfor (;;)\n{\nwhile (A[++i] &lt; Pivot) {}\nwhile (A[--j] &gt; Pivot) {}\nif (i &lt; j)\nSwap(&amp;A[i],  &amp;A[j]);\nelse\nbreak;\n}\nSwap(&amp;A[i], &amp;A[Right - 1]);\nif (k &lt;= i)\nQselect(A, k, Left, i - 1);\nelse if (k &gt; i + 1)\nQselect(A, k, i + 1, Right);\n}\nelse InsertionSort(A + Left, Right - Left + 1);\n}\n</code></pre></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a + \u6700\u574f\u60c5\u51b5\uff1a\\(O(N^2)\\) + \u5e73\u5747\u60c5\u51b5\uff1a\\(O(N)\\)</p>"},{"location":"notebooks/fds/7/#sorting-large-structures","title":"Sorting Large Structures","text":"<ul> <li>\u95ee\u9898\uff1a\u4ea4\u6362\u5927\u578b\u7ed3\u6784\u7684\u6210\u672c\u8f83\u9ad8</li> <li>\u89e3\u51b3\u65b9\u6848\uff1a\u6dfb\u52a0\u6307\u5411\u7ed3\u6784\u7684\u6307\u9488\uff0c\u7136\u540e\u4ea4\u6362\u6307\u9488\u2014\u2014\u95f4\u63a5\u6392\u5e8f(indirect sorting)\u3002\u5982\u679c\u7684\u786e\u6709\u5fc5\u8981\u518d\u771f\u6b63\u5730\u4ea4\u6362\u7ed3\u6784</li> </ul> <p>\ud83c\udf30\uff1a\u8868\u6392\u5e8f(table sort)</p> <ul> <li>\u6211\u4eec\u7528<code>table[]</code>\u6570\u7ec4\u5b58\u50a8\u6307\u9488\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u6307\u9488\u4e0d\u662fC\u8bed\u8a00\u7684\u6307\u9488\u7c7b\u578b\uff0c\u800c\u662f\u6570\u7ec4<code>list[]</code>\u7684\u7d22\u5f15\u3002\u521d\u59cb\u5316\u4e3a<code>table[i] = i</code></li> <li>\u5bf9<code>list[]</code>\u7684\u5185\u5bb9\u8fdb\u884c\u95f4\u63a5\u6392\u5e8f\uff1a\u6211\u4eec\u53ea\u9700\u79fb\u52a8\u6307\u9488\u5373\u53ef(\u81ea\u5df1\u9009\u62e9\u4e00\u79cd\u6392\u5e8f\u65b9\u6cd5\u6392\u5e8f)</li> <li>\u5982\u4f55\u8f93\u51fa\u6392\u597d\u5e8f\u7684\u5217\u8868\uff1a<code>list[table[0]], list[table[1]], ..., list[table[n-1]]</code> <p>\u4e0a\u56fe\u4e3a\u521d\u59cb\u72b6\u6001\uff0c\u4e0b\u56fe\u4e3a\u95f4\u63a5\u6392\u5e8f\u540e\u7684\u5217\u8868</p> </li> </ul> <p>[!hint] \u89c2\u5bdf<code>Table</code>\u7684\u503c\uff0c\u53d1\u73b0\u8fd9n\u4e2a\u503c\u7684\u6392\u5217\u662f\u7531\u4e00\u4e9b\u4e0d\u76f8\u4ea4\u7684\u201c\u73af\u201d\u6784\u6210(\u7c7b\u4f3c[[Chap 8 The Disjoint Set ADT|\u5e76\u67e5\u96c6]])\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u6027\u8d28\u5bf9<code>list</code>\u8fdb\u884c\u7269\u7406\u6392\u5e8f(\u771f\u6b63\u5730\u4ea4\u6362\u5143\u7d20)</p> <p>\u4e0b\u56fe\u6253\u9634\u5f71\u7684\u90e8\u5206\u8868\u793a2\u4e2a\u73af </p> <p>\u7269\u7406\u6392\u5e8f\uff1a </p> <p>\u6700\u574f\u60c5\u51b5\uff1a\u6709\\(\\lfloor \\dfrac{N}{2} \\rfloor\\)\u4e2a\u73af\uff0c\u9700\u8981\\(\\lfloor \\dfrac{3N}{2} \\rfloor\\)\u6b21\u79fb\u52a8 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T = O(mN)\\)\uff0c\u5176\u4e2dm\u4e3a\u7ed3\u6784\u4f53\u7684\u5927\u5c0f</p>"},{"location":"notebooks/fds/7/#general-lower-bound-for-sorting","title":"General Lower Bound for Sorting","text":"<p>\u5b9a\u7406\uff1a\u4efb\u4f55\u901a\u8fc7\u6bd4\u8f83\u8fdb\u884c\u6392\u5e8f\u7684\u7b97\u6cd5\uff0c\u5176\u6700\u574f\u60c5\u51b5\u7684\u8ba1\u7b97\u65f6\u95f4\u4e3a\\(\\Omega(N \\log N)\\)</p> <p>\u8bc1\u660e\uff1a\u5229\u7528\u51b3\u7b56\u6811(decision tree) \ud83c\udf30\uff1a </p> <p>\u6392\u5e8fN\u4e2a\u5143\u7d20\u4f1a\u4ea7\u751fN!\u4e2d\u4e0d\u540c\u7684\u53ef\u80fd\u60c5\u51b5\uff0c\u56e0\u6b64\u51b3\u7b56\u6811\u81f3\u5c11\u6709N!\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\u82e5\u6811\u7684\u9ad8\u4e3ak\uff0c\u90a3\u4e48\\(N! \\le 2^{k-1}\\)\uff0c\u6240\u4ee5\\(k \\ge \\log(N!) + 1\\)</p> <p>\\(\\because N! \\ge (\\dfrac{N}{2})^{\\frac{N}{2}}\\)\uff0c\u5373 \\(\\log_2 N! \\ge \\dfrac{N}{2}\\log_2(\\dfrac{N}{2}) = \\Theta(N \\log_2 N)\\) \\(\\therefore T(N) = k \\ge c \\cdot N \\log_2 N\\)</p>"},{"location":"notebooks/fds/7/#bucket-sort-and-radix-sort","title":"Bucket Sort and Radix Sort","text":""},{"location":"notebooks/fds/7/#bucket-sort","title":"Bucket Sort","text":"<p>\ud83c\udf30\uff1a\u5047\u8bbe\u6709N\u4e2a\u5b66\u751f\uff0c\u6bcf\u4e2a\u5b66\u751f\u6709\u4e00\u4e2a\u57280-100(\u56e0\u6b64\u6709M = 101\u53ef\u80fd\u7684\u4e0d\u540c\u5206\u6570)\u4e4b\u95f4\u7684\u6210\u7ee9\uff0c\u90a3\u4e48\u5982\u4f55\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u6839\u636e\u4ed6\u4eec\u7684\u4e58\u79ef\u8fdb\u884c\u6392\u5e8f\uff1f </p> <p>\u4f2a\u4ee3\u7801\uff1a <pre><code>Algorithm\n{\ninitialize count[];\nwhile (read in a student's record)\ninsert to list count[stdnt.grade];\nfor (i = 0; i &lt; M; i++)\n{\nif (count[i])\noutput list count[i];\n}\n}\n</code></pre></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T(N, M) = O(M + N)\\)</p> <p>[!info] \u5f53\\(M \\gg N\\)\u65f6\uff0c\u6bd4\u5982N = 10, M = 1000\uff0c\u5982\u679c\u8fd8\u60f3\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u5b8c\u6210\u6392\u5e8f\uff0c\u6876\u6392\u5e8f\u5c31\u4e0d\u592a\u9760\u8c31\u4e86\u2014\u2014\u800c\u4e0b\u9762\u4ecb\u7ecd\u7684\u57fa\u6570\u6392\u5e8f\u5c06\u80dc\u4efb\u8fd9\u4e00\u95ee\u9898</p>"},{"location":"notebooks/fds/7/#radix-sort","title":"Radix Sort","text":"<p>\ud83c\udf30\uff1a\u5bf9\u5b8c\u5168\u7acb\u65b9\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u91c7\u7528\u6700\u4f4e\u4f4d\u4f18\u5148(least significant digit first) \u7684\u7b56\u7565 </p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T = O(P(N + B))\\)\uff0c\u5176\u4e2d\\(P\\)\u4e3a\u6392\u5e8f\u7684\u8d9f\u6570(pass)\uff0cN\u4e3a\u5143\u7d20\u4e2a\u6570\uff0cB\u4e3a\u6876\u6570</p> <p>\u5206\u6790\uff1a</p> <p>\u5047\u8bbe\u8bb0\u5f55\\(R_i\\)\u6709r\u4e2a\u952e\uff1a + \\(K_i^j\\)\uff1a\\(R_i\\)\u7684\u7b2cj\u4e2a\u952e + \\(K_i^0\\)\uff1a\\(R_i\\)\u7684\u6700\u9ad8\u4f4d + \\(K_i^{r-1}\\)\uff1a\\(R_i\\)\u7684\u6700\u4f4e\u4f4d</p> <p>\u5bf9\u4e8e\u5305\u542b\u8bb0\u5f55\\(R_0, \\dots, R_{n-1}\\)\u7684\u5217\u8868\uff0c\u5982\u679c\u6ee1\u8db3\uff1a $$ (K_i^0, K_i^1, \\dots, K_i^{r-1}) \\le (K_{i + 1}^0, K_{i + 1}^r, \\dots, K_{i+1}^{r - 1}) $$ \u4e5f\u5c31\u662f\u8bf4\uff1a\\(K_i^0 = K_{i+1}^0, \\dots, K_i^l, = K_{i+1}^l, K_i^{l+1} &lt; K_{i+1}^{l+1},\\ l &lt; r - 1\\) \uff0c\u5219\u79f0\u8be5\u5217\u8868\u5177\u6709 [[Chap 9 Relations#Lexicographic Order|\u8bcd\u5178\u5e8f(lexically sorted)]]</p> <p>\ud83c\udf30\uff1a\u5bf9\u4e8e\u4e00\u526f\u6251\u514b\u724c(52\u5f20)\uff0c\u8981\u6c42\u5982\u4e0b\uff1a </p> <ul> <li> <p>\u6cd5\u4e00\uff1a\u6700\u9ad8\u4f4d\u6392\u5e8f</p> <ul> <li>\u6309\\(K^0\\)\u6392\u5e8f\uff1a\u6839\u636e\u82b1\u8272\uff0c\u521b\u5efa4\u4e2a\u7bee\u5b50 </li> <li>\u5bf9\u6bcf\u4e2a\u7bee\u5b50\u5355\u72ec\u6392\u5e8f\uff08\u91c7\u53d6\u5408\u7406\u7684\u6392\u5e8f\u65b9\u6cd5\uff09 </li> </ul> </li> <li> <p>\u6cd5\u4e8c\uff1a\u6700\u4f4e\u4f4d\u6392\u5e8f</p> <ul> <li>\u6309\\(K^1\\)\u6392\u5e8f\uff0c\u6839\u636e\u9762\u503c\uff0c\u521b\u5efa13\u4e2a\u7bee\u5b50 </li> <li>\u518d\u5c06\u5b83\u4eec\u6309\u4e0a\u4e00\u6b65\u5206\u51fa\u6765\u7684\u987a\u5e8f\u5408\u5e76\u6210\u4e00\u5806 </li> <li>\u518d\u521b\u5efa4\u4e2a\u6876\uff0c\u91cd\u65b0\u6392\u5e8f</li> </ul> </li> </ul>"},{"location":"notebooks/fds/8/","title":"Chap 8 The Disjoint Set ADT","text":":material-circle-edit-outline: \u7ea6 1798 \u4e2a\u5b57 :fontawesome-solid-code: 223 \u884c\u4ee3\u7801 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f"},{"location":"notebooks/fds/8/#equivalence-relations","title":"Equivalence Relations","text":"<p>\u5177\u4f53\u6982\u5ff5\u89c1dm[[Chap 9 Relations|\u7b2c9\u7ae0]]</p> <p>\u5b9a\u4e49\uff1a + \u5728\u67d0\u4e2a\u96c6\u5408\\(S\\)\u7684\u4e00\u4e2a\u5173\u7cfb(relation)\\(R\\)\uff0c\u5bf9\u4e8e\u6bcf\u5bf9\u5143\u7d20\\((a ,b), a, b \\in S\\)\uff0c\u5b83\u4eec\u7684\u5173\u7cfb\\(a \\ R\\ b\\)\uff0c\u5982\u679c\u5176\u503c\u4e3a\u771f\uff0c\u90a3\u4e48\u79f0\\(a\\)\u4e0e\\(b\\)\u76f8\u5173(\\(a\\) is related to \\(b\\)) + \u5bf9\u4e8e\u96c6\u5408\\(S\\)\u7684\u4e00\u79cd\u5173\u7cfb\\(\\sim\\)\uff0c\u5982\u679c\u5b83\u6ee1\u8db3\u81ea\u53cd\u6027(reflexive) \u3001\u5bf9\u79f0\u6027(symmetric)\u548c \u4f20\u9012\u6027(transitive)\uff0c\u90a3\u4e48\u79f0\u8fd9\u79cd\u5173\u7cfb\u4e3a\u7b49\u4ef7\u5173\u7cfb(equivalence relation)     &gt;+ \u81ea\u53cd\u6027\uff1a\\(\\forall a \\in S, a\\ R\\ a\\)     &gt;+ \u5bf9\u79f0\u6027\uff1a\\(a\\ R\\ b \\leftrightarrow b\\ R\\ a\\)     &gt;+ \u4f20\u9012\u6027\uff1a\\((a\\ R\\ b) \\wedge (b\\ R\\ c) \\rightarrow a\\ R\\ c\\)</p> <ul> <li>\u5bf9\u4e8e\u5143\u7d20\\(a \\in S\\)\u7684\u7b49\u4ef7\u7c7b(equivalence class)\uff0c\u662f\u5305\u542b\u6240\u6709\u4e0e\\(a\\)\u76f8\u5173\u7684\u5143\u7d20\u7684\\(S\\)\u7684\u5b50\u96c6 <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u7b49\u4ef7\u7c7b\u76f8\u5f53\u4e8e\\(S\\)\u5185\u7684\u9694\u677f(partition)\uff0c\\(S\\)\u5185\u7684\u6bcf\u4e2a\u5143\u7d20\u4ec5\u51fa\u73b0\u5728\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u4e2d</p> </li> </ul>"},{"location":"notebooks/fds/8/#the-dynamic-equivalence-problem","title":"The Dynamic Equivalence Problem","text":"<p>\u95ee\u9898\uff1a\u7ed9\u5b9a\u7b49\u4ef7\u5173\u7cfb\\(\\sim\\)\uff0c\u5bf9\u4e8e\u4efb\u4f55\u7684\\(a, b\\)\uff0c\u5224\u65ad\\(a \\sim b\\)\u662f\u5426\u6210\u7acb</p> <p>\ud83c\udf30  \u7b97\u6cd5\u2014\u2014\u5e76\u67e5\u96c6(Union / Find, the disjoint set) <pre><code>Algorithm: (Union / Find)\n{   // step 1: read the relations in\ninitialize N disjoint sets;\nwhile  (read in a~b)\n{\nif (!(Find(a) == Find(b)))\nUnion the two sets;\n} // end-while\n// step 2: decide if a~b\nwhile (read in a and b)\nif (Find(a) == Find(b))\noutput(true) ;\nelse\noutput(false);\n}\n</code></pre></p> <p>\u6ce8\uff1a\u8fd9\u662f\u4e00\u79cd\u52a8\u6001\u7684(dynamic)\uff0c\u5728\u7ebf(on-line) \u7b97\u6cd5 + \u52a8\u6001\uff1a\u5728\u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c<code>Union()</code>\u4f1a\u968f\u65f6\u6539\u53d8\u96c6\u5408</p> <p>\u5e76\u67e5\u96c6\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a + \u96c6\u5408\u7684 \u5143\u7d20(Elements)\uff1a\\(1, 2, 3, \\dots, N\\)</p> <p>\u521d\u59cb\u72b6\u6001\uff1a\u6709\\(N\\)\u4e2a\u96c6\u5408\uff0c\u6bcf\u4e2a\u96c6\u5408\u4ec5\u67091\u4e2a\u5143\u7d20 + \u5bf9\u4e8e\u4e00\u7ec4\u96c6\u5408\\(S_1, S_2, \\dots \\dots\\)\uff0c\u5982\u679c\u6ee1\u8db3\\(S_i \\cap S_j = \\emptyset(i \\ne j)\\)\uff0c\u79f0\u8fd9\u4e9b\u96c6\u5408\u4e3a\u4e0d\u76f8\u4ea4(disjoint)     &gt;\u5982\u4f55\u5728\u7a0b\u5e8f\u4e2d\u8868\u793a\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff1f\u2014\u2014\u6811\uff0c\u5e76\u6ce8\u610f\u6307\u9488\u5e94==\u4ece\u5b69\u5b50\u8282\u70b9\u6307\u5411\u7236\u8282\u70b9==</p> <ul> <li>\u8fd0\u7b97(Operations)<ul> <li><code>Union(i, j)</code>\uff1a \u7528\\(S = S_i \\cup S_j\\)\u53d6\u4ee3\\(S_i\\)\u548c\\(S_j\\)</li> <li><code>Find(i)</code>\uff1a\u627e\u5230\u5305\u542b\u5143\u7d20\\(i\\)\u7684\u96c6\u5408\\(S_k\\)</li> </ul> </li> </ul>"},{"location":"notebooks/fds/8/#basic-data-structure","title":"Basic Data Structure","text":"<pre><code>// Declaration\n#ifndef _DisjSet_H\ntypedef int DisjSet[NumSet + 1];\ntypedef int SetType;\ntypedef int ElementType;\nvoid Initialize(DisjSet S);\nvoid SetUnion(DisjSet S, SetType Root1, SetType Root2);\nSetType Find(ElementType X, DisjSet S);\n#endif // _DisjSet_H\n</code></pre>"},{"location":"notebooks/fds/8/#unioni-j","title":"<code>Union(i, j)</code>","text":"<p>\u601d\u8def\uff1a\u4ee4\\(S_i\\)\u4e3a\\(S_j\\)\u7684\u5b50\u6811\uff08\u53cd\u8fc7\u6765\u4e5f\u884c\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u5176\u4e2d\u4e00\u68f5\u6811\u7684\u6839\u8282\u70b9\u6307\u5411\u53e6\u4e00\u68f5\u6811\u7684\u6839\u8282\u70b9</p> <p></p> <p>\u5982\u4f55\u5b9e\u73b0\uff1f + \u65b9\u6cd51\u2014\u2014\u6570\u7ec4+\u6307\u9488(\u4e0d\u63a8\u8350\u274c)      + \u65b9\u6cd52\u2014\u2014\u5229\u7528\u6570\u7ec4\u7684\u7d22\u5f15\uff08\u56e0\u4e3a\u96c6\u5408\u7684\u5143\u7d20\u90fd\u662f\u6b63\u6574\u6570\uff09\ud83d\udc4d     $$     S[i] = \\begin{cases}\\text{the element's parent} &amp;, \\text{if the element isn't a root} \\ 0 &amp;, \\text{if the element is a root}\\end{cases}     $$     &gt;\u6ce8\uff1a\u7d22\u5f15\u4ece1\u5f00\u59cb</p> <pre><code>\ud83c\udf30\n![](./Images/C8/Quicker_20240410_165640.png)\n\u53d8\u5316\u540e\n![](./Images/C8/Quicker_20240410_165703.png)\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n</code></pre> <p><code>c void Initialize(DisjSet S) {     int i;      for (i = NumSets; i &gt; 0; i--)         S[i] = 0; }</code></p> <pre><code>void SetUnion(DisSet S, SetType Rt1, SetType Rt2)\n{\nS[Rt2] = S[Rt1];\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"notebooks/fds/8/#findi","title":"<code>Find(i)</code>","text":"<ul> <li>\u65b9\u6cd51\u2014\u2014\u6811\u7684\u8282\u70b9\u6709\u4e00\u4e2a<code>parent</code>\u5b57\u6bb5\uff0c\u5229\u7528\u5b83\u5f97\u5230\u6574\u68f5\u6811\u7684\u6839\u8282\u70b9(\u8fd8\u662f\u4e0d\u63a8\u8350\u274c)     </li> <li>\u65b9\u6cd52     \u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>SetType Find(ElementType X, DisSet S)\n{\nfor (; S[X] &gt; 0; X = S[X]);\nreturn X;\n}\n</code></pre> <p>(\u6700\u574f\u60c5\u51b5)\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N)\\)\uff08\u4e0e\\(X\\)\u7684\u6df1\u5ea6\u6709\u5173\uff0c\\(N\\)\u4e3a\u6574\u4e2a\u5e76\u67e5\u96c6\u7684\u8282\u70b9\u4e2a\u6570\uff09</p> </li> </ul>"},{"location":"notebooks/fds/8/#analysis","title":"Analysis","text":"<p>\u56e0\u4e3a<code>union()</code>\u548c<code>find()</code>\u64cd\u4f5c\u5f80\u5f80\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u56e0\u6b64\u8981\u5206\u6790\u8be5\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\uff0c\u9700\u8981\u8003\u8651\u6267\u884c\u4e00\u7cfb\u5217\u7684<code>union()</code> + <code>find()</code>\u8fd0\u7b97</p> <p>\u4ee3\u7801\u5b9e\u73b0 <pre><code>// \u4f7f\u7528\u4e0a\u8ff0\u7b97\u6cd5\u5b9e\u73b0\u7684\u5e76\u67e5\u8fd0\u7b97\n{\nInitialize S[i] = {i} for i = 1,..., 12;\nfor (k = 1; k &lt;= Size; k++) // \u5bf9\u4e8e\u6bcf\u4e00\u5bf9i~j\nif (Find(i) != Find(j))\nSetUnion(Find(i), Find(j));  // \u6ce8\u610f\uff1aUnion\u65f6\u6700\u597d\u5408\u5e76\u7684\u662f\u4e24\u68f5\u6811\u7684\u6839\u8282\u70b9\n}\n</code></pre></p> <p>\u8003\u8651\u6700\u574f\u60c5\u51b5\uff1a<code>union(2, 1), find(1); union(3, 2), find(2); ...... union(N, N - 1), find(1);</code>\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u6700\u7ec8\u4f7f\u4e00\u68f5\u6811\u9000\u5316\u6210\u4e00\u4e2a\u94fe\u8868\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\Theta(N^2)\\) </p>"},{"location":"notebooks/fds/8/#smart-union-algorithms","title":"Smart Union Algorithms","text":""},{"location":"notebooks/fds/8/#union-by-size","title":"Union-by-Size","text":"<p>\u6839\u636e\u89c4\u6a21(size) \u5408\u5e76\u6811\u2014\u2014\u603b\u662f\u5c06\u89c4\u6a21\u5c0f\u7684\u6811\u5408\u5e76\u5230\u89c4\u6a21\u5927\u7684\u6811\u4e0a\uff0c\u4ee4<code>S[Root] = -size</code>\uff0c\u521d\u59cb\u5316\u4e3a-1</p> <p>\u5f15\u7406\uff1a\u4ee4\u6811\\(T\\)\u4e3a\u901a\u8fc7union-by-size\u65b9\u6cd5\u6784\u9020\u51fa\u7684\uff0c\u4e14\u6709\\(N\\)\u4e2a\u8282\u70b9\uff0c\u5219\uff1a $$ height(T) \\le \\lfloor \\log_2N \\rfloor + 1 $$</p> <p>\u8bc1\u660e\uff1a\u5229\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5</p> <p>\u56e0\u6b64<code>Find()</code>\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a\\(O(\\log N)\\)</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N + M \\log N)\\)\uff08\u8fdb\u884c\\(N\\)\u6b21\u5408\u5e76\u64cd\u4f5c\u548c\\(M\\)\u6b21\u67e5\u627e\u64cd\u4f5c\u540e\uff09</p> <pre><code>void SetUnion(DisjSet S, SetType Root1, SetType Root2)\n{\nif (Root1 == Root2)         // \u5982\u679c\u662f\u540c\u4e00\u68f5\u6811\uff0c\u5565\u90fd\u4e0d\u7528\u505a\nreturn;\nif (S[Root2] &lt; S[Root1])    // \u5982\u679cRoot2\u5bf9\u5e94\u6811\u7684\u89c4\u6a21\u66f4\u5927\n{\nS[Root2] += S[Root1];\nS[Root1] = Root2;\n}\nelse                        // \u5982\u679cRoot1\u5bf9\u5e94\u6811\u7684\u89c4\u6a21\u66f4\u5927\n{\nS[Root1] += S[Root2];\nS[Root2] = Root1;\n}\n}\n</code></pre> <p>\u6ce8\uff1a\u6811\u7684\u9ad8\u5ea6 \\(\\le \\log N + 1\\)</p>"},{"location":"notebooks/fds/8/#union-by-heightrank","title":"Union-by-Height(rank)","text":"<p>\u6839\u636e\u9ad8\u5ea6(height) \u5408\u5e76\u6811\u2014\u2014\u603b\u662f\u5c06\u77ee\u7684\u90a3\u68f5\u6811\u5408\u5e76\u5230\u9ad8\u7684\u90a3\u68f5\u6811\u4e0a\uff0c\u56e0\u6b64\u6bcf\u6b21<code>Union()</code>\u540e\u6811\u7684\u9ad8\u5ea6\u6700\u591a\u589e\u52a01\uff08\u5f532\u68f5\u6811\u9ad8\u5ea6\u76f8\u540c\u65f6\uff09</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>void SetUnion(DisjSet S, SetType Root1, SetType Root2)\n{\nif (S[Root2] &lt; S[Root1])\nS[Root1] = Root2;\nelse\n{\nif (S[Root1] == S[Root2])\nS[Root1]--;\nS[Root2] = Root1;\n}\n}\n</code></pre></p> <p>\ud83c\udf1f\u8bb0\u5f97\u5728\u8c03\u7528<code>Union()</code>\u51fd\u6570\u65f6\uff0c\u53c2\u6570\u4e2d\u7684\u4e24\u4e2a<code>root</code>\u4e00\u5b9a\u8981\u5148\u8c03\u7528<code>Find</code>\uff0c\u7c7b\u4f3c<code>Union(S, Find(x1), Find(x2))</code>\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u5408\u5e762\u4e2a\u5b8c\u6574\u7684\u5e76\u67e5\u96c6\uff0c\u800c\u4e0d\u662f2\u4e2a\u8282\u70b9\u3002</p>"},{"location":"notebooks/fds/8/#path-compression","title":"Path Compression","text":"<p>\u7ecf\u8fc7\u4e0a\u8ff0\u6539\u8fdb\uff0c<code>Union</code>\u7b97\u6cd5\u7684\u6027\u80fd\u5df2\u7ecf\u4e0d\u80fd\u518d\u63d0\u5347\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u6539\u8fdb<code>Find</code>\u7b97\u6cd5\u3002\u4e8e\u662f\u6211\u4eec\u4fbf\u7528\u5230\u4e86\u8def\u5f84\u538b\u7f29(path compression) \u7684\u65b9\u6cd5\u2014\u2014\u5bf9\u4e8e\u4ece\u6839\u8282\u70b9\u5230\\(X\\)\u8def\u5f84\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u5c06\u5b83\u7684\u7236\u8282\u70b9\u8bbe\u4e3a\u6839\u8282\u70b9</p> <p>\u793a\u610f\u56fe\uff1a </p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>// algorithm1--recursion\nSetType Find(ElementType X, DisSet S)\n{\nif (S[X] &lt;= 0)\nreturn X;\nelse\nreturn S[X] = Find(S[X], S); // \u8ba9X\u7684\u7236\u8282\u70b9\u4e3aX\u539f\u6765\u7236\u8282\u70b9\u7684\u7236\u8282\u70b9\n}\n</code></pre></p> <pre><code>// algorithm2--iteration\nSetType Find(ElementType X, DisSet S)\n{\nElementType root, trail, lead;\nfor (root = X; S[root] &gt; 0; root = S[root]); // find the root\nfor (trail = X; trail != root; trail = lead) // \u5c06\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u7684\u7236\u8282\u70b9\u90fd\u8bbe\u4e3a\u6839\u8282\u70b9\n{\nlead = S[trail];\nS[trail] = root;\n} // collapsing\nreturn rootl\n}\n</code></pre> <p>\u6ce8\uff1a + \u867d\u7136\u8fd9\u79cd\u7b97\u6cd5\u76f8\u8f83\u4e8e\u4e0a\u4e00\u79cd\uff0c\u67e5\u627e\u5355\u4e2a\u5143\u7d20\u7684\u901f\u5ea6\u53d8\u6162\uff08\u56e0\u4e3a\u591a\u4e86\u4e00\u6b21\u8d4b\u503c\uff09\uff1b\u4f46\u662f\u5bf9\u4e8e\u67e5\u627e\u6574\u4e2a\u5e8f\u5217\u7684\u5143\u7d20\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u901f\u5ea6\u66f4\u5feb\uff08\u56e0\u4e3a\u591a\u51fa\u6765\u7684\u8d4b\u503c\u538b\u7f29\u4e86\u6574\u68f5\u6811\uff0c\u5bf9\u4e8e\u9891\u7e41\u7684\u5408\u5e76\u64cd\u4f5c\u663e\u7136\u662f\u6709\u5229\u7684\uff09 + \u8be5\u65b9\u6cd5\u4e0e\u6309\u9ad8\u5ea6\u5408\u5e76\u6811\u7684\u65b9\u6cd5\u4e0d\u517c\u5bb9\uff0c\u56e0\u4e3a\u6811\u7684\u9ad8\u5ea6\u53d1\u751f\u6539\u53d8\u3002\u6240\u4ee5\u63a8\u8350\u4f7f\u7528union-by-size</p>"},{"location":"notebooks/fds/8/#worst-case-for-union-by-rank-and-path-compression","title":"Worst Case for Union-by-Rank and Path Compression","text":"<p>\u5e76\u67e5\u96c6\u7684\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u8981\u5206\u6790\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u5f53\u56f0\u96be\u3002\u4e0b\u9762\u7684\u5185\u5bb9\u4ec5\u4f9b\u53c2\u8003\uff0c\u8003\u8bd5\u4e0d\u505a\u8981\u6c42\u3002</p> <p>\u5f15\u7406\uff1a\u4ee4\\(T(M, N)\\)\u4e3a\u5904\u7406\u6df7\u5408\u8fd0\u7b97\\(M \\ge N\\) \u67e5\u627e\u8fd0\u7b97\u548c\\(N - 1\\)\u6b21\u5408\u5e76\u8fd0\u7b97\u7684\u6240\u9700\u6700\u5927\u65f6\u95f4\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6b63\u5e38\u6570\\(k_1, k_2\\)\uff1a $$ k_1M \\alpha(M, N) \\le T(M, N) \\le k_2M \\alpha(M, N) $$ \u5373\u5e76\u67e5\u96c6\u6700\u574f\u60c5\u51b5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\\(\\Theta(M\\alpha (M, N))\\)</p> <p>\u963f\u514b\u66fc\u51fd\u6570(Ackermann's Function)\uff1a\\(\\alpha (M, N)\\) ^ab877c $$ A(i, j) =  \\begin{cases} 2^j &amp; i = 1 \\text{ and } j \\ge 1 \\ A(i - 1, 2) &amp; i \\ge 2 \\text{ and } j = 1 \\ A(i - 1, A(i, j - 1)) &amp; i \\ge 2 \\text{ and } j \\ge 2 \\end{cases} $$ \u8be6\u7ec6\u4ecb\u7ecd</p> <p>\u6ce8\uff1a\u5373\u4f7f\\(i, j\\)\u6570\u5b57\u5f88\u5c0f\uff0c\\(A(i, j)\\)\u7ed3\u679c\u53ef\u80fd\u4e5f\u975e\u5e38\u5927\uff0c\u6bd4\u5982\\(A(2, 4) = 2^{65536}\\)</p> <p>\\(\\alpha (M, N) = \\min\\{ i\\ge 1 | A(i, \\lfloor M / N \\rfloor )&gt; \\log N\\} \\le O(\\log^* N) \\le 4\\)</p> <p>\u6ce8\uff1a\\(\\log^*N\\)\u662f\u963f\u514b\u66fc\u51fd\u6570\u7684\u53cd\u51fd\u6570\uff0c\u4ee3\u8868\u7528\u4e8e\\(N\\)\u7684\u5bf9\u6570\u7684\u6b21\u6570\uff0c\u4f7f\u5176\u6700\u7ec8\u7ed3\u679c\\(\\le 1\\)\u3002\u6bd4\u5982\u4e0a\u4f8b\u4e2d\\(\\log^* 2^{65536} = 5\\)\uff0c\u56e0\u4e3a\\(\\log\\log\\log\\log\\log(2^{65536}) = 1\\)</p> <p>^e5be9e</p>"},{"location":"notebooks/fds/8/#an-application","title":"An Application","text":"<p>\u5e94\u7528\uff1a\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u7684\u6587\u4ef6\u4f20\u8f93\uff08\u5177\u4f53\u5185\u5bb9\u89c1\u8bfe\u672c\\(P_{279}\\)\uff0c\u4e5f\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u7f16\u7a0b\u9898\uff09</p> <p>\u540e\u7eed\u7ae0\u8282\u4e2d\u4f1a\u6709\u66f4\u597d\u7684\u5e94\u7528</p>"},{"location":"notebooks/fds/8/#problems","title":"Problems","text":"<p>2-1. The array representation of a disjoint set containing numbers 0 to 8 is given by { 1, -4, 1, 1, -3, 4, 4, 8, -2 }. Then to union the two sets which contain 6 and 8 (with union-by-size), the index of the resulting root and the value stored at the root are: A. 1 and -6 B. 4 and -5 C. 8 and -5 D. 8 and -6</p> <p>B \u8fd9\u9898\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u753b\u4e00\u4e0b\u56fe\u5c31ok\u4e86<sub>~\uff08\u5f53\u65f6\u8111\u5b50\u6ca1\u957f\uff09</sub>~</p> <p>7-1 File Transfer</p> <p>We have a network of computers and a list of bi-directional connections. Each of these connections allows a file transfer from one computer to another. Is it possible to send a file from any computer on the network to any other?</p> <p>Input Specification:</p> <p>Each input file contains one test case. For each test case, the first line contains\u00a0N\u00a0(2\u2264N\u2264104), the total number of computers in a network. Each computer in the network is then represented by a positive integer between 1 and\u00a0N. Then in the following lines, the input is given in the format:</p> <pre><code>I c1 c2  \n</code></pre> <p>where\u00a0<code>I</code>\u00a0stands for inputting a connection between\u00a0<code>c1</code>\u00a0and\u00a0<code>c2</code>; or</p> <pre><code>C c1 c2    \n</code></pre> <p>where\u00a0<code>C</code>\u00a0stands for checking if it is possible to transfer files between\u00a0<code>c1</code>\u00a0and\u00a0<code>c2</code>; or</p> <pre><code>S\n</code></pre> <p>where\u00a0<code>S</code>\u00a0stands for stopping this case.</p> <p>Output Specification:</p> <p>For each\u00a0<code>C</code>\u00a0case, print in one line the word \"yes\" or \"no\" if it is possible or impossible to transfer files between\u00a0<code>c1</code>\u00a0and\u00a0<code>c2</code>, respectively. At the end of each case, print in one line \"The network is connected.\" if there is a path between any pair of computers; or \"There are\u00a0<code>k</code>\u00a0components.\" where\u00a0<code>k</code>\u00a0is the number of connected components in this network.</p> <p>Sample Input 1:</p> <pre><code>5\nC 3 2\nI 3 2\nC 1 5\nI 4 5\nI 2 4\nC 3 5\nS\n</code></pre> <p>Sample Output 1:</p> <pre><code>no\nno\nyes\nThere are 2 components.\n</code></pre> <p>Sample Input 2:</p> <pre><code>5\nC 3 2\nI 3 2\nC 1 5\nI 4 5\nI 2 4\nC 3 5\nI 1 3\nC 1 5\nS\n</code></pre> <p>Sample Output 2:</p> <pre><code>no\nno\nyes\nyes\nThe network is connected.\n</code></pre> <p>my code <pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#define SIZE 100001\nint s[SIZE];\nvoid Init(int n);\nint Find(int x);\nvoid Union(int n1, int n2);\nvoid CheckCnt(int n1, int n2);\nvoid JoinCnt(int n1, int n2);\nvoid CheckAll(int n);\nint main()\n{\nint n, i;\nchar opt;\nint num1, num2;\nscanf(\"%d\", &amp;n);\ngetchar();\nInit(n);\nopt = getchar();\nwhile (opt != 'S')\n{\nscanf(\"%d%d\", &amp;num1, &amp;num2);\ngetchar();\nif (opt == 'C')      CheckCnt(num1, num2);            else if (opt == 'I')\nJoinCnt(num1, num2);\nopt = getchar();\n}\nCheckAll(n);\nreturn 0;\n}\nvoid Init(int n)\n{\nint i;\nfor (i = 1; i &lt;= n; i++)\ns[i] = -1;\n}\nint Find(int x)\n{\nif (s[x] &lt;= 0)\nreturn x;\nelse return s[x] = Find(s[x]);\n}\nvoid Union(int n1, int n2)\n{\nif (n1 == n2)\nreturn;\nif (s[n2] &lt; s[n1])\n{\ns[n2] += s[n1];\ns[n1] = n2;\n}\nelse\n{\ns[n1] += s[n2];\ns[n2] = n1;\n}\n}\nvoid CheckCnt(int n1, int n2)\n{\nif (Find(n1) == Find(n2))\nprintf(\"yes\\n\");\nelse\nprintf(\"no\\n\");\n}\nvoid JoinCnt(int n1, int n2)\n{\nUnion(Find(n1), Find(n2)); // Important!\n}\nvoid CheckAll(int n)\n{\nint i;\nint cnt = 0;\nfor (i = 1; i &lt;= n; i++)\n{\nif (s[i] &lt;= 0)\ncnt++;       }\nif (cnt == 1)\nprintf(\"The network is connected.\\n\");\nelse if (cnt &gt; 1)\nprintf(\"There are %d components.\\n\", cnt);\n}\n</code></pre></p>"},{"location":"notebooks/fds/9/","title":"Chap 9 Graph Algorithm","text":":material-circle-edit-outline: \u7ea6 7304 \u4e2a\u5b57 :fontawesome-solid-code: 539 \u884c\u4ee3\u7801 :material-clock-time-two-outline: \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 31 \u5206\u949f"},{"location":"notebooks/fds/9/#definitions","title":"Definitions","text":"<ul> <li>G(V, E)\uff1aG\u8868\u793a\u56fe(graph)\uff0cV = V(G) \u8868\u793a\u5173\u4e8e\u9876\u70b9(vertices) \u7684\u6709\u9650\u975e\u7a7a\u96c6\u5408\uff0cE = E(G) \u8868\u793a\u5173\u4e8e\u8fb9(edges/arcs) \u7684\u6709\u9650\u96c6\u5408</li> <li>\u65e0\u5411\u56fe(undirected graph)\uff1a\\((v_i, v_j) = (v_j, v_i)\\)\u8868\u793a\u76f8\u540c\u7684\u8fb9</li> <li>\u6709\u5411\u56fe(directed graph, digraph)\uff1a\\(&lt;v_i, v_j&gt; \\ne &lt;v_j, v_i&gt;\\)     &gt;\\(&lt;v_i, v_j&gt;\\)\uff1a</li> </ul> <p>\u9650\u5236\uff1a + \u81ea\u73af(self loop) \u662f\u975e\u6cd5\u7684\uff1a + \u4e0d\u8003\u8651\u591a\u91cd\u56fe(multigraph) \uff08\u4e24\u4e2a\u8282\u70b9\u95f4\u6709\u591a\u6761\u8fb9\uff09\u7684\u60c5\u51b5</p> <ul> <li>\u5b8c\u5168\u56fe(complete graph)\uff1a\u6709\u6700\u5927\u6570\u91cf\u7684\u8fb9\u7684\u56fe\uff08\u6bcf\u5bf9\u9876\u70b9\u90fd\u6709\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\uff09<ul> <li>\u65e0\u5411\u56fe\uff1a\\(V = n \\quad E = C^2_n = \\frac{n(n - 1)}{2}\\) </li> <li>\u6709\u5411\u56fe\uff1a\\(V = n \\quad E = P^2_n = n(n - 1)\\) </li> </ul> </li> <li>\u90bb\u63a5(adjacent)<ul> <li>\u65e0\u5411\u56fe\uff1a\u5982\u679c\\((v_i, v_j)\\)\u5b58\u5728\uff0c\u5219\u79f0\\(v_i, v_j\\)\u662f\u90bb\u63a5\u7684</li> <li>\u6709\u5411\u56fe\uff1a\u5982\u679c\\(&lt;v_i, v_j&gt;\\)\u5b58\u5728\uff0c\u5219\u79f0\\(v_i\\)\u5230\\(v_j\\)\u662f\u90bb\u63a5\u7684\uff0c\u6216\u8005\u8bf4\\(v_j\\)\u6765\u81ea\\(v_i\\)\u662f\u90bb\u63a5\u7684 </li> </ul> </li> <li>\u5b50\u56fe(subgraph)\\(G' \\subset G\\)\uff0c\\(V(G') \\subseteq V(G) \\wedge E(G') \\subseteq E(G)\\)</li> <li>\u4ece\\(v_p\\)\u5230\\(v_q\\)\u7684\u8def\u5f84(path)(\\(\\subset G\\))\uff1a\\(\\{v_p, v_{i1}, v_{i2}, \\dots, v_{in}, v_q\\}\\)\uff0c\u4f7f\u5f97\\((v_p, v_{i1}), (v_{i1}, v_{i2}), \\dots, (v_{in}, v_q)\\)\u6216\u8005\\(&lt;v_p, v_{i1}&gt;, &lt;v_{i1}, v_{i2}&gt;, \\dots, &lt;v_{in}, v_q&gt; \\subset E(G)\\)</li> <li>\u8def\u5f84\u7684\u957f\u5ea6(length)\uff1a\u8def\u5f84\u4e0a\u8fb9\u7684\u6761\u6570</li> <li>\u7b80\u5355\u8def\u5f84(simple path)\uff1a\u5bf9\u4e8e\u4e0a\u8ff0\u8def\u5f84\uff0c\\(v_{i1}, v_{i2}, \\dots, v_{in}\\)\u662f\u4e0d\u540c\u7684(\u4e0d\u4f1a\u591a\u6b21\u7ecf\u8fc7\u540c\u4e00\u9876\u70b9)</li> <li>\u73af(cycle)\uff1a\u5bf9\u4e8e\u4e00\u6761\u7b80\u5355\u8def\u5f84\uff0c\u8d77\u70b9\u4e0e\u7ec8\u70b9\u76f8\u540c\uff0c\u5373\\(v_p = v_q\\)</li> <li> <p>\u8fde\u901a(connected)</p> <ul> <li> <p>\u65e0\u5411\u56fe\uff1a</p> <ul> <li>\u5bf9\u4e8e\u4e24\u4e2a\u9876\u70b9\\(v_i, v_j\\)\u800c\u8a00\uff0c\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u5219\u79f0\u5b83\u4eec\u662f\u8fde\u901a\u7684</li> <li>\u5bf9\u4e8e\u6574\u5f20\u65e0\u5411\u56fe\\(G\\)\u800c\u8a00\uff0c\u5982\u679c\u56fe\u5185\u4e24\u4e2a\u4e0d\u540c\u7684\u8282\u70b9\u4e4b\u95f4\u76f8\u4e92\u8fde\u901a\uff0c\u5219\u79f0\u6574\u5f20\u56fe\u662f\u8fde\u901a\u7684 <p>\u5bf9\u4e8e\\(n\\)\u4e2a\u9876\u70b9\u7684\u65e0\u5411\u56fe\uff0c\u6700\u5c11\u9700\u8981\\(n - 1\\)\u6761\u8fb9\u6765\u5b9e\u73b0\u6574\u5f20\u56fe\u7684\u8fde\u901a</p> </li> <li>\u65e0\u5411\u56fe\\(G\\)\u7684(\u8fde\u901a)\u5206\u91cf(component)\uff1a\u6781\u5927\u8fde\u901a\u5b50\u56fe(\u4e00\u5f20\u56fe\u4e2d\u4ec5\u67091\u4e2a)</li> <li>\u6811(tree) \u662f\u8fde\u901a\u4e14 \u65e0\u73af(acyclic) \u7684\u56fe</li> </ul> </li> <li> <p>\u6709\u5411\u56fe\uff1a</p> <ul> <li>\u6709\u5411\u65e0\u73af\u56fe(directed acyclic graph, DAG)</li> <li>\u5f3a\u8fde\u901a(strongly connected) \u6709\u5411\u56fe\\(G\\)\uff1a\u5bf9\u4e8e\\(V(G)\\)\u4e2d\u7684\u6bcf\u5bf9\u9876\u70b9\\(v_i, v_j\\)\uff0c\u5b58\u5728\u4ece\\(v_i\\)\u5230\\(v_j\\)==\u548c==\u4ece\\(v_j\\)\u5230\\(v_i\\)\u7684\u6709\u5411\u8def\u5f84</li> <li>\u5f31\u8fde\u901a(weakly connected) \u6709\u5411\u56fe\uff1a\u5728\u4e0d\u8003\u8651\u65b9\u5411\u7684\u60c5\u51b5\u4e0b(\u5373\u65e0\u5411\u56fe)\uff0c\u6574\u5f20\u56fe\u662f\u8fde\u901a\u7684(\u5373\u5bf9\u4e8e\\(V(G)\\)\u4e2d\u7684\u6bcf\u5bf9\u9876\u70b9\\(v_i, v_j\\)\uff0c\u5b58\u5728\u4ece\\(v_i\\)\u5230\\(v_j\\)==\u6216==\u4ece\\(v_j\\)\u5230\\(v_i\\)\u7684\u6709\u5411\u8def\u5f84) <p>\u5bf9\u4e8e\\(n\\)\u4e2a\u9876\u70b9\u7684\u5f31\u8fde\u901a\u6709\u5411\u56fe\uff0c\u6700\u5c11\u9700\u8981\\(n - 1\\)\u6761\u8fb9\u6765\u5b9e\u73b0\u6574\u5f20\u56fe\u7684\u8fde\u901a</p> </li> <li>\u5f3a\u8fde\u901a\u5206\u91cf(strongly connected component) \uff1a\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe</li> <li>\u5f31\u8fde\u901a\u5206\u91cf(weakly connected component) \uff1a\u6781\u5927\u5f31\u8fde\u901a\u5b50\u56fe</li> </ul> </li> </ul> <p>\u6ce8\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u4ec5\u6709\u4e00\u4e2a\u9876\u70b9\u7684\u56fe\uff0c\u5b83\u81ea\u8eab\u5c31\u662f\u8fde\u901a\u5206\u91cf + \u5ea6(degree)\uff1aDegree(v)\uff0c\u4e0e\u9876\u70b9v\u76f8\u8fde\u7684\u8fb9\u6570 \u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\\(G\\)\u800c\u8a00\uff0c\u5ea6\u5206\u4e3a\u5165\u5ea6(in-degree) \u548c\u51fa\u5ea6(out-degree)\uff0c\u4f8b\u5982\uff1a  \u5047\u5982\\(G\\)\u6709\\(v\\)\u4e2a\u9876\u70b9\u548c\\(e\\)\u6761\u8fb9\uff0c\u90a3\u4e48\\(e = \\dfrac{\\sum\\limits_{i = 0}^{n - 1}d_i}{2}\\)\uff0c\u5176\u4e2d\\(d_i = \\text{degree}(v_i)\\) \u6ce8\uff1a\u5bf9\u4e8e\u6709\u5411\u56fe\u800c\u8a00\uff0c\u6240\u6709\u9876\u70b9\u5165\u5ea6\u4e4b\u548c = \u6240\u6709\u9876\u70b9\u51fa\u5ea6\u4e4b\u548c</p> </li> </ul>"},{"location":"notebooks/fds/9/#representation-of-graph","title":"Representation of Graph","text":"<p>\u6ce8\uff1a\u6709\u6210\u5343\u4e0a\u4e07\u4e2d\u8868\u793a\u56fe\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u53ea\u5217\u51fa\u6700\u5e38\u7528\u7684\u51e0\u79cd\u3002\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u60c5\u51b5\u8bbe\u8ba1\u51fa\u76f8\u5e94\u7684\u8868\u793a\u6cd5</p> <p>\u6cd5\u4e00\uff1a\u90bb\u63a5\u77e9\u9635(adjacency matrix)</p> <p>\u5bf9\u4e8e\u4e00\u5f20\u5177\u6709\\(n(n \\ge 1)\\)\u4e2a\u8282\u70b9\u7684\u56fe\\(G(V, E)\\)\uff0c\u5b9a\u4e49\u90bb\u63a5\u77e9\u9635\\(adj\\_mat [i] [j]\\)\u4e3a $$ adj_mat[i][j] = \\begin{cases}1 &amp; \\text{if } (v_i, v_j) \\text{ or }  \\in E(G) \\ 0 &amp; \\text{otherwise}\\end{cases} $$ \u6240\u4ee5\u4e5f\u5c31\u6709\uff1a $$ \\text{degree}(i) = \\begin{cases}\\sum\\limits_{j = 0}^{n - 1} adj_mat[i][j] &amp; \\text{if G is undirected} \\ \\sum\\limits_{j = 0}^{n - 1} adj_mat[i][j] + \\sum\\limits_{j = 0}^{n - 1}adj_mat[j][i] &amp; \\text{if G is directed} \\end{cases} $$ <p>\u4e0d\u96be\u770b\u51fa\uff0c\u5982\u679c\\(G\\)\u662f\u65e0\u5411\u7684\uff0c\u5219\u8be5\u90bb\u63a5\u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u6b64\u6d6a\u8d39\u4e86\u4e00\u534a\u7684\u7a7a\u95f4\u548c\u65f6\u95f4\uff08\u590d\u6742\u5ea6\uff1a\\(\\Theta(|V|^2)\\)\uff09</p> <p>\u4f46\u662f\u7528\u5728\u7a20\u5bc6(dense) \u56fe(\\(|E| = \\Theta(|V|^2)\\))\u4e2d\u662f\u6bd4\u8f83\u5408\u9002\u7684</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u8fd9\u79cd\u65b9\u6cd5\u6765\u8282\u7701\u4e00\u534a\u7684\u7a7a\u95f4(\u5c06\u4e0b\u4e09\u89d2\u77e9\u9635\u5b58\u5165\u4e00\u7ef4\u6570\u7ec4\u4e2d)\ud83d\udc47 \\(adj\\_mat[n(n+1)/2] = \\{a_{11}, a_{21}, \\dots, a_{n1}, \\dots, a_{nn}\\}\\)\uff0c\u5176\u4e2d\\(a_{ij}\\)\u7684\u7d22\u5f15\u4e3a\\(\\frac{i(i-1)}{2} + j\\)</p> <p>\u6cd5\u4e8c\uff1a\u90bb\u63a5\u8868(adjacency lists)</p> <p>\u6765\u770b\u4e2a\ud83c\udf30\uff1a \u5982\u4f55\u5b58\u50a8\u8fd9\u5f20\u56fe\uff1f + \u90bb\u63a5\u77e9\u9635\uff1a\\(adj\\_mat = \\begin{bmatrix}0 &amp; 1 &amp; 0 \\\\ 1 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 0\\end{bmatrix}\\) + \u90bb\u63a5\u8868\uff1a</p> <p>\u6ce8\uff1a\u8282\u70b9\u7684\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981</p> <p>\\(\\therefore\\) \u5bf9\u4e8e\u65e0\u5411\u56fe\\(G\\)\uff0c\u7a7a\u95f4\\(S = n\\)\u4e2a\u5934 + \\(2e\\)\u4e2a\u8282\u70b9 = \\((n + 2e)\\)\u4e2a\u6307\u9488 + \\(2e\\)\u4e2a\u6574\u578b</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\\(T = E(G) = O(|V| + |E|)\\)\uff0c\u9002\u5408\u7528\u4e8e\u7a00\u758f(sparse) \u56fe(\\(|E| &lt; \\Theta(|V|^2)\\))</p> <p>\u6ce8\uff1a\u4e8b\u5b9e\u4e0a\uff0c\u90bb\u63a5\u8868\u53ef\u4ee5\u80dc\u4efb\u5404\u79cd\u56fe\u7684\u5b58\u50a8</p> <p>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff0cDegree(i) = graph[i] \u4e2d\u8282\u70b9\u7684\u4e2a\u6570</p> <p>\u800c\u5982\u679c\\(G\\)\u662f\u6709\u5411\u7684\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230in-degree(i)     + \u6cd51\uff1a\u9006\u8f6c\u90bb\u63a5\u94fe\u8868\u7684\u505a\u6cd5              + \u6cd52\uff1a\u7528\u591a\u94fe\u8868(multilist) \u8868\u793a\u90bb\u63a5\u77e9\u9635\\(adj\\_mat[i][j]\\) </p> <p>\u5c3d\u7ba1\u591a\u94fe\u8868\u7684\u8868\u793a\u770b\u8d77\u6765\u633a\u4f18\u96c5\uff0c\u4f46\u5b9e\u73b0\u8d77\u6765\u76f8\u5f53\u590d\u6742\uff08\u56de\u5fc6[[Chap 3 Lists, Stacks, and Queues#^222af4|\u4e4b\u524d\u7684\u4f8b\u5b50]]\uff09\uff0c\u56e0\u6b64\u66f4\u63a8\u8350\u6cd51</p> <p>\u8865\u5145\uff1a\u6709\u65f6\u9876\u70b9\u7684\u503c\u4e0d\u4e00\u5b9a\u662f\u6574\u6570\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u5b57\u7b26\u4e32\uff0c\u8fd9\u65f6\u9700\u8981\u7ef4\u62a4\u4e00\u5f20\u4ece\u5b57\u7b26\u4e32\u6620\u5c04\u5230\u6574\u6570\u7d22\u5f15\u7684\u8868\u683c\uff0c\u5728\u56fe\u4e2d\u7528\u7d22\u5f15\u4ee3\u66ff\u5b57\u7b26\u4e32</p> <p>\u6cd5\u4e09\uff1a\u90bb\u63a5\u591a\u91cd\u8868(adjacency multilist)</p> <p>\u6ce8\uff1a\u8fd9\u4e2a\u4e0d\u4f5c\u8981\u6c42\uff0c\u8ba4\u8bc6\u5373\u53ef</p> <p>\u5728\u4e4b\u524d\u7684\u90bb\u63a5\u8868\u91cc\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9\\((v_i, v_j)\\)\uff0c\u6211\u4eec\u4f1a\u6709\u4e24\u4e2a\u8282\u70b9\uff1a </p> <p>\u901a\u8fc7\u6539\u8fdb\uff0c\u5c06\u8fd9\u4e24\u4e2a\u8282\u70b9\u7ed3\u5408\u5230\u4e00\u8d77\uff0c</p> <p>\u4e8e\u662f\u5c31\u6709\u5982\u4e0b\u8868\u793a\u65b9\u6cd5\uff1a </p> <p>mark\u8868\u793a\u67d0\u4e00\u6761\u8fb9</p> <p>\ud83c\udf30 </p> <p>\u89c2\u5bdf\u53d1\u73b0\uff0c\u5728\u6ca1\u6709\u8003\u8651mark\u5b58\u50a8\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u8868\u793a\u6cd5\u7684\u5360\u7528\u7a7a\u95f4\u4e0e\u90bb\u63a5\u8868\u5b8c\u5168\u4e00\u6837\u3002\u867d\u7136\u5b83\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u7565\u5fae\u9ad8\u4e86\u70b9\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b(\u6bd4\u5982\u68c0\u9a8c\u67d0\u6761\u8fb9\u540e\u8fd8\u8981\u68c0\u9a8c\u4e0b\u4e00\u6761\u8fb9)\u6bd4\u8f83\u6709\u5229</p> <p>\u6709\u65f6\uff0c\u6211\u4eec\u4f1a\u9047\u5230\u52a0\u6743\u8fb9(weighted edges) \u7684\u60c5\u51b5\uff0c\u5904\u7406\u65b9\u5f0f\u5982\u4e0b\uff1a + \u90bb\u63a5\u77e9\u9635\uff1a\\(adj\\_mat[i][j] = \\text{weight}\\) + \u90bb\u63a5\u8868/\u90bb\u63a5\u591a\u91cd\u8868\uff1a\u4e3a\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u6743\u91cd\u7684\u5b57\u6bb5</p>"},{"location":"notebooks/fds/9/#topological-sort","title":"Topological Sort","text":"<p>AOV\u7f51(activity on vertex network)\uff1a\u5bf9\u4e8e\u6709\u5411\u56fe\\(G\\)\uff0c\\(V(G)\\)\u8868\u793a\u6d3b\u52a8\uff0c\\(E(G)\\)\u8868\u793a\u4f4d\u6b21\u5173\u7cfb</p> <p>\u6bd4\u5982\u8fd9\u5f20\u56fe\u8868\u793aC1\u662fC3\u7684\u524d\u7f6e\u6d3b\u52a8\uff1a</p> <p>\u5982\u679c\u4ece\\(i\\)\u5230\\(j\\)\u6709\u4e00\u6761\u8def\u5f84\uff0c\u5219\u79f0\\(i\\)\u662f\\(j\\)\u7684\u524d\u4efb(predecessor)\u3002\u5982\u679c\\(&lt;i, j&gt; \\in E(G)\\)\uff0c\u5219\u79f0\\(i\\)\u662f\\(j\\)\u7684\u76f4\u63a5\u524d\u4efb(immediate predecessor)\u3002\u79f0\\(j\\)\u662f\\(i\\)\u7684 (\u76f4\u63a5)\u540e\u4efb((immediate) predecessor)</p> <p>\u504f\u5e8f(partial order)\uff1a\u5177\u6709\u4f20\u9012\u6027(\\(i \\rightarrow j, j \\rightarrow k \\Rightarrow i \\rightarrow k\\)) \u548c \u975e\u81ea\u53cd\u6027(\u4e0d\u5b58\u5728\\(i \\rightarrow i\\)) \u7684\u4f4d\u6b21\u5173\u7cfb</p> <p>\u5982\u679c\u5177\u6709\u81ea\u53cd\u6027\uff0c\u5c31\u4f1a\u51fa\u73b0\u8981\u505a\u4e00\u4ef6\u4e8b\\(i\\)\u4e4b\u524d\u8981\u5b8c\u6210\\(i\\)\u7684\u602a\u5708\uff0c\u56e0\u6b64\u274c</p> <p>\u6ce8\uff1a\u504f\u5e8f\u7684\u6982\u5ff5\u53ef\u89c1dm[[Chap 9 Relations#9.6 Partial Orderings|9.6\u8282]]</p> <p>\u53ef\u884c\u7684AOV\u7f51\u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe(DAG)</p> <p>\u6ce8\uff1a\u4e0eAOV\u7f51\u76f8\u5bf9\u7684\u8fd8\u6709AOE\u7f51(activity on edge network)\uff0c\u5177\u4f53\u5185\u5bb9\u53ef\u6233\u8fd9</p> <p>\u62d3\u6251\u5e8f(topological order) \u662f\u4e00\u5f20\u56fe\u7684\u9876\u70b9\u7684\u7ebf\u6027\u987a\u5e8f\uff0c\u6ee1\u8db3\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\\(i, j\\)\uff0c\u5982\u679c\\(i\\)\u662f\\(j\\)\u7684\u524d\u4efb\uff0c\u5219\u5728\u7ebf\u6027\u987a\u5e8f\u4e2d\\(i\\)\u8981\u51fa\u73b0\u5728\\(j\\)\u4e4b\u524d</p> <p>\u6ce8\uff1a + \u5bf9\u4e8e\u4e00\u4e2a\u7f51\uff0c\u62d3\u6251\u5e8f\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684 + \u5f3a\u8fde\u901a\u7684DAG\u4e00\u5b9a\u6709\u552f\u4e00\u7684\u62d3\u6251\u5e8f + \u5982\u679c\u62d3\u6251\u5e8f\u4e2d\u4e00\u4e2a\u9876\u70b9\u51fa\u73b0\u5728\u53e6\u4e00\u4e2a\u9876\u70b9\u7684\u524d\u9762\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e0d\u4e00\u5b9a\u5b58\u5728\u8def\u5f84</p> <p>\u7b97\u6cd5\u5b9e\u73b0\uff1a <pre><code>// version 1\nvoid Topsort(Graph G)\n{\nint Counter;\nVertex V, W;\nfor (Counter = 0; Counter &lt; NumVertex; Counter++)\n{\nV = FindNewVertexOfDegreeZero(); // O(|V|)\nif (V == NotAVertex)\n{\nError(\"Graph has a cycle\");\nbreak;\n}\nTopNum[V] = Counter; // or output V\nfor (each W adjacent from V)\nindegreep[W]--;\n}\n}\n</code></pre></p> <p>\u6ce8\uff1a + <code>FindNewVertexOfDegreeZero()</code>\uff1a\u626b\u63cf<code>Indegree[]</code>\u6570\u7ec4\uff0c\u627e\u5230\u5165\u5ea6\u4e3a0\u4e14\u672a\u8d4b\u4e88\u62d3\u6251\u5e8f\u7684\u9876\u70b9\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u9876\u70b9\uff0c\u90a3\u4e48\u8868\u660e\u56fe\u4e2d\u51fa\u73b0\u4e86\u73af\u3002 + \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T = O(|V|^2)\\) \ud83d\udc4e</p> <p>\u6539\u8fdb\u65b9\u6cd5\uff1a\u5c06\u6240\u6709==\u672a\u8d4b\u4e88\u62d3\u6251\u5e8f\u7684\u3001\u5ea6\u4e3a0\u7684\u9876\u70b9==\u653e\u5165\u7279\u6b8a\u7684\u76d2\u5b50(\u6bd4\u5982\u961f\u5217\u6216\u5806\u6808)\u91cc <pre><code>// version 2, using queue ADT\nvoid Topsort(Graph G)\n{\nQueue Q;\nint Counter = 0;\nVertex V, W;\nQ = CreateQueue(NumVertex); for (each vertex V)\nif (indegree[V] == 0) Enqueue(V, Q);\nwhile (!isEmpty(Q))\n{\nV = Dequeue(Q);\nTopNum[V] = ++Counter;  // assign next\nfor (each W adjacent from V)\nif (--indegree[W] == 0)\nEnqueue(W, Q);\n} // end-while\nif (Counter != NumVertex)\nError(\"Graph has a cycle\")\nDisposeQueue(Q); // free memery\n}\n</code></pre></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(|E| + |V|)\\)</p> <p>\ud83c\udf30  </p> <p>\u6ce8\uff1a\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u6392\u8bfe\u8868\u7684\u65f6\u5019\u5c06\u961f\u5217\u4f5c\u4e3aspecial box\uff0c\u800c\u4e0d\u662f\u5806\u6808\uff0c\u56e0\u4e3a\u91c7\u7528\u540e\u8005\u7684\u65b9\u5f0f\uff0c\u5b66\u751f\u4f1a\u6df1\u5165\u5b66\u5b8c\u4e00\u6574\u4e2a\u4f53\u7cfb\uff0c\u7136\u540e\u624d\u5f00\u59cb\u5b66\u4e0b\u4e00\u4e2a\u4f53\u7cfb\uff0c\u8fd9\u6837\u5b66\u65f6\u95f4\u4e0d\u591f\u7528\u3002</p>"},{"location":"notebooks/fds/9/#shortest-path-algorithms","title":"Shortest Path Algorithms","text":"<p>\u7ed9\u5b9a\u4e00\u5f20\u6709\u5411\u56fe\\(G(V, E)\\)\uff0c\u4ee5\u53ca\u6210\u672c\u51fd\u6570\\(c(e)\\)\uff0c\\(e \\in E(G)\\)\uff0c\u4ece\u6e90(source) \u5230\u76ee\u7684\u5730(destination) \u7684\u8def\u5f84\\(P\\)\u7684\u957f\u5ea6(length) \u4e3a\\(\\sum\\limits_{e_i \\subset P}c(e_i)\\)\uff08\u4e5f\u79f0\u4e3a\u6743\u91cd\u8def\u5f84\u957f\u5ea6(weighted path length)\uff09</p>"},{"location":"notebooks/fds/9/#single-source-shortest-path-problem","title":"Single-Source Shortest-Path Problem","text":"<p>\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u5f20\u6743\u91cd\u56fe\\(G(V, E)\\)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u53ef\u533a\u5206\u7684\u9876\u70b9\\(s\\)\uff0c\u5bfb\u627e\u4ece\\(s\\)\u5230\\(G\\)\u4e2d\u6240\u6709\u5176\u4ed6\u9876\u70b9\u7684\u6700\u77ed\u6743\u91cd\u8def\u5f84 </p> <p>\u6ce8\uff1a + \u53f3\u56fe\u5b58\u5728\u8d1f\u7684\u8fb9\uff0c\u8fd9\u6837\u6700\u77ed\u8def\u7684\u957f\u5ea6\u53ef\u4ee5\u662f\u65e0\u7a77\u5c0f\u3002\u56e0\u6b64\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6700\u77ed\u8def\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u56e0\u4e3a\u9677\u5165\u4e86\u6b7b\u5faa\u73af\u3002\u8fd9\u79cd\u5faa\u73af\u88ab\u79f0\u4e3a\u8d1f\u503c\u73af(negative-cost cycle) + \u4ece\\(s\\)\u5230\\(s\\)\u7684\u6700\u77ed\u8def\u5f84\u88ab\u5b9a\u4e49\u4e3a0 + \u73b0\u5728\uff0c\u8fd8\u6ca1\u6709\u4e00\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\u7684\u901f\u5ea6\u5feb\u4e8e\u627e\u5230\u4ece\\(s\\)\u5230\u6240\u6709\u9876\u70b9\u7684\u8def\u5f84\u7684\u7b97\u6cd5</p>"},{"location":"notebooks/fds/9/#unweighted-shortest-paths","title":"Unweighted Shortest Paths","text":"<p>\u6240\u6709\u8fb9\u7684\u6743\u91cd = 1</p> <p></p> <p>\u5982\u56fe\u6240\u793a\uff0c\u4e3a\u4e86\u627e\u5230\u4ece\\(v_3\\)\u51fa\u53d1\u5230\u5176\u4ed6\u9876\u70b9\u7684\u6240\u6709\u6700\u77ed\u8def\u5f84\uff1a + \u5148\u627e\u5230\u4e0e\\(v_3\\)\u90bb\u63a5\u7684\u9876\u70b9\uff0c\u8bb0\u4ece\\(v_3\\)\u5230\u8fd9\u4e9b\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e3a1 + \u7136\u540e\u518d\u4ece\u8fd9\u4e9b\u9876\u70b9\u51fa\u53d1\uff0c\u627e\u5230\u4e0e\u5b83\u4eec\u90bb\u63a5\u7684\u9876\u70b9\u3002\u5982\u679c\u65b0\u627e\u5230\u7684\u9876\u70b9\u8fd8\u6ca1\u6709\u76f8\u5e94\u7684\u6700\u77ed\u8def\u5f84\uff0c\u90a3\u5c31\u8bb0\u8fd9\u4e9b\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e3a2 + \u91cd\u590d\u6b65\u9aa42\uff0c\u76f4\u81f3\u6240\u6709\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u90fd\u5df2\u627e\u5230 \u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22(Breadth-first search, BFS)\uff1a\u8be5\u65b9\u6cd5\u4e00\u5c42\u5c42\u5730\u5904\u7406\u9876\u70b9\uff1a\u6700\u8fd1\u7684\u9876\u70b9\u6700\u5148\u5904\u7406\uff0c\u6700\u8fdc\u7684\u9876\u70b9\u6700\u540e\u5904\u7406\u3002\u8fd9\u548c\u6811\u4e2d\u7684 [[Chap 4 Trees#^770ab3|\u5c42\u5e8f\u904d\u5386]] \u7c7b\u4f3c</p> <p>\u5b9e\u73b0\uff1a + <code>Table[i].Dist</code> ::= \u4ece\\(s\\)\u5230\\(v_i\\)\u7684\u8ddd\u79bb \\(= \\begin{cases}\\infty &amp; \\text{if } v_i \\ne s \\\\ 0 &amp; \\text{if } v_i = s\\end{cases}\\)</p> <ul> <li> <p><code>Table[i].Known</code> ::= \\(\\begin{cases}1 \\quad \\text{if } v_i \\text{ is checked} \\\\ 0 \\quad \\text{if not}\\end{cases}\\)</p> <ul> <li>\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981\u8bbe\u8fd9\u4e2a\u5b57\u6bb5(\u56e0\u4e3a<code>Table[i].Dist</code>\u540c\u65f6\u5177\u5907\u6807\u8bb0\u529f\u80fd)\uff0c\u5199\u5728\u8fd9\u91cc\u53ea\u662f\u63d0\u9192\u4e00\u4e0b\u8981\u505a\u4e00\u4e0b\u6807\u8bb0</li> <li>\u5728\u521d\u59cb\u5316\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u7684<code>Table[i].Known = 0</code>\uff0c\u5305\u62ec\u8d77\u59cb\u9876\u70b9\uff0c\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u9876\u70b9\u88ab\u5904\u7406\u8fc7</li> </ul> </li> <li> <p><code>Table[i].Path</code> ::= \u8bb0\u5f55\u8def\u5f84\u4e0a\\(v_i\\)\u7684\u524d\u4e00\u4e2a\u9876\u70b9\uff0c\u4ee5\u4fbf\u6253\u5370\u6574\u6761\u8def\u5f84</p> </li> </ul> <p>\u4ee3\u7801\uff1a <pre><code>// version 1\nvoid Unweighted(Table T)\n{\nint CurrDist;\nVertex V, W;\nfor(CurrDist = 0; CurrDist &lt; NumVertex; CurrDist++)\n{\nfor (each vertex V)\nif (!T[V].Known &amp;&amp; T[V].Dist == CurrDist)\n{\nT[V].Known = true;\nfor (each W adjacent to V)\nif (T[W].Dist == infinity)\n{\nT[W].Dist = CurrDist + 1;\nT[W].Path = V;  // (*)\n}// end-if Dist == Infinity\n} // end-if !Known &amp;&amp;Dist == CurrDist\n} // end-for CurrDist\n}\n</code></pre></p> <p>\u6ce8\uff1a + \u8fd9\u4e2a\u7b97\u6cd5\u663e\u7136\u6ca1\u4ec0\u4e48\u6548\u7387\uff0c\u56e0\u4e3a\u5916\u5c42\u5faa\u73af\u8981\u5faa\u73af<code>NumVertex - 1</code>\u6b21\u624d\u7ed3\u675f\uff0c\u5373\u4f7f\u6240\u6709\u7684\u9876\u70b9\u65e9\u5c31\u5904\u7406\u8fc7\u4e86\u3002\u867d\u7136\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u5224\u65ad\u63d0\u524d\u7ed3\u675f\u5faa\u73af\uff0c\u4f46\u8fd9\u5e76\u6ca1\u6709\u5f71\u54cd\u6700\u574f\u60c5\u51b5\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u6bd4\u5982\uff1a      \u8d77\u59cb\u70b9\u4e3a\\(v_9\\)\uff0c\u7b2c\u4e00\u6b21\u5faa\u73af\u8981\u627e<code>CurrDist == 0</code>\u7684\u9876\u70b9(\u5373\\(v_9\\))\u3002\u6211\u4eec\u4e00\u822c\u4f1a\u6309\u7167\u8282\u70b9\u4e0b\u6807\u7684\u9012\u589e\u987a\u5e8f\u67e5\u627e\uff0c\u5219\u8981\u627e\u5230\\(v_9\\)\u9700\u8981\u4ece\u5934\u904d\u5386\u5230\u5c3e\uff1b\u800c\u4e14\u4e0d\u96be\u770b\u51fa\uff0c\u6bcf\u6b21\u5faa\u73af\u5747\u4f1a\u4ece\u5934\u904d\u5386\u5230\u5c3e(\u8d8a\u6765\u8d8a\u9760\u524d) + \u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\\(T = O(|V|^2)\\)\ud83d\udc4e</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u9876\u70b9\\(V\\)\u672a\u88ab\u6807\u8bb0\uff0c\u4f46\\(d_v \\ne \\infty\\)\uff0c\u90a3\u4e48\\(d_v = CurrDist\\) \u6216 \\(d_v = CurrDist + 1\\)\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u50cf\u4e0a\u9762\u90a3\u4e2a\u7b97\u6cd5\u4e00\u6837\u626b\u63cf\u6574\u4e2a\u8868\u6765\u627e\u5230\u5408\u9002\u7684\u9876\u70b9\u3002</p> <p>\u6539\u8fdb\u601d\u8def\uff1a\u7528\u4e24\u4e2a\u7bb1\u5b50\uff0c\u4e00\u4e2a\u7bb1\u5b50\u653e\u672a\u6807\u8bb0\u7684\u4e14\\(d_v = CurrDist\\)\u7684\u9876\u70b9\uff0c\u53e6\u4e00\u4e2a\u7bb1\u5b50\u653e\u672a\u6807\u8bb0\u7684\u4e14\\(d_v = CurrDist + 1\\)\u7684\u9876\u70b9\u3002\u90a3\u4e48\uff0c\u539f\u6765\u626b\u63cf\u6574\u5f20\u8868\u7684\u64cd\u4f5c\u53ef\u4ee5\u53d8\u6210\uff1a\u4ece\u7b2c1\u4e2a\u7bb1\u5b50\u627e\u4efb\u4e00\u9876\u70b9\\(V\\)\uff0c\u7b49\u5230(* ) \u90a3\u884c\u4ee3\u7801\u6267\u884c\u5b8c\u540e\uff0c\u5c06\\(W\\)\u653e\u5165\u7b2c2\u4e2a\u7bb1\u5b50\u3002\u7b49\u5230\u5916\u5c42<code>for</code>\u5faa\u73af\u4e00\u8f6e\u7ed3\u675f\u540e\uff0c\u7b2c1\u4e2a\u7bb1\u5b50\u4e3a\u7a7a\uff0c\u5c06\u7b2c2\u4e2a\u7bb1\u5b50\u7684\u9876\u70b9\u8f6c\u79fb\u5230\u7b2c1\u4e2a\u7bb1\u5b50\uff0c\u8fdb\u884c\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u961f\u5217\u5c31\u80fd\u5b8c\u6210\u4e0a\u8ff0\u6b65\u9aa4\uff1a</p> <p>\u8fd9\u91cc\u4e0d\u7528<code>Known</code>\u5b57\u6bb5\u662f\u56e0\u4e3a<code>Dequeue</code>\u5c31\u4ee3\u8868\u9876\u70b9\u5df2\u7ecf\u88ab\u5904\u7406\u8fc7\u4e86\uff0c\u4e0d\u4f1a\u518d\u56de\u5230\u961f\u5217\u91cc <pre><code>// version 2\nvoid Unweighted(Table T)\n{\n// T is initialized with the source vertex S given\nQueue Q;\nVertex V, W;\nQ = CreateQueue(NumVertex);\nMakeEmpty(Q);\nEnqueue(S, Q); // Enqueue the source vertex\nwhile (!IsEmpty(Q))\n{\nV = Dequeue(Q);\nT[V].Known = true;  // not really necessary\nfor (each W adjacent to V)\nif (T[W].Dist == Infinity)\n{\nT[W].Dist = T[V].Dist + 1;\nT[W].Path = V;\nEnqueue(W, Q);\n} // end-if Dist == Infinity\n} // end-while\nDisposeQueue(Q); // free memory\n}\n</code></pre></p> <p>\u6f14\u793a\u52a8\u753b\u89c1PPT</p>"},{"location":"notebooks/fds/9/#dijkstras-algorithmfor-weighted-shortest-paths","title":"Dijkstra's Algorithm(for weighted shortest paths)","text":"<p>\u4ee4\\(S =\\) {\\(s\\)\u548c\u5df2\u627e\u5230\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\\(v_i\\)\u7684\u96c6\u5408} \u5bf9\u4e8e\\(\\forall u \\notin S\\)\uff0c\u5b9a\u4e49<code>distance[u]</code> = \u8def\u5f84\\(\\{s \\rightarrow (v_i \\in S) \\rightarrow u\\}\\)\u7684\u6700\u5c0f\u957f\u5ea6</p> <ul> <li>Dijkstra\u7b97\u6cd5\u6309\u9636\u6bb5\u6267\u884c\uff0c\u5728\u6bcf\u4e2a\u9636\u6bb5\u4e2d\uff0c\u6311\u9009\u4e00\u4e2a\u9876\u70b9\\(w\\)\uff0c\u4fdd\u8bc1\u5b83\u662f\u6240\u6709\u672a\u88ab\u6807\u8bb0\u7684\u9876\u70b9\u4e2d\u8def\u5f84\u957f\u5ea6\\(d_w\\)\u6700\u77ed\u7684\u90a3\u4e2a\u9876\u70b9\uff08\u5982\u679c\u6709\u591a\u4e2a\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u5219\u4efb\u610f\u6311\u9009\u9876\u70b9\uff09</li> <li>\u5df2\u77e5\u4e0a\u4e00\u4e2a\u88ab\u6311\u9009\u7684\u9876\u70b9\\(v\\)\uff0c\u5219\\(d_w = \\min(d_w, d_v + c_{v, w})\\)\uff0c\u6b64\u65f6\\(w \\in S\\)\uff0c\u5c06\u5176\u6807\u8bb0</li> <li>\u7136\u540e\u5bf9\u4e8e\u5269\u4f59\u672a\u88ab\u6807\u8bb0\u7684\u9876\u70b9\uff0c\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u76f4\u81f3\u6240\u6709\u9876\u70b9\u5747\u88ab\u6807\u8bb0</li> </ul> <p>\u4e00\u4e9b\u57fa\u672c\u4ee3\u7801\uff1a <pre><code>// Declarations for Dijkstra's algorithm\ntypedef int Vertex\nstruct TableEntry\n{\nList Header; // Adjacency list\nint Known;\nDistType Dist;\nVertex Path;\n};\n// Vertices are numbered from 0\n#define NotAVerTex (-1)\ntypedef struct TableEntry Table[NumVertex];\n// Initialization\nvoid InitTable(Vertex Start, Graph G, Table T)\n{\nint i;\nReadGraph(G, T);\nfor (i = 0; i &lt; NumVertex; i++)\n{\nT[i].Known = False;\nT[i].Dist = Infinity;\nT[i].Path = NotAVerTex;\n}\nT[Start].dist = 0;\n}\n// Print shortest path to V after Dijkstra has run\n// Assume that the path exists\nvoid PrintPath(Vertex V, Table T)\n{\nif(T[V].Path != NotAVertex)\n{\nPrintPath(T[V].Path, T);\nprintf(\" to\");\n}\nprintf(\"%v\", V) //%v is pseudocode\n}\n</code></pre></p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>void Dijkstra(Table T)\n{\nVertex V, W;\nfor(;;)  // O(|V|)\n{\nV = smallest unknown distance vertex;\nif (V == NotAVertex)\nbreak;\nT[V].Known = true;\nfor (each W adjacent to V)\nif (!T[W].Known)\nif(T[V].Dist + Cvw &lt; T[W].Dist) // \u8fd9\u6b65\u64cd\u4f5c\u79f0\u4e3a\u201c\u677e\u5f1b\u201d\n{\nDecrease(T[W].Dist to T[V].Dist + Cvw); T[W].Path = V;\n} // end-if update W\n} // end-for(;;)\n} // now work for edge with negative cost\n</code></pre></p> <p>\u793a\u610f\u56fe(\u539f\u56fe\u89c1\u6700\u77ed\u8def\u7b97\u6cd5\u8fd9\u4e00\u8282\u7b2c\u4e00\u5f20\u56fe\u7247\u7684\u5de6\u56fe)\uff1a </p> <p>\u6f14\u793a\u52a8\u753b\u89c1PPT\uff0c\u770b\u8d77\u6765\u66f4\u76f4\u89c2</p> <p>Dijkstra\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u53d6\u51b3\u4e8e\u6211\u4eec\u5982\u4f55\u64cd\u4f5c\u5b58\u653e\u56fe\u7684\u8868 \u5b9e\u73b01\uff1a + \u4ec5\u4ec5\u7b80\u5355\u626b\u63cf\u4e00\u904d\u6574\u5f20\u8868\u6765\u627e\u5230\\(d_v\\)\u6700\u5c0f\u7684\u9876\u70b9\\(v \\rightarrow O(|V|)\\)\uff1b\u800c\u4e14\u5916\u5c42\u5faa\u73af\u904d\u5386\u6240\u6709\u9876\u70b9\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(|V|^2)\\) + \u6bcf\u6761\u8fb9\u6700\u591a\u4f1a\u66f4\u65b0\u4e00\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(|E|)\\)\uff0c\u800c\u4e14\u4e0e\u9876\u70b9\u7684\u904d\u5386\u662f\u72ec\u7acb\u7684 + \u56e0\u6b64\\(T = O(|V|^2 + |E|)\\)\uff0c\u9002\u7528\u4e8e\u7a20\u5bc6\u56fe\uff08\u6b64\u65f6\u590d\u6742\u5ea6\u76f8\u5f53\u4e8e\u7ebf\u6027\u590d\u6742\u5ea6\uff09</p> <p>\u5b9e\u73b02\uff1a + \u5c06\u8ddd\u79bb\u4fdd\u5b58\u5728\u5806\u91cc\uff0c\u8c03\u7528<code>DeleteMin</code>\u6765\u627e\u5230\u672a\u6807\u8bb0\u7684\u6700\u5c0f\u5b9a\u70b9\uff0c\u5e76\u4e14\u4e4b\u540e\u4e0d\u53bb\u7ba1\u5b83\u3002     \u90a3\u4e48\u5982\u4f55\u5b9e\u73b0\u7b97\u6cd5\u4e2d\u7684<code>Decrease(T[W].Dist to T[V].Dist + Cvw);</code>\u5462\uff1f     + \u6cd51\uff1a<code>DecreaseKey()</code> \\(\\rightarrow O(\\log |V|)\\)\uff0c\u56e0\u6b64\\(T = O(|V|\\log |V| + |E| \\log |V|) = O(|E|\\log |V|)\\)\uff0c\u9002\u7528\u4e8e\u7a00\u758f\u56fe     &gt;\u4f46\u662f\uff0c\u56e0\u4e3a\u5806\u4e0d\u80fd\u6709\u6548\u652f\u6301<code>Find</code>\u64cd\u4f5c\uff0c\u5f53\\(d_i\\)\u7684\u503c\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u5b83\u7684\u4f4d\u7f6e\u9700\u8981\u7ef4\u62a4\u548c\u66f4\u65b0\uff0c\u7528\u4e8c\u53c9\u5806\u5b9e\u73b0\u8d77\u6765\u6709\u4e9b\u9ebb\u70e6\u3002\u5982\u679c\u7528\u5230\u914d\u5bf9\u5806(pairing heap)(\u7b2c12\u7ae0\u4f1a\u8bb2\u5230)\uff0c\u60c5\u51b5\u5c31\u4f1a\u6539\u5584</p> <pre><code>+ \u6cd52\uff1a\u5c06\u66f4\u65b0$d_w$\u63d2\u5165\u5806\u4e2d\u3002\u90a3\u4e48\u5806\u4e2d\u5c31\u4f1a\u51fa\u73b0\u591a\u4e2a\u540c\u4e00\u9876\u70b9\u7684\u8868\u793a\u3002\u5f53`DeleteMin`\u5c06\u6700\u5c0f\u9876\u70b9\u4ece\u5806\u4e2d\u5220\u9664\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u786e\u4fdd\u5b83\u662f\u3002\u56e0\u6b64\u672a\u6807\u8bb0\u7684\u3002\u56e0\u6b64\u5728`V = smallest unknown distance vertex;`\u8fd9\u4e00\u53e5\u4e2d\uff0c\u8981\u5faa\u73af\u4f7f\u7528`DeleteMin`\uff0c\u76f4\u5230\u672a\u6807\u8bb0\u7684\u70b9\u51fa\u73b0(\u6807\u8bb0\u8fc7\u7684\u70b9\u5c31\u6254\u6389\u4e0d\u7528)\u3002\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u6269\u5927\u5806\u7684\u89c4\u6a21($O(|E|)$)\uff0c\u4f46\u662f\u56e0\u4e3a$|E| \\le |V|^2$\u3002\u6240\u4ee5$\\log |E| \\le 2\\log |V|$\uff0c\u56e0\u6b64$T = O(|E| \\log |V|)$\u3002\u4f46\u5b83\u5360\u7528\u7a7a\u95f4\u5927\u4e8e\u6cd51\u9700\u8981$|E|$\u6b21`DeleteMin`\u64cd\u4f5c\uff0c\u56e0\u6b64\u5728\u5b9e\u9645\u8fd0\u884c\u4e2d\u53ef\u80fd\u4f1a\u53d8\u6162\u3002\n\n&gt;\u5176\u4ed6\u6539\u8fdb\u65b9\u6cd5\uff1a\u6590\u6ce2\u90a3\u5951\u5806(Fibonacci heap)(\u7b2c11\u7ae0)\n</code></pre>"},{"location":"notebooks/fds/9/#graphs-with-negative-edge-costs","title":"Graphs with Negative Edge Costs","text":"<p>\u5982\u679c\u51fa\u73b0\u8d1f\u7684\u8fb9\u6210\u672c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u80fd\u5728\u4f7f\u7528<code>Known</code>\u5b57\u6bb5\u6807\u8bb0\u662f\u5426\u5df2\u7ecf\u5904\u7406\u8fc7\u67d0\u4e2a\u9876\u70b9\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u5728\u7b2c\u4e00\u6b21\u5904\u7406\u8be5\u9876\u70b9\u4e4b\u540e\uff0c\u53c8\u53d1\u73b0\u66f4\u5c0f\u7684\u8def\u5f84\u957f\u5ea6(\u56e0\u4e3a\u8d1f\u7684\u8fb9)</p> <p>\u4e00\u79cd\u5c1d\u8bd5\u662f\u7ed9\u6240\u6709\u8fb9\u52a0\u4e0a\u4e00\u4e2a\u76f8\u540c\u7684\u5e38\u6570\uff0c\u4f7f\u5f97\u6240\u6709\u8fb9\u7684\u6210\u672c\u4e3a\u6b63\u6570 \\(\\rightarrow\\) \u274c \u5206\u6790\uff1a\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u539f\u672c\u5305\u542b\u8fb9\u6570\u8f83\u591a\u7684\u8def\u5f84\uff0c\u5b83\u7684\u6210\u672c\u589e\u957f\u5c31\u660e\u663e\u591a\u4e8e\u8fb9\u6570\u8f83\u5c11\u7684\u8def\u5f84\uff0c\u8fd9\u5c31\u6709\u53ef\u80fd\u6539\u53d8\u6700\u77ed\u8def\u5f84\u7684\u53d6\u6cd5\u3002</p> <p>\u6211\u4eec\u91c7\u53d6\u5c06\u4e0a\u9762\u4ecb\u7ecd\u8fc7\u7684\u4e24\u79cd\u7b97\u6cd5\u76f8\u7ed3\u5408\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff1a <pre><code>void WeightedNegative(Table T)\n{\nQueue Q;\nVertex V, W;\nQ = CreateQueue(NumVertex);\nMakeEmpty(Q);\nEnqueue(S, Q); // Enqueue the source vertex\nwhile (!IsEmpty(Q)) // each vertex can dequeue at most |V| times\n{\nV = Dequeue(Q);\nfor (each W adjacent to V)\nif (T[V].Dist + Cvw &lt; T[W].Dist) // no longer once per edge\n{\nT[W].Dist = T[V].Dist + Cvw;\nT[W].Path = V;\nif (W is not already in Q)\nEnqueue(W, Q);\n} // end-if update\n} // end-while\nDisposeQueue(Q); // free memory\n} // negative-cost cycle will cause indefinite loop\n</code></pre></p> <p>\u6ce8\uff1a + \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(|E| \\cdot |V|)\\) + \u5982\u679c\u51fa\u73b0\u8d1f\u503c\u73af\uff0c\u8be5\u7b97\u6cd5\u5c06\u4f1a\u9677\u5165\u65e0\u9650\u5faa\u73af\u3002\u56e0\u6b64\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u9876\u70b9\u7684\u51fa\u961f\u6b21\u6570\uff0c\u53d1\u73b0\u6709\u9876\u70b9\u51fa\u961f\u6b21\u6570\u591a\u4e8e\\(|V|\\)\u6b21\u65f6\uff0c\u5c31\u7ec8\u6b62\u7a0b\u5e8f\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u8fd9\u4e00\u95ee\u9898</p>"},{"location":"notebooks/fds/9/#acyclic-graphs","title":"Acyclic Graphs","text":"<p>\u5982\u679c\u56fe\u662f\u65e0\u73af(acyclic)\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u62d3\u6251\u5e8f\u9009\u62e9\u9876\u70b9\uff0c\u56e0\u4e3a\u5f53\u9009\u62e9\u67d0\u4e2a\u9876\u70b9\u540e\uff0c\u5b83\u7684\u8ddd\u79bb\u4e0d\u53ef\u80fd\u56e0\u4e3a\u5b83\u524d\u9762\u9876\u70b9\u7684\u5165\u8fb9\u800c\u51cf\u5c11\uff0c\u8fd9\u6837\u53ea\u9700\u6267\u884c\u4e00\u8d9f\u7b97\u6cd5\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\\(T = O(|E| + |V|)\\)\uff0c\u4e0d\u9700\u8981\u4f18\u5148\u961f\u5217</p> <p>\u5e94\u7528\uff1a 1. \u4e0b\u5761\u6ed1\u96ea 2. \uff08\u4e0d\u53ef\u9006\uff09\u7684\u5316\u5b66\u53cd\u5e94</p> <ol> <li>\ud83c\udf30\u5efa\u7b51\u5de5\u7a0b</li> </ol> <p>\ud83c\udfaf + \u6700\u65e9\u7684\u5b8c\u6210\u65f6\u95f4\uff1f + \u54ea\u4e2a\u9879\u76ee\u53ef\u4ee5\u5728\u4e0d\u5f71\u54cd\u6700\u65e9\u5b8c\u6210\u65f6\u95f4\u7684\u60c5\u51b5\u4e0b\u6709\u5ef6\u8fdf\uff0c\u80fd\u5ef6\u8fdf\u591a\u4e45\uff1f</p> <p>\u5173\u952e\u8def\u5f84\u5206\u6790(critical path analysis)\uff1a + AOV\u7f51\uff1a\u6bcf\u4e2a\u9876\u70b9\u8868\u793a\u4e00\u4e2a\u6d3b\u52a8\uff0c\u4e14\u5305\u62ec\u9700\u8981\u5b8c\u6210\u8be5\u6d3b\u52a8\u7684\u65f6\u95f4\u3002\u8fb9(v, w)\u8868\u793aw\u5b8c\u6210\u4e4b\u524d\uff0cv\u5fc5\u987b\u5b8c\u6210      + AOE\u7f51(activity on edges networks)      \u5982\u4f55\u8868\u793a\uff1f </p> <p>\u6ce8\uff1a\u5fc5\u8981\u65f6\u9700\u8981\u6dfb\u52a0dummy edges\u548cdummy nodes\uff0c\u907f\u514d\u9519\u8bef\u6216\u7f3a\u5c11\u7684\u4f9d\u8d56\u5173\u7cfb\u4ea7\u751f</p> <p> + \\(EC[j]\\)\uff1a\u8282\u70b9\\(v_j\\)\u6700\u65e9\u7684\u5b8c\u6210\u65f6\u95f4 + \\(LC[j]\\)\uff1a\u8282\u70b9\\(v_j\\)\u6700\u665a\u7684\u5b8c\u6210\u65f6\u95f4</p> <p>\ud83c\udf30 </p> <p>\u6ce8\uff1a\u84dd\u5b57\u8868\u793aEC\uff0c\u7ea2\u5b57\u8868\u793aLC\uff0c\u7eff\u5b57\u8868\u793a\u7a7a\u95f2\u65f6\u95f4(\u540e\u9762\u4f1a\u8bb2\u5230)</p> <ul> <li> <p>\u8ba1\u7b97EC\uff1a\u627e\u5230\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u5230\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u4e4b\u95f4\u6700\u957f\u7684\u8def     &gt;\u6ce8\uff1a \u56fe\u5982\u679c\u662f\u6709\u73af\u7684\uff0c\u56e0\u4e3a\u6b63\u6210\u672c\u73af(positive-cost cycles) \u7684\u5b58\u5728\uff0c\u8fd9\u79cd\u7b97\u6cd5\u65e0\u6cd5\u5b9e\u73b0\u3002\u7136\u800c\u8fd9\u91cc\u5df2\u7ecf\u89c4\u5b9a\u662f\u65e0\u73af\u56fe\uff0c\u6240\u4ee5\u65e0\u9700\u62c5\u5fc3</p> <p>\u4ece\u8d77\u70b9\\(v_0\\)\u5f00\u59cb\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\\(a_i = &lt;v, w&gt;\\)\uff0c\u6211\u4eec\u6709 $$ EC[0] = 0 \\quad EC[w] = \\max\\limits_{(v,w) \\in E} {EC[v] + C_{v, w}} $$</p> <p>\u6ce8\uff1a\u6309\u62d3\u6251\u5e8f\u8ba1\u7b97 + \u8ba1\u7b97LC\uff1a\u4ece\u7ec8\u70b9\\(v_8\\)\u5f00\u59cb\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\\(a_i = &lt;v, w&gt;\\)\uff0c\u6211\u4eec\u6709 $$ LC[8] = EC[8] \\quad LC[v] = \\min\\limits_{(v,w) \\in E} {LC[v] - C_{v, w}} $$ \u6ce8\uff1a\u6309\u9006\u5411\u62d3\u6251\u5e8f\u8ba1\u7b97 + \\(&lt;v, w&gt;\\)\u7684\u7a7a\u95f2\u65f6\u95f4(slack time) = \\(LC[w] - EC[v] - C_{v, w}\\) + \u5173\u952e\u6d3b\u52a8(critical activity)\uff1a\u7a7a\u95f2\u65f6\u95f4\u4e3a0\u7684\u6d3b\u52a8 + \u5173\u952e\u8def\u5f84(critical path)\uff1a\u6240\u6709\u8fb9\u7684\u7a7a\u95f2\u65f6\u95f4\u5747\u4e3a0\u7684\u8def\u5f84</p> </li> </ul>"},{"location":"notebooks/fds/9/#all-pairs-shortest-path-problem","title":"All-pairs Shortest Path Problem","text":"<p>\u5bf9\u56fe\u4e2d\u4efb\u610f\u4e00\u5bf9\u9876\u70b9\\(v_i, v_j(i \\ne j)\\)\uff0c\u8981\u6c42\u5b83\u4eec\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6709\u4ee5\u4e0b\u65b9\u6cd5\uff1a + \u4f7f\u7528\\(|V|\\)\u6b21\u5355\u6e90\u7b97\u6cd5(\u6bd4\u5982Dijkstra)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\\(T = O(|V|^3)\\)\uff0c\u5728\u7a00\u758f\u56fe\u4e2d\u8fd0\u884c\u8f83\u5feb + \u7528Chap 10\uff08\u672c\u5b66\u671f\u4e0d\u8bb2\uff09\u7ed9\u51fa\u7684\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\\(T = O(|V|^3)\\)\uff0c\u5728\u7a20\u5bc6\u56fe\u4e2d\u8fd0\u884c\u8f83\u5feb</p>"},{"location":"notebooks/fds/9/#network-flow-problems","title":"Network Flow Problems","text":"<p>\ud83c\udf30\uff1a\u8003\u8651\u4e0b\u9762\u7684\u7ba1\u9053\u7f51\u7edc  + \u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u56fe\\(G(V, E)\\)\uff0c\u6bcf\u6761\u8fb9\u7684\u5bb9\u91cf(capacity) \u4e3a\\(c_{v, w}\\)\uff0c\u7ecf\u8fc7\u8be5\u8fb9\u7684\u6d41\u91cf(flow) \u4e0d\u5f97\u8d85\u8fc7\u5b83\u7684\u5bb9\u91cf + \u6211\u4eec\u79f0\u8d77\u70b9s\u4e3a\u6e90\u70b9(source)\uff0c\u7ec8\u70b9t\u4e3a\u6c47\u70b9(sink) + \u5bf9\u4e8e\u6240\u6709\u9876\u70b9\\(v \\notin \\{s, t\\}\\)\uff0c\u603b\u6d41\u5165 = \u603b\u8f93\u51fa\uff0c\u5373\\(\\text{Total coming in}(v) \\equiv \\text{Total going out}(v)\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u9876\u70b9 \u4e0d\u5177\u5907\u5b58\u50a8\u7684\u80fd\u529b</p> <p>\ud83c\udfaf\uff1a\u786e\u5b9a\u4eces\u5230t\u7684\u6700\u5927\u6d41(maximum-flow)</p>"},{"location":"notebooks/fds/9/#simple-algorithm","title":"Simple Algorithm","text":"<p>\u6ce8\uff1a\u4f7f\u7528\u8fd9\u4e2a\u7b97\u6cd5\u65f6\uff0c\u6211\u4eec\u9700\u89813\u5f20\u56fe\uff1a + \u539f\u56fe\\(G\\) + \u6d41\u91cf(flow)\u56fe\\(G_f\\)\uff1a\u8868\u793a\u7b97\u6cd5\u8fd0\u884c\u7684\u6bcf\u4e2a\u9636\u6bb5\u4e2d\u5df2\u7ecf\u5f97\u5230\u7684\u6d41\u91cf\uff0c\u521d\u59cb\u60c5\u51b5\u4e0b\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u5747\u4e3a0 + \u6b8b\u91cf(residual)\u56fe\\(G_r\\)\uff1a\u8868\u793a\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9\uff0c\u8fd8\u5269\u4e0b\u591a\u5c11\u6d41\u91cf\u53ef\u4ee5\u88ab\u6dfb\u52a0</p> <p>\u6b65\u9aa4\uff1a 1.  \u5728\u6b8b\u91cf\u56fe(residual graph)\\(G_r\\)\u4e2d\u627e\u4efb\u610f\u4e00\u6761\\(s \\rightarrow t\\)\u7684\u8def\u5f84(\u79f0\u4e3a\u589e\u5e7f\u8def\u5f84(augmenting path)) 2. \u5c06\u8fd9\u6761\u8def\u4e0a\u6700\u5c0f\u7684\u8fb9\u4f5c\u4e3a\u6d41\u91cf\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u52a0\u5165\u6d41\u91cf\u56fe(flow graph)\\(G_f\\) 3. \u66f4\u65b0\\(G_r\\)\uff0c\u5e76\u79fb\u9664\u6d41\u91cf\u4e3a0\u7684\u8fb9 4. \u5982\u679c\\(G_r\\)\u4e2d\u8fd8\u5b58\u5728\\(s \\rightarrow t\\)\u7684\u8def\u5f84\uff0c\u56de\u5230\u6b65\u9aa41\uff0c\u5426\u5219\u7ec8\u6b62\u7a0b\u5e8f </p> <p>\u6ce8\uff1a\u8fd9\u79cd\u7b97\u6cd5\u6709\u4e00\u70b9\u95ee\u9898\u2014\u2014\u5982\u679c\u6211\u4eec\u91c7\u7528\u8d2a\u5fc3\u7684\u7b56\u7565\uff0c\u5bf9\u4e8e\u4e0a\u56fe\uff0c\u6211\u4eec\u4f1a\u5148\u9009\u62e9\\(s \\rightarrow a \\rightarrow d \\rightarrow t\\)\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u6d41\u91cf\u4e3a3\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u7136\u800c\uff0c\u8fd9\u6837\u505a\u7684\u8bdd\u6211\u4eec\u5c31\u65e0\u6cd5\u518d\u627e\u5230\u7b2c2\u6761\u8def\u5f84\uff0c\u56e0\u6b64\u603b\u6d41\u91cf\u4e3a3\uff0c\u4e0d\u6ee1\u8db3\u8981\u6c42\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u6539\u8fdb\u4e0a\u8ff0\u7b97\u6cd5\u3002</p> <p></p>"},{"location":"notebooks/fds/9/#solution","title":"Solution","text":"<p>\u6539\u8fdb\uff1a\u4f7f\u7b97\u6cd5\u53ef\u4ee5\u64a4\u9500(undo) \u51b3\u7b56</p> <p>\ud83d\udd11 \u5bf9\u4e8e\u6d41\u91cf\u56fe\\(G_f\\)\u4e2d\u7684\u6bcf\u6761\u8fb9(v, w)\uff0c\u5b83\u7684\u6d41\u91cf\u4e3a\\(f_{v, w}\\)\uff0c\u5728\u6b8b\u91cf\u56fe\u4e2d\u6dfb\u52a0\u4e00\u6761\u53cd\u5411\u7684\u8fb9(w, v)\uff0c\u5b83\u7684\u6d41\u91cf\u4e5f\u4e3a\\(f_{v, w}\\) </p> <p>\u6ce8\uff1a\u5f3a\u70c8\u5efa\u8bae\u770bPPT\uff0c\u8fd9\u91cc\u6ca1\u6709\u52a8\u753b\u5bb9\u6613\u4ea7\u751f\u8bef\u89e3</p> <p>\u6ce8\uff1a\u5982\u679c\u8fb9\u7684\u5bb9\u91cf\u662f\u6709\u7406\u6570\uff0c\u90a3\u4e48\u8be5\u7b97\u6cd5\u5728\u7ec8\u6b62\u65f6\u603b\u80fd\u5f97\u5230\u4e00\u4e2a\u6700\u5927\u6d41\uff08\u56fe\u6709\u73af\u7684\u8bdd\u4e5f\u53ef\u4ee5\uff09</p>"},{"location":"notebooks/fds/9/#analysis","title":"Analysis","text":"<p>\u524d\u63d0\uff1a\u6240\u6709\u8fb9\u7684\u5bb9\u91cf\u4e3a\u6574\u6570</p> <p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u65e0\u6743\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\u6765\u627e\u5230\u589e\u5e7f\u8def\u5f84</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\\(T = O(f \\cdot |E|)\\)\uff0c\\(f\\)\u8868\u793a\u6700\u5927\u6d41\u91cf</p> <p>\u2753\uff1a\u5bf9\u4e8e\u4ee5\u4e0b\u7279\u6b8a\u60c5\u51b5\uff1a  \u5982\u679c\u6211\u4eec\u968f\u673a\u6311\u9009\u589e\u5e7f\u8def\u5f84\uff0c\u6311\u5230\u4e00\u6761\u5305\u62ec\\(a \\rightarrow b\\)\u7684\u8def\u5f84\uff0c\u5c31\u4f1a\u4ea7\u751f\u95ee\u9898\uff1a</p> <p>Random augmentations could continually augment along a path that includes the edge connected by a and b. If this were to occur repeatedly, 2,000,000 augmentations would be required, when we could get by with only 2.</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a 1. \u5728\u9009\u62e9\u589e\u5e7f\u8def\u5f84\u65f6\uff0c\u603b\u662f\u6311\u9009 \u5bf9\u6d41\u91cf\u63d0\u5347\u6700\u5927 \u7684\u8def\u5f84     \u5982\u4f55\u5b9e\u73b0\uff1a\u7a0d\u5fae\u6539\u53d8\u4e00\u4e0bDijkstra\u7b97\u6cd5</p> <pre><code>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n$$\n\\begin{align}\nT = &amp; T_{augmentation} \\cdot T_{find\\ a\\ path} \\\\\n= &amp; O(|E| \\log cap_{max}) \\cdot O(|E|\\log |V|) \\\\ \n= &amp; O(|E|^2 \\log |V|) (\\text{if } cap_{max} \\text{ is a small integer})\n\\end{align}\n$$\n</code></pre> <ol> <li>\u5728\u9009\u62e9\u589e\u5e7f\u8def\u5f84\u65f6\uff0c\u6311\u9009 \u8fb9\u6700\u5c11 \u7684\u589e\u5e7f\u8def\u5f84     \u65f6\u95f4\u590d\u6742\u5ea6\uff1a     $$     \\begin{align}     T = &amp; T_{augmentation} \\cdot T_{find a path} \\      = &amp; O(|E|) \\cdot O(|E| \\cdot |V|)\\quad (\\text{unweighted shortest path algorithm})\\     = &amp; O(|E|^2 |V|)      \\end{align}     $$</li> </ol>"},{"location":"notebooks/fds/9/#supplements","title":"Supplements","text":"<ul> <li>\u66f4\u4f18\u7684\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u5c06\u81f3\\(O(|E||V|\\log(|V|^2/|E|))\\)\u548c\\(O(|E||V| + |V|^{2 + \\epsilon})\\)</li> <li>\u5bf9\u4e8e\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u53ef\u4ee5\u964d\u4f4e\uff1a\u5982\u679c\u9664\u4e86\u6e90\u70b9\u548c\u6c47\u70b9\u5916\u7684\u6240\u6709\u9876\u70b9\u7684\u5165\u8fb9\u5bb9\u91cf\u4e3a1\uff0c\u6216\u8005\u51fa\u8fb9\u5bb9\u91cf\u4e3a1\uff0c\u90a3\u4e48\u6700\u4f18\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(|E||V|^{\\frac{1}{2}})\\)</li> <li>\u66f4\u590d\u6742\u7684\u95ee\u9898\uff1a\u6700\u5c0f\u8d39\u7528\u6d41\u95ee\u9898(min-cost flow problem)\u2014\u2014\u6bcf\u6761\u8fb9\u4e0d\u4ec5\u6709\u5bb9\u91cf\uff0c\u8fd8\u8981\u8003\u8651\u5355\u4f4d\u6d41\u91cf\u7684\u8d39\u7528\u3002\ud83c\udfaf\uff1a\u8981\u627e\u5230\u6240\u6709\u6700\u5927\u6d41\u91cf\u4e2d\u7684\u6700\u5c0f\u6210\u672c</li> </ul>"},{"location":"notebooks/fds/9/#minimum-spanning-tree","title":"Minimum Spanning Tree","text":"<p>\u5b9a\u4e49\uff1a\u56fe\\(G\\)\u7684\u751f\u6210\u6811(spanning tree) \u662f\u4e00\u68f5\u5305\u542b\u6240\u6709\u9876\u70b9\\(V(G)\\)\uff0c\u4ee5\u53ca\u6240\u6709\u8fb9\\(E(G)\\)\u7684\u5b50\u96c6\u7684\u6811</p> <p>\ud83c\udf30\uff1a \u5982\u4f55\u7406\u89e3\u6700\u5c0f\u751f\u6210\u6811(minimum spanning tree)\uff1f + \u6700\u5c0f\u751f\u6210\u6811\u662f\u4e00\u68f5\u6811\uff0c\u56e0\u4e3a\u5b83\u662f\u65e0\u73af\u7684\uff0c\u4e14\u8fb9\u7684\u6570\u91cf\u4e3a\\(|V| - 1\\) + \u5b83\u662f\u6700\u5c0f\u7684\uff0c\u56e0\u4e3a\u8fb9\u7684\u6210\u672c\u5df2\u7ecf\u6700\u5c0f\u5316\u4e86 + \u5b83\u662f\u751f\u6210\u7684\uff0c\u56e0\u4e3a\u5b83\u8986\u76d6\u6240\u6709\u7684\u9876\u70b9 + \u6700\u5c0f\u751f\u6210\u6811\u5b58\u5728\u7684\u5145\u8981\u6761\u4ef6\u662f\u56fe\\(G\\)\u662f\u8fde\u901a\u7684 + \u5982\u679c\u5728\u751f\u6210\u6811\u4e2d\u6dfb\u52a0\u4e00\u6761\u8fb9\uff0c\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af + \u6700\u5c0f\u751f\u6210\u6811\u662f\u5e76\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u4f46\u6700\u5c0f\u751f\u6210\u6811\u7684==\u603b\u6743\u91cd\u662f\u552f\u4e00\u7684==</p> <p>\u5982\u4f55\u6c42\u89e3\u2014\u2014\u8d2a\u5fc3\u7b97\u6cd5(greedy algorithm)\uff0c\u6bcf\u4e00\u6b65\u90fd\u91c7\u53d6\u6700\u4f18\u7b56\u7565\uff0c\u4f46\u6709\u4ee5\u4e0b\u9650\u5236\uff1a + \u5fc5\u987b\u4f7f\u7528\u56fe\u91cc\u9762\u7684\u8fb9 + \u5fc5\u987b\u7528\u5230\\(|V| - 1\\)\u6761\u8fb9 + \u4e0d\u4f7f\u7528\u53ef\u80fd\u5bfc\u81f4\u73af\u51fa\u73b0\u7684\u8fb9</p>"},{"location":"notebooks/fds/9/#prims-algorithm","title":"Prim's Algorithm","text":"<p>\u65b9\u6cd5\uff1a\u751f\u6210\u4e00\u68f5\u6811\uff0c\u4e0eDijkstra\u7b97\u6cd5\u975e\u5e38\u76f8\u4f3c + \u521d\u59cb\u60c5\u51b5\u4e0b\uff0c\u5148\u5c06\u4e00\u4e2a\u9876\u70b9\u4f5c\u4e3a\u6811\u7684\u6839\u653e\u5165\u6811\u5185 + \u5728\u6bcf\u4e2a\u9636\u6bb5\uff0c\u901a\u8fc7\u6dfb\u52a0\u8fb9(u, v)\uff0c\u6ee1\u8db3(u, v)\u7684\u6210\u672c\u662f\u6240\u6709\u5728\u6811\u91cc\u7684u\u548c\u5728\u6811\u5916\u7684v\u4e4b\u95f4\u7684\u8fb9\u4e2d\u6700\u5c0f\u7684\uff0c\u5c06\u65b0\u7684\u9876\u70b9\u6dfb\u52a0\u81f3\u6811\u91cc</p> <p>\u56fe\u793a\uff1a </p> <p>\u6ce8\uff1a\u6f14\u793a\u52a8\u753b\u89c1PPT</p> <p>\u4e0eDijkstra\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a + \u8981\u4fdd\u5b58\u4e24\u7c7b\u503c\\(d_v\\)\u548c\\(p_v\\)\uff1a     + \\(d_v\\)\uff1a\u8fde\u63a5\\(v\\)\u548c\u5df2\u77e5\u9876\u70b9\u7684\u6700\u77ed\u8def\u7684\u6743\u91cd     + \\(p_v\\)\uff1a\u6700\u540e\u4e00\u4e2a\u5bfc\u81f4\\(d_v\\)\u6539\u53d8\u7684\u9876\u70b9 + \u66f4\u65b0\u89c4\u5219\u66f4\u52a0\u7b80\u5355\uff1a\u5bf9\u4e8e\u5df2\u7ecf\u9009\u5165\u6811\u5185\u7684\u9876\u70b9\\(v\\)\uff0c\u5b83\u7684\u90bb\u63a5\u9876\u70b9\\(w\\)\u6ee1\u8db3\\(d_w = \\min(d_w, c_{w, v})\\)</p> <p>\u6ce8\uff1a\u7531\u4e8e\u8fd9\u662f\u65e0\u5411\u56fe\uff0c\u56e0\u6b64\u9700\u8981\u7528\u5230\u4e24\u5f20\u90bb\u63a5\u8868\u5b58\u50a8\u56fe</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a + \u4e0d\u7528\u5806(\u9002\u7528\u4e8e\u7a20\u5bc6\u56fe)\uff1a\\(O(|V|^2)\\) + \u4e8c\u53c9\u5806(\u9002\u7528\u4e8e\u7a00\u758f\u56fe)\uff1a\\(O(E\\log|V|)\\)</p>"},{"location":"notebooks/fds/9/#kruskals-algorithm","title":"Kruskal's Algorithm","text":"<p>\u65b9\u6cd5\uff1a\u7ef4\u6301\u4e00\u7247\u68ee\u6797(\u4e00\u7ec4\u6811) + \u521d\u59cb\u60c5\u51b5\u4e0b\uff0c\u6709\\(|V|\\)\u68f5\u5355\u4e2a\u8282\u70b9\u6784\u6210\u7684\u6811 + \u6dfb\u52a0\u4e00\u6761\u8fb9\uff0c\u53ef\u4ee5\u5408\u5e76\u4e24\u68f5\u6811\u3002\u5f53\u7b97\u6cd5\u7ed3\u675f\u65f6\uff0c\u5e94\u5f53\u53ea\u5269\u4e0b\u4e00\u68f5\u6811\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f88\u81ea\u7136\u5730\u60f3\u5230\u4f7f\u7528\u5e76\u67e5\u96c6\u7684\u7b97\u6cd5 + \u6311\u9009\u8fb9(\u8fd9\u91cc\u5047\u8bbe\u6311\u9009\u8fb9\\((u, v)\\))\u65f6\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff1a     + \u5982\u679cu, v\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5185\uff0c\u5219\u4e0d\u80fd\u6dfb\u52a0\u8fd9\u6761\u8fb9\uff08\u5426\u5219\u4f1a\u51fa\u73b0\u73af\uff09     + \u5426\u5219\u52a0\u5165\u8fd9\u6761\u8fb9\uff0c\u4f7f\u7528<code>Union</code>\u7b97\u6cd5\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u5e76\u8d77\u6765 + \u7528\u5806\u7ef4\u62a4\u672a\u88ab\u68c0\u9a8c\u8fc7\u7684\u6700\u5c0f\u7684\u8fb9\uff0c\u6bcf\u5f53\u68c0\u9a8c\u4e00\u6761\u8fb9\u65f6\uff0c\u4f7f\u7528<code>DeleteMin</code>\u7b97\u6cd5</p> <p>\u56fe\u793a\uff1a </p> <p>\u4f2a\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>void Kruskal(Graph G)\n{\nT = { };\nwhile (T contains less than [V] - 1 edges &amp;&amp; E is not empty)\n{\nchoose a least cost edge(v, w) from E; // DeleteMin\ndelete(v, w) from E;\nif ((v, w) does not create a cycle in T)\nadd(v, w) to T; // Union/Find\nelse\ndiscard(v, w);\n}\nif (T contains fewer than [V] - 1 edges)\nError(\"No spanning tree\");\n}\n</code></pre></p> <p>\u6b63\u5f0f\u4ee3\u7801\uff1a <pre><code>void Kruskal(Graph G)\n{\nint EdgesAccepted;\nDisjSet S;\nPriorityQueue H;\nVertex U, V;\nSetType Uset, Vset;\nEdge E;\nInitialize(S);\nReadGraphIntoHeapArray(G, H);\nBuildHeap(H);\nEdgeAccepted = 0;\nwhile (EdgesAccepted &lt; NumVertex - 1)\n{\nE = DeleteMin(H);  // E = (U, V)\nUset = Find(U, S);\nVset = Find(V, S);\nif (Uset != Vset)\n{\n// Accept the edge\nEdgesAccepted++;\nSetUnion(S, Uset, Vset);\n}\n}\n}\n</code></pre></p> <p>\u7531\u4e8e\u6bcf\u6761\u8fb9\u8981\u5b583\u4e2a\u5b57\u6bb5\uff0c\u56e0\u6b64\u7528\u6307\u9488\u6570\u7ec4\u5b58\u50a8\u8fb9\u53ef\u80fd\u66f4\u52a0\u9ad8\u6548\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T = O(|E|\\log |E|) = O(|E| \\log |V|) \\quad (|E| = O(|V|^2))\\)</p>"},{"location":"notebooks/fds/9/#applications-of-depth-first-search","title":"Applications of Depth-First Search","text":"<p>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22(depth-first search, DFS) \u662f\u4e00\u79cd\u524d\u5e8f\u904d\u5386\u7684\u6cdb\u5316\u3002 + \u6811\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\\(T = O(|E|)\\ (|E| = \\Theta(|V|))\\) + \u56fe\uff1a\u6ce8\u610f\u8981\u907f\u514d\u73af(cycles)\uff0c\u6240\u4ee5\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\u5c31\u8981\u5bf9\u5176\u6807\u8bb0\uff0c\u7136\u540e\u63a5\u7740\u8bbf\u95ee\u672a\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\u3002 + \u5982\u679c\u65e0\u5411\u56fe\u4e0d\u8fde\u901a\uff0c\u6216\u8005\u6709\u5411\u56fe\u4e0d\u662f\u5f3a\u8fde\u901a\u7684\uff0c\u90a3\u4e48\u7528\u4e00\u6b21DFS\u65e0\u6cd5\u8bbf\u95ee\u6240\u6709\u9876\u70b9\uff0c\u9700\u8981\u5bf9\u672a\u6807\u8bb0\u7684\u9876\u70b9\u518d\u7528\u4e00\u6b21DFS\uff0c\u76f4\u81f3\u6240\u6709\u9876\u70b9\u90fd\u88ab\u6807\u8bb0\u3002\u56e0\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(|E| + |V|)\\)</p> <p>\u6a21\u7248\uff1a <pre><code>void DFS(Vertex V)\n{\nvisited[V] = true; // mark this vertex to void cycles\nfor (each W adjacent to V)\nif (!visited[W])\nDFS(W);\n}\n</code></pre></p>"},{"location":"notebooks/fds/9/#undirected-graphs","title":"Undirected Graphs","text":"<p>\u5f53\u4e14\u4ec5\u5f531\u6b21DFS\u80fd\u591f\u904d\u5386\u6240\u6709\u9876\u70b9\u65f6\uff0c\u65e0\u5411\u56fe\u662f\u8fde\u901a\u7684</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u751f\u6210\u6811(depth-first spanning tree) \u6765\u5f62\u8c61\u5c55\u793aDFS\u7684\u8fc7\u7a0b\u3002\u5f53\u6211\u4eec\u53d1\u73b0\u67d0\u6761\u8fb9(v, w)\u4e2d\u7684w\u5df2\u88ab\u6807\u8bb0\u8fc7\uff0c\u7528\u865a\u7ebf\u753b\u51fa\u8fd9\u6761\u8fb9\uff0c\u79f0\u4f5c\u201c\u56de\u8fb9(back edge)\u201d\uff0c\u8868\u793a\u8fd9\u6761\u8fb9\u4e0d\u5305\u542b\u4e8e\u751f\u6210\u6811\u91cc\uff0c\u5982\u56fe\u6240\u793a\uff1a </p> <p>\u6ce8\uff1a\u5982\u679c\u65e0\u5411\u56fe\u4e0d\u8fde\u901a\uff0c\u5219\u53ef\u4ee5\u751f\u6210\u6df1\u5ea6\u4f18\u5148\u751f\u6210\u68ee\u6797(depth-first spanning forest)</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>void ListComponents(Graph G)\n{\nfor (each V in G)\n{\nif (!visited[V])\nDFS(V);\nprintf(\"\\n\");\n}\n}\n</code></pre></p>"},{"location":"notebooks/fds/9/#biconnectivity","title":"Biconnectivity","text":"<ul> <li>\u5f53<code>G' = DeleteVertex(G, v)</code> \u81f3\u5c11\u67092\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u79f0<code>v</code>\u4e3a\u5173\u8282\u70b9(articulation point) <p>\u4eba\u8bdd\uff1a\u56fe\u4e0d\u662f\u53cc\u8fde\u901a\u7684\uff0c\u4e14\u67d0\u4e2a\u9876\u70b9\u7684\u79fb\u9664\u4f1a\u7834\u574f\u56fe\u7684\u8fde\u901a\u6027\uff0c\u79f0\u8be5\u9876\u70b9\u4e3a\u5173\u8282\u70b9</p> </li> <li>\u5982\u679c<code>G</code>\u662f\u8fde\u901a\u7684\u4e14\u6ca1\u6709\u5173\u8282\u70b9\uff0c\u79f0<code>G</code>\u4e3a\u53cc\u8fde\u901a\u56fe(biconnected graph) <p>\u4eba\u8bdd\uff1a\u4efb\u610f\u9876\u70b9\u7684\u79fb\u9664\u4e0d\u4f1a\u7834\u574f\u5269\u4f59\u7684\u65e0\u5411\u56fe\u7684\u8fde\u901a\u6027</p> </li> <li>\u53cc\u8fde\u901a\u5206\u91cf(biconnected component)\uff1a\u6700\u5927\u7684\u53cc\u8fde\u901a\u5b50\u56fe </li> </ul> <p>\u6ce8\uff1a\u6ca1\u6709\u4e00\u6761\u8fb9\u4f1a\u540c\u65f6\u51fa\u73b0\u5728\u591a\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u3002\u56e0\u6b64E(G)\u88ab\u53cc\u8fde\u901a\u5206\u91cf\u5212\u5206</p> <p>\u95ee\u9898\uff1a\u5bfb\u627e\u65e0\u5411\u8fde\u901a\u56feG\u4e2d\u7684\u6240\u6709\u53cc\u8fde\u901a\u5206\u91cf</p> <p>\u9884\u5907\uff1a + <code>Num(v)</code>\uff1a\u9876\u70b9v\u7684\u524d\u5e8f\u904d\u5386\u7684\u5e8f\u53f7 + <code>Low(v)</code>\uff1a\u6240\u6709\u901a\u8fc7\u6811\u7684\u8fb9\u548c\u56de\u8fb9\u4e0ev\u76f8\u8fde\u901a\u7684\u6700\u5c0f\u9876\u70b9(\\(\\min(Num(w_i))\\))\u3002\u8fd9\u91cc\u8981\u7528\u5230\u540e\u5e8f\u904d\u5386\uff0c\u627e\u5230\u6240\u6709\u4e0ev\u76f8\u90bb\u7684\u9876\u70b9\uff0c\u7136\u540e\u627e\u51fa\u6700\u5c0f\u7684\u90a3\u4e2a</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a + \u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22(depth first search) \u5f97\u5230G\u7684\u751f\u6210\u6811 </p> <p>\u6ce8\uff1a\u56de\u8fb9(back edges) (u, v)\uff1a(u, v) \\(\\notin\\) tree\uff0c\u4e14u(\u6216v)\u662fv(\u6216u)\u7684\u7956\u5148\u3002\u5982\u679cu\u662fv\u7684\u7956\u5148\uff0c\u5219Num(u) &lt; Num(v)</p> <ul> <li>\u627e\u5230G\u5185\u7684\u5173\u8282\u70b9<ul> <li>\u5f53\u4e14\u4ec5\u5f53\u6839\u8282\u70b9\u81f3\u5c11\u67092\u4e2a\u5b69\u5b50\u65f6\uff0c\u6839\u8282\u70b9\u4e3a\u5173\u8282\u70b9</li> <li>\u5f53\u4e14\u4ec5\u5f53\u5176\u4ed6\u7684\u9876\u70b9u\u81f3\u5c11\u67091\u4e2a\u5b69\u5b50\uff0c\u4e14\u4e0d\u80fd\u901a\u8fc7\u5f80\u4e0b\u79fb\u52a8\u81f3\u5c111\u6b65\u6765\u5230\u5b83\u7684\u7956\u5148(\u5373Low(child) \\(\\ge\\) Num(u))\u65f6\uff0cu\u4e3a\u5173\u8282\u70b9</li> </ul> </li> </ul> \\[ Low(u) = \\min\\{Num(u), \\min\\{Low(w)\\ |\\ w \\text{ is a child of }u\\}, \\min\\{Num(w)\\ |\\ (u, w) \\text{ is a back edge}\\}\\} \\] <p>\u5217\u8868\uff1a</p> <p>\u4ee3\u7801\uff1a <pre><code>// Assign Num and compute Parents\nvoid AssignNum(Vertex V)\n{\nVertex W;\nNum[V] = Counter++;\nVisited[V] = ture;\nfor each W adjacent to V\nif (!Visited[W])\n{\nParent[W] = V;\nAssignNum(W);\n}\n}\n// Assign Low; also check for articulation points\nvoid AssignLow(Vertex V)\n{\nVertex W;\nLow[V] = Num[V]; // Rule 1\nfor each W adjacent to V\n{\nif (Num[W] &gt; Num[V])\n{\nAssignLow(W);\nif (Low[W] &gt;= Num[V])\nprintf(\"%v is an articulation point\\n\", v);\nLow[V] = Min(Low[V], Low[W]);  // Rule 3\n}\nelse if (Parent[V] != W)\nLow[V] = Min(Low[V], Num[W]);  // Rule 2\n}\n}\n// Testing for articulation points in one depth-first search\nvoid FindArt(Vertex V)\n{\nVertex W;\nVisited[V] = True\nLow[V] = Num[V] = Counter; // Rule 1\nfor each W adjacent to V\n{\nif (!Visited[W])\n{\nParent[W] = V;\nFindArt(W);\nif (Low[W] &gt;= Num[V])\nprintf(\"%v is an articulation point\\n\", v);\nLow[V] = Min(Low[V], Low[W]);  // Rule 3\n}\nelse if (Parent[V] != W)\nLow[V] = Min(Low[V], Num[W]);  // Rule 2\n}\n}\n</code></pre></p>"},{"location":"notebooks/fds/9/#euler-circuits","title":"Euler Circuits","text":"<ul> <li>\u6b27\u62c9\u8def\u7a0b(Euler tour)\uff1a\u5728\u7b14\u4e0d\u79bb\u7eb8\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6761\u8fb9\u4ec5\u753b\u5230\u4e00\u904d\uff08\u4e00\u7b14\u753b\uff09</li> <li> <p>\u6b27\u62c9\u56de\u8def(Euler circuit)\uff1a\u5728\u7b14\u4e0d\u79bb\u7eb8\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6761\u8fb9\u4ec5\u753b\u5230\u4e00\u904d\uff0c\u4e14\u6700\u540e\u56de\u5230\u8d77\u70b9\u7684\u4f4d\u7f6e </p> </li> <li> <p>\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u8fde\u901a\u7684\uff0c\u4e14\u6bcf\u4e2a\u9876\u70b9\u90fd\u6709==\u5076\u6570\u4e2a\u5ea6==\u65f6\uff0c\u6b27\u62c9\u56de\u8def\u662f\u6709\u53ef\u80fd\u51fa\u73b0\u7684</p> </li> <li>\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u9876\u70b9\u6709\u5947\u6570\u4e2a\u5ea6\u65f6\uff0c\u4e14\u4ece\u5947\u6570\u5ea6\u7684\u9876\u70b9\u51fa\u53d1\u753b\u56fe\uff0c\u5219\u6b27\u62c9\u8def\u7a0b\u662f\u6709\u53ef\u80fd\u7684</li> </ul> <p>\u5229\u7528DFS\u5bfb\u627e\u6b27\u62c9\u56de\u8def\uff1a</p> <p>[!note] + \u7528\u94fe\u8868\u7ef4\u62a4\u8def\u5f84 + \u5bf9\u4e8e\u6bcf\u4e2a\u90bb\u63a5\u8868\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6307\u5411\u6700\u540e\u88ab\u626b\u63cf\u7684\u8fb9 + \u65f6\u95f4\u590d\u6742\u5ea6\\(T = O(|E| + |V|)\\)</p> <p>\u6ce8\uff1a\u54c8\u5bc6\u987f\u73af(Hamilton cycle)\uff1a\u5728\u65e0\u5411\u56fe\u4e2d\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684\uff0c\u8bbf\u95ee\u6240\u6709\u9876\u70b9\u7684\u5708\uff0c\u4ee3\u7801\u89c1\u4e0b\u9762\u7684[[Chap 9 Graph Algorithm#^3b293b|\u9898\u76ee]]\uff08wiki\uff09</p> <pre><code>// \u8fd9\u91cc\u7f3a\u5c11\u4ee3\u7801\u5b9e\u73b0\n</code></pre>"},{"location":"notebooks/fds/9/#directed-graphs","title":"Directed Graphs","text":""},{"location":"notebooks/fds/9/#finding-strong-components","title":"Finding Strong Components","text":""},{"location":"notebooks/fds/9/#problems","title":"Problems","text":"<p>2-1. If graph G is NOT connected and has 35 edges, then it must have at least ___ vertices. A. 7 B. 8 C. 9 D. 10</p> <p>D</p> <p>\\(C(8, 2) = 28, C(9, 2) = 36\\)\uff0c\u56e0\u6b649\u4e2a\u9876\u70b935\u6761\u8fb9\u4e5f\u80fd\u6784\u6210\u8fde\u901a\u56fe\uff0c\u6240\u4ee5\u9700\u898110\u4e2a\u9876\u70b9</p> <p>2-2. A graph with 90 vertices and 20 edges must have at least __ connected component(s). A. 69 B. 70 C. 84 D. 85</p> <p>B</p> <p>20\u6761\u8fb9\u81f3\u591a\u53ef\u4ee5\u5c0621\u4e2a\u9876\u70b9\u8fde\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u3002\u90a3\u4e48\u5269\u4f5969\u4e2a\u9876\u70b9\u5404\u81ea\u5f62\u6210\u8fde\u901a\u5206\u91cf\uff0c\u6240\u4ee5\u6700\u5c0f\u7684\u603b\u7684\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u4e3a1 + 69 = 70</p> <p>2-4. Given an undirected graph G with 16 edges, where 3 vertices are of degree 4, 4 vertices are of degree 3, and all the other vertices are of degrees less than 3. Then G must have at least __ vertices. A. 10 B. 11 C. 13 D. 15</p> <p>B</p> <p>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff0c16\u6761\u8fb9\u5c31\u670932\u4e2a\u5ea6\uff0c\u5df2\u77e53 * 4 + 4 * 3 = 24\u4e2a\u5ea6\uff0c\u56e0\u6b64\u5269\u4e0b12\u4e2a\u5ea6\u3002\u53c8\u56e0\u4e3a\u5176\u4f59\u9876\u70b9\u7684\u5ea6\u5c11\u4e8e3\u4e2a\uff0c\u56e0\u6b64\u5c31\u8ba9\u5b83\u4eec\u7684\u5ea6\u5747\u4e3a2\uff0c\u56e0\u6b64\u5c31\u6709 8 / 2 = 4\u4e2a\u9876\u70b9\u3002\u6240\u4ee5\u81f3\u5c11\u67093 + 4 + 4 = 11\u4e2a\u9876\u70b9</p> <p>Midterm-R2-9. A graph with 100 vertices and 12 edges must have at most ___ connected component(s). A.95 B.88 C.94 D.87</p> <p>A</p> <p>12\u6761\u8fb9\u81f3\u5c11\u4f7f6\u4e2a\u9876\u70b9\u8fde\u901a\uff0c\u56e0\u4e3a\\(\\dfrac{5(5-1)}{2} &lt; 12 \\le \\dfrac{6(6-1)}{2}\\)\u3002\u6240\u4ee5\u81f3\u591a\u670994 + 1 = 95\u4e2a\u8fde\u901a\u5206\u91cf</p> <p>\u6ce8\uff1a\u5c062-2\u548cMidterm-R2-9\u5bf9\u7167\u8d77\u6765\u770b\uff0c\u6ce8\u610f\u9898\u76ee\u95ee\u7684\u662f\u4ec0\u4e48</p> <p>The minimum spanning tree of any weighted graph  A. must be unique B. must not be unique C. exists but may not be unique D. may not exist</p> <p>D</p> <p>\u6700\u5c0f\u751f\u6210\u6811\u5b58\u5728\u7684\u5145\u8981\u6761\u4ef6\u662f\u56fe\u662f \u8fde\u901a\u7684</p>"},{"location":"notebooks/fds/9/#6-1-is-topological-order","title":"6-1 Is Topological Order","text":"<p>Write a program to test if a give sequence\u00a0<code>Seq</code>\u00a0is a topological order of a given graph\u00a0<code>Graph</code>.</p> <p>Format of functions:</p> <pre><code>bool IsTopSeq( LGraph Graph, Vertex Seq[] );\n</code></pre> <p>where\u00a0<code>LGraph</code>\u00a0is defined as the following:</p> <pre><code>typedef struct AdjVNode *PtrToAdjVNode; struct AdjVNode{\nVertex AdjV;\nPtrToAdjVNode Next;\n};\ntypedef struct Vnode{\nPtrToAdjVNode FirstEdge;\n} AdjList[MaxVertexNum];\ntypedef struct GNode *PtrToGNode;\nstruct GNode{  int Nv;\nint Ne;\nAdjList G;\n};\ntypedef PtrToGNode LGraph;\n</code></pre> <p>The function\u00a0<code>IsTopSeq</code>\u00a0must return\u00a0<code>true</code>\u00a0if\u00a0<code>Seq</code>\u00a0does correspond to a topological order; otherwise return\u00a0<code>false</code>.</p> <p>Note:\u00a0Although the vertices are numbered from 1 to MaxVertexNum, they are\u00a0indexed from 0\u00a0in the LGraph structure.</p> <p>Sample program of judge:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\ntypedef enum {false, true} bool;\n#define MaxVertexNum 10  /* maximum number of vertices */\ntypedef int Vertex;      /* vertices are numbered from 1 to MaxVertexNum */\ntypedef struct AdjVNode *PtrToAdjVNode; struct AdjVNode{\nVertex AdjV;\nPtrToAdjVNode Next;\n};\ntypedef struct Vnode{\nPtrToAdjVNode FirstEdge;\n} AdjList[MaxVertexNum];\ntypedef struct GNode *PtrToGNode;\nstruct GNode{  int Nv;\nint Ne;\nAdjList G;\n};\ntypedef PtrToGNode LGraph;\nLGraph ReadG(); /* details omitted */\nbool IsTopSeq( LGraph Graph, Vertex Seq[] );\nint main()\n{\nint i, j, N;\nVertex Seq[MaxVertexNum];\nLGraph G = ReadG();\nscanf(\"%d\", &amp;N);\nfor (i=0; i&lt;N; i++) {\nfor (j=0; j&lt;G-&gt;Nv; j++)\nscanf(\"%d\", &amp;Seq[j]);\nif ( IsTopSeq(G, Seq)==true ) printf(\"yes\\n\");\nelse printf(\"no\\n\");\n}\nreturn 0;\n}\n/* Your function will be put here */\n</code></pre> <p>Sample Input (for the graph shown in the figure):</p> <p></p> <pre><code>6 8\n1 2\n1 3\n5 2\n5 4\n2 3\n2 6\n3 4\n6 4\n5\n1 5 2 3 6 4\n5 1 2 6 3 4\n5 1 2 3 6 4\n5 2 1 6 3 4\n1 2 3 4 5 6\n</code></pre> <p>Sample Output:</p> <pre><code>yes\nyes\nyes\nno\nno\n</code></pre> <p>My code:</p> <pre><code>bool IsTopSeq( LGraph Graph, Vertex Seq[] )\n{\nint indegree[MaxVertexNum];\nint i;\nint flag = 1;\nPtrToAdjVNode cur;\nfor (i = 0; i &lt; Graph-&gt;Nv; i++)\n{\nindegree[i] = 0;\n}\nfor (i = 0; i &lt; Graph-&gt;Nv; i++)\n{\ncur = Graph-&gt;G[i].FirstEdge;\nwhile (cur != NULL)\n{\nindegree[cur-&gt;AdjV]++;\ncur = cur-&gt;Next;\n}\n}\nfor (i = 0; i &lt; Graph-&gt;Nv; i++)\n{\nif (indegree[Seq[i] - 1] != 0)\n{\nflag = 0;\nbreak;\n}\nindegree[Seq[i] - 1] = -1;\ncur = Graph-&gt;G[Seq[i] - 1].FirstEdge;\nwhile (cur != NULL)\n{\nindegree[cur-&gt;AdjV]--;\ncur = cur-&gt;Next;\n}\n}\nif (flag)\nreturn true;\nelse\nreturn false;\n}\n</code></pre>"},{"location":"notebooks/fds/9/#7-1-hamiltonian-cycle","title":"7-1 Hamiltonian Cycle","text":"<p>^3b293b</p> <p>The \"Hamilton cycle problem\" is to find a simple cycle that contains every vertex in a graph. Such a cycle is called a \"Hamiltonian cycle\".</p> <p>In this problem, you are supposed to tell if a given cycle is a Hamiltonian cycle.</p> <p>Input Specification:</p> <p>Each input file contains one test case. For each case, the first line contains 2 positive integers\u00a0N\u00a0(2&lt;N\u2264200), the number of vertices, and\u00a0M, the number of edges in an undirected graph. Then\u00a0M\u00a0lines follow, each describes an edge in the format\u00a0<code>Vertex1 Vertex2</code>, where the vertices are numbered from 1 to\u00a0N. The next line gives a positive integer\u00a0K\u00a0which is the number of queries, followed by\u00a0K\u00a0lines of queries, each in the format:</p> <p>n\u00a0V1\u200b\u00a0V2\u200b\u00a0...\u00a0Vn\u200b</p> <p>where\u00a0n\u00a0is the number of vertices in the list, and\u00a0Vi\u200b's are the vertices on a path.</p> <p>Output Specification:</p> <p>For each query, print in a line\u00a0<code>YES</code>\u00a0if the path does form a Hamiltonian cycle, or\u00a0<code>NO</code>\u00a0if not.</p> <p>Sample Input:</p> <pre><code>6 10\n6 2\n3 4\n1 5\n2 5\n3 1\n4 1\n1 6\n6 3\n1 2\n4 5\n6\n7 5 1 4 3 6 2 5\n6 5 1 4 3 6 2\n9 6 2 1 6 3 4 5 2 6\n4 1 2 5 1\n7 6 1 3 4 5 2 6\n7 6 1 2 5 4 3 1\n</code></pre> <p>Sample Output:</p> <pre><code>YES\nNO\nNO\nNO\nYES\nNO\n</code></pre> <p>My code:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#define SIZE 201\n#define PSIZE 2001\ntypedef struct AdjVNode *PtrToAdjVNode; struct AdjVNode{\nint AdjV;\nPtrToAdjVNode Next;\n};\ntypedef struct Vnode{\nPtrToAdjVNode FirstEdge;\n} AdjList[SIZE];\ntypedef struct GNode *PtrToGNode;\nstruct GNode{  int Nv;\nint Ne;\nAdjList G;\n};\ntypedef PtrToGNode LGraph;\nvoid HCycle(LGraph g, int p[ ]);\nint main()\n{\nint n, m, k, q;\nint i, j;\nint v1, v2;\nint path[PSIZE];\nLGraph Graph;\nPtrToAdjVNode cur1, cur2;\nGraph = (PtrToGNode)malloc(sizeof(struct GNode));\nscanf(\"%d%d\", &amp;n, &amp;m);\nGraph-&gt;Nv = n;\nGraph-&gt;Ne = m;\nfor (i = 0; i &lt; n; i++)\n{\nGraph-&gt;G[i].FirstEdge = NULL;\n}\nfor (i = 0; i &lt; m; i++)\n{\nscanf(\"%d%d\", &amp;v1, &amp;v2);\ncur1 = (PtrToAdjVNode)malloc(sizeof(struct AdjVNode));\ncur1-&gt;AdjV = v2;\ncur1-&gt;Next = Graph-&gt;G[v1 - 1].FirstEdge;\nGraph-&gt;G[v1 - 1].FirstEdge = cur1;\ncur2 = (PtrToAdjVNode)malloc(sizeof(struct AdjVNode));\ncur2-&gt;AdjV = v1;\ncur2-&gt;Next = Graph-&gt;G[v2 - 1].FirstEdge;\nGraph-&gt;G[v2 - 1].FirstEdge = cur2;\n}\nscanf(\"%d\", &amp;k);\nfor (i = 0; i &lt; k; i++)\n{\nscanf(\"%d\", &amp;q);\nfor (j = 0; j &lt; q; j++)\nscanf(\"%d\", &amp;path[j]);\nif (q != Graph-&gt;Nv + 1)\nprintf(\"NO\\n\");\nelse\nHCycle(Graph, path);\n}\nreturn 0;\n}\nvoid HCycle(LGraph g, int p[ ])\n{\nint i;\nint flag[SIZE];\nPtrToAdjVNode cur;\nif (p[0] != p[g-&gt;Nv])\n{\nprintf(\"NO\\n\");\n}\nelse\n{\nfor (i = 0; i &lt; g-&gt;Nv; i++)\nflag[i] = 0;\nfor (i = 1; i &lt; g-&gt;Nv + 1; i++)\n{\nif (flag[p[i - 1] - 1] == 1)\n{\nprintf(\"NO\\n\");\nreturn;\n}\ncur = g-&gt;G[p[i - 1] - 1].FirstEdge;\nwhile (cur != NULL &amp;&amp; cur-&gt;AdjV != p[i])\ncur = cur-&gt;Next;\nif (cur == NULL)\n{\nprintf(\"NO\\n\");\nreturn;\n}\nflag[p[i - 1] - 1] = 1;\n}\nprintf(\"YES\\n\");\n}\n}\n</code></pre>"}]}